/* Generated by Cython 3.0.11 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "/tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/core/include/numpy/arrayobject.h",
            "/tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/core/include/numpy/arrayscalars.h",
            "/tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/core/include/numpy/ndarrayobject.h",
            "/tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/core/include/numpy/ndarraytypes.h",
            "/tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/core/include/numpy/ufuncobject.h"
        ],
        "extra_compile_args": [
            "-O3"
        ],
        "extra_link_args": [
            "-O3"
        ],
        "include_dirs": [
            "/tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/core/include"
        ],
        "language": "c++",
        "name": "Pythonreflectivity",
        "sources": [
            "UTILS/Pythonreflectivity.pyx"
        ]
    },
    "module_name": "Pythonreflectivity"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#if defined(CYTHON_LIMITED_API) && CYTHON_LIMITED_API
#define __PYX_EXTRA_ABI_MODULE_NAME "limited"
#else
#define __PYX_EXTRA_ABI_MODULE_NAME ""
#endif
#define CYTHON_ABI "3_0_11" __PYX_EXTRA_ABI_MODULE_NAME
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x03000BF0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(Py_GIL_DISABLED) || defined(Py_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL 1
  #endif
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 0
  #endif
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    static CYTHON_INLINE PyObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *exception_table = NULL;
        PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
        #if __PYX_LIMITED_VERSION_HEX < 0x030B0000
        PyObject *version_info;
        PyObject *py_minor_version = NULL;
        #endif
        long minor_version = 0;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        #if __PYX_LIMITED_VERSION_HEX >= 0x030B0000
        minor_version = 11;
        #else
        if (!(version_info = PySys_GetObject("version_info"))) goto end;
        if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
        minor_version = PyLong_AsLong(py_minor_version);
        Py_DECREF(py_minor_version);
        if (minor_version == -1 && PyErr_Occurred()) goto end;
        #endif
        if (!(types_module = PyImport_ImportModule("types"))) goto end;
        if (!(code_type = PyObject_GetAttrString(types_module, "CodeType"))) goto end;
        if (minor_version <= 7) {
            (void)p;
            result = PyObject_CallFunction(code_type, "iiiiiOOOOOOiOO", a, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else if (minor_version <= 10) {
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else {
            if (!(exception_table = PyBytes_FromStringAndSize(NULL, 0))) goto end;
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, name, fline, lnos, exception_table, fv, cell);
        }
    end:
        Py_XDECREF(code_type);
        Py_XDECREF(exception_table);
        Py_XDECREF(types_module);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
    #ifndef CO_OPTIMIZED
    #define CO_OPTIMIZED 0x0001
    #endif
    #ifndef CO_NEWLOCALS
    #define CO_NEWLOCALS 0x0002
    #endif
    #ifndef CO_VARARGS
    #define CO_VARARGS 0x0004
    #endif
    #ifndef CO_VARKEYWORDS
    #define CO_VARKEYWORDS 0x0008
    #endif
    #ifndef CO_ASYNC_GENERATOR
    #define CO_ASYNC_GENERATOR 0x0200
    #endif
    #ifndef CO_GENERATOR
    #define CO_GENERATOR 0x0020
    #endif
    #ifndef CO_COROUTINE
    #define CO_COROUTINE 0x0080
    #endif
#elif PY_VERSION_HEX >= 0x030B0000
  static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
    PyCodeObject *result;
    PyObject *empty_bytes = PyBytes_FromStringAndSize("", 0);
    if (!empty_bytes) return NULL;
    result =
      #if PY_VERSION_HEX >= 0x030C0000
        PyUnstable_Code_NewWithPosOnlyArgs
      #else
        PyCode_NewWithPosOnlyArgs
      #endif
        (a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, name, fline, lnos, empty_bytes);
    Py_DECREF(empty_bytes);
    return result;
  }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #if PY_VERSION_HEX >= 0x030d00A4
  #  define __Pyx_PyCFunctionFast PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
  #else
  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
  #endif
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_MAJOR_VERSION >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void *cfunc) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000 || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && PY_VERSION_HEX < 0x030d0000 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyObject_GenericSetAttr((PyObject*)tp, k, v)
#else
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyDict_SetItem(tp->tp_dict, k, v)
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__;  (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__Pythonreflectivity
#define __PYX_HAVE_API__Pythonreflectivity
/* Early includes */
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

    /* Using NumPy API declarations from "numpy/__init__.cython-30.pxd" */
    
#include "numpy/arrayobject.h"
#include "numpy/ndarrayobject.h"
#include "numpy/ndarraytypes.h"
#include "numpy/arrayscalars.h"
#include "numpy/ufuncobject.h"
#include <math.h>
#include "complexobject.h"
#include "math.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
#include <string.h>
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#include <string.h>
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif (defined(_Complex_I) && !defined(_MSC_VER)) || ((defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) && !defined(__STDC_NO_COMPLEX__) && !defined(_MSC_VER))
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "UTILS/Pythonreflectivity.pyx",
  "<stringsource>",
  "__init__.cython-30.pxd",
  "type.pxd",
};
/* #### Code section: utility_code_proto_before_types ### */
/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* #### Code section: numeric_typedefs ### */

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":730
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":731
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":732
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":733
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":737
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":738
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":739
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":740
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":744
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":745
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":754
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":755
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":757
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":758
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":760
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":761
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":763
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":764
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":765
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* #### Code section: complex_type_declarations ### */
/* Declarations.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

/* Declarations.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_18Pythonreflectivity_Lowestlayer;
struct __pyx_obj_18Pythonreflectivity_Layer;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":767
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":768
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":769
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":771
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;
struct __pyx_t_18Pythonreflectivity_CLayer;
struct __pyx_t_18Pythonreflectivity_Heterostructure;

/* "Pythonreflectivity.pyx":18
 * 
 * 
 * cdef struct CLayer:             # <<<<<<<<<<<<<<
 *     double Thickness, Roughness
 *     double complex ex, ey, ez, eg
 */
struct __pyx_t_18Pythonreflectivity_CLayer {
  double Thickness;
  double Roughness;
  __pyx_t_double_complex ex;
  __pyx_t_double_complex ey;
  __pyx_t_double_complex ez;
  __pyx_t_double_complex eg;
  int type;
  int magdir;
};

/* "Pythonreflectivity.pyx":27
 * cdef double deg_to_rad=0.017453292522222223
 * 
 * cdef struct Heterostructure:             # <<<<<<<<<<<<<<
 *     int NLayers
 *     int NLayers_types
 */
struct __pyx_t_18Pythonreflectivity_Heterostructure {
  int NLayers;
  int NLayers_types;
  int *MLLENGTH;
  int *MLREP;
  int **MLCOMP;
  struct __pyx_t_18Pythonreflectivity_CLayer *LR;
};

/* "Pythonreflectivity.pyx":37
 * 
 * 
 * cdef class Lowestlayer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef Heterostructure Mother
 */
struct __pyx_obj_18Pythonreflectivity_Lowestlayer {
  PyObject_HEAD
  struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer *__pyx_vtab;
  struct __pyx_t_18Pythonreflectivity_CLayer Layercontent;
  struct __pyx_t_18Pythonreflectivity_Heterostructure Mother;
  int islowestlayer;
};


/* "Pythonreflectivity.pyx":260
 * #        self.islowestlayer==x[8]
 * 
 * cdef class Layer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 */
struct __pyx_obj_18Pythonreflectivity_Layer {
  PyObject_HEAD
  struct __pyx_vtabstruct_18Pythonreflectivity_Layer *__pyx_vtab;
  struct __pyx_t_18Pythonreflectivity_CLayer Layercontent;
  int islowestlayer;
};



/* "Pythonreflectivity.pyx":37
 * 
 * 
 * cdef class Lowestlayer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef Heterostructure Mother
 */

struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer {
  int (*isthisthelowestlayer)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  long (*layercontentpointer)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  long (*motherpointer)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  double (*d)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  PyObject *(*setd)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch);
  double (*sigma)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  PyObject *(*setsigma)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsxx)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsyy)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epszz)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*eg)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  int (*GetType)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *);
  int (*dir)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *);
};
static struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer *__pyx_vtabptr_18Pythonreflectivity_Lowestlayer;


/* "Pythonreflectivity.pyx":260
 * #        self.islowestlayer==x[8]
 * 
 * cdef class Layer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 */

struct __pyx_vtabstruct_18Pythonreflectivity_Layer {
  int (*isthisthelowestlayer)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  long (*layercontentpointer)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  double (*d)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  PyObject *(*setd)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch);
  double (*sigma)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  PyObject *(*setsigma)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsxx)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsyy)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epszz)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsg)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  int (*GetType)(struct __pyx_obj_18Pythonreflectivity_Layer *);
  int (*dir)(struct __pyx_obj_18Pythonreflectivity_Layer *);
};
static struct __pyx_vtabstruct_18Pythonreflectivity_Layer *__pyx_vtabptr_18Pythonreflectivity_Layer;
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_VARARGS(args, i) PySequence_GetItem(args, i)
#elif CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#else
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GetItem(args, i)
#endif
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_NewRef_VARARGS(arg) __Pyx_NewRef(arg)
    #define __Pyx_Arg_XDECREF_VARARGS(arg) Py_XDECREF(arg)
#else
    #define __Pyx_Arg_NewRef_VARARGS(arg) arg
    #define __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
    CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues);
  #else
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
  #endif
    #define __Pyx_Arg_NewRef_FASTCALL(arg) arg  /* no-op, __Pyx_Arg_FASTCALL is direct and this needs
                                                   to have the same reference counting */
    #define __Pyx_Arg_XDECREF_FASTCALL(arg)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
    #define __Pyx_Arg_NewRef_FASTCALL(arg) __Pyx_Arg_NewRef_VARARGS(arg)
    #define __Pyx_Arg_XDECREF_FASTCALL(arg) __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyIntCompare.proto */
static CYTHON_INLINE int __Pyx_PyInt_BoolNeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kw, const char* function_name, int kw_allowed);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* PyIntCompare.proto */
static CYTHON_INLINE int __Pyx_PyInt_BoolEqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* ModFloat[double].proto */
static CYTHON_INLINE double __Pyx_mod_double(double, double);

/* ModInt[long].proto */
static CYTHON_INLINE long __Pyx_mod_long(long, long);

/* PyObject_Str.proto */
#define __Pyx_PyObject_Str(obj)\
    (likely(PyString_CheckExact(obj)) ? __Pyx_NewRef(obj) : PyObject_Str(obj))

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* SetItemInt.proto */
#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

/* RaiseUnboundLocalError.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyTypeObject* typeptr , void* vtable);

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyTypeObject *type);

/* MergeVTables.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type);
#endif

/* SetupReduce.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce(PyObject* type_obj);
#endif

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto_3_0_11
#define __PYX_HAVE_RT_ImportType_proto_3_0_11
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_11(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_11(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_3_0_11 {
   __Pyx_ImportType_CheckSize_Error_3_0_11 = 0,
   __Pyx_ImportType_CheckSize_Warn_3_0_11 = 1,
   __Pyx_ImportType_CheckSize_Ignore_3_0_11 = 2
};
static PyTypeObject *__Pyx_ImportType_3_0_11(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_11 check_size);
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);
#endif

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    PyObject *typesModule=NULL, *methodType=NULL, *result=NULL;
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    typesModule = PyImport_ImportModule("types");
    if (!typesModule) return NULL;
    methodType = PyObject_GetAttrString(typesModule, "MethodType");
    Py_DECREF(typesModule);
    if (!methodType) return NULL;
    result = PyObject_CallFunctionObjArgs(methodType, func, self, NULL);
    Py_DECREF(methodType);
    return result;
}
#elif PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject_HEAD
    PyObject *func;
#elif PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#undef __Pyx_CyOrPyCFunction_Check
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_CyOrPyCFunction_Check(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc);
#undef __Pyx_IsSameCFunction
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCyOrCFunction(func, cfunc)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* None.proto */
#include <new>

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* FromPy.proto */
static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject*);

/* ToPy.proto */
#define __pyx_PyComplex_FromComplex(z)\
        PyComplex_FromDoubles((double)__Pyx_CREAL(z),\
                              (double)__Pyx_CIMAG(z))

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */
static CYTHON_INLINE PyObject *__pyx_f_5numpy_7ndarray_4base_base(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE PyArray_Descr *__pyx_f_5numpy_7ndarray_5descr_descr(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE int __pyx_f_5numpy_7ndarray_4ndim_ndim(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_5shape_shape(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_7strides_strides(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp __pyx_f_5numpy_7ndarray_4size_size(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE char *__pyx_f_5numpy_7ndarray_4data_data(PyArrayObject *__pyx_v_self); /* proto*/
static int __pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_18Pythonreflectivity_11Lowestlayer_GetType(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto*/
static int __pyx_f_18Pythonreflectivity_11Lowestlayer_dir(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static long __pyx_f_18Pythonreflectivity_5Layer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_GetType(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_dir(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto*/

/* Module declarations from "cython" */

/* Module declarations from "libc.string" */

/* Module declarations from "libc.stdlib" */

/* Module declarations from "libc.stdio" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.type" */

/* Module declarations from "cpython" */

/* Module declarations from "cpython.object" */

/* Module declarations from "cpython.ref" */

/* Module declarations from "numpy" */

/* Module declarations from "numpy" */
static CYTHON_INLINE int __pyx_f_5numpy_import_array(void); /*proto*/

/* Module declarations from "libc.math" */

/* Module declarations from "Pythonreflectivity" */
static double __pyx_v_18Pythonreflectivity_two_times_pi;
static double __pyx_v_18Pythonreflectivity_deg_to_rad;
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cquadr(__pyx_t_double_complex); /*proto*/
static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_quadr(double); /*proto*/
static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_t_double_complex); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cconj(__pyx_t_double_complex); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZsigma(double, __pyx_t_double_complex); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi(double, __pyx_t_double_complex, __pyx_t_double_complex); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi_m(double, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer(__pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_ipow(__pyx_t_double_complex, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, double, double, double, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Elimination_4x4(__pyx_t_double_complex (*)[4][4], __pyx_t_double_complex (*)[4]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_rt(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], int, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_PHI_to_PSI(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], int); /*proto*/
static void __pyx_f_18Pythonreflectivity_MagneticPhi(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_NormalPhi(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_ANXBN(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Invert2x2(__pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_FillC0(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_rootfunc2(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex); /*proto*/
static void __pyx_f_18Pythonreflectivity_MagneticPhi_z(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_PHI_to_PSI_z(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], int); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_rt_z(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], int, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static int __pyx_f_18Pythonreflectivity_FindLayerNumber(PyObject *, PyObject *); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_MakeConsistencyCheck(PyObject *, struct __pyx_t_18Pythonreflectivity_Heterostructure *, PyObject *); /*proto*/
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "Pythonreflectivity"
extern int __pyx_module_is_main_Pythonreflectivity;
int __pyx_module_is_main_Pythonreflectivity = 0;

/* Implementation of "Pythonreflectivity" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_ImportError;
/* #### Code section: string_decls ### */
static const char __pyx_k_0[] = "0";
static const char __pyx_k_A[] = "A";
static const char __pyx_k_B[] = "B";
static const char __pyx_k_P[] = "P";
static const char __pyx_k_S[] = "S";
static const char __pyx_k_T[] = "T";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_t[] = "t";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_HS[] = "HS";
static const char __pyx_k__3[] = ",";
static const char __pyx_k__4[] = "(";
static const char __pyx_k__5[] = "*(";
static const char __pyx_k__6[] = ")";
static const char __pyx_k_eg[] = "eg";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_th[] = "th";
static const char __pyx_k_wl[] = "wl";
static const char __pyx_k__21[] = "*";
static const char __pyx_k__78[] = "?";
static const char __pyx_k_dir[] = "dir";
static const char __pyx_k_eps[] = "eps";
static const char __pyx_k_len[] = "__len__";
static const char __pyx_k_mag[] = "mag";
static const char __pyx_k_rpp[] = "rpp";
static const char __pyx_k_rss[] = "rss";
static const char __pyx_k_allx[] = "allx";
static const char __pyx_k_ally[] = "ally";
static const char __pyx_k_allz[] = "allz";
static const char __pyx_k_epsg[] = "epsg";
static const char __pyx_k_find[] = "find";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_rmat[] = "rmat";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_setd[] = "setd";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_Layer[] = "Layer ";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_epsxx[] = "epsxx";
static const char __pyx_k_epsyy[] = "epsyy";
static const char __pyx_k_epszz[] = "epszz";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_routl[] = "routl";
static const char __pyx_k_routp[] = "routp";
static const char __pyx_k_routr[] = "routr";
static const char __pyx_k_routs[] = "routs";
static const char __pyx_k_sigma[] = "sigma";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_zeros[] = "zeros";
static const char __pyx_k_Output[] = "Output";
static const char __pyx_k_ctypes[] = "ctypes";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_rempty[] = "rempty";
static const char __pyx_k_seteps[] = "seteps";
static const char __pyx_k_setmag[] = "setmag";
static const char __pyx_k_Layer_2[] = "Layer";
static const char __pyx_k_Layer_d[] = "Layer.d";
static const char __pyx_k_NAngles[] = "NAngles";
static const char __pyx_k_NLayers[] = "NLayers";
static const char __pyx_k_default[] = "default";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_epsilon[] = "epsilon";
static const char __pyx_k_setepsg[] = "setepsg";
static const char __pyx_k_NL_types[] = "NL_types";
static const char __pyx_k_Setting1[] = "Setting1";
static const char __pyx_k_Setting2[] = "Setting2";
static const char __pyx_k_Setting3[] = "Setting3";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_setepsxx[] = "setepsxx";
static const char __pyx_k_setepsyy[] = "setepsyy";
static const char __pyx_k_setepszz[] = "setepszz";
static const char __pyx_k_setsigma[] = "setsigma";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_Layer_eps[] = "Layer.eps";
static const char __pyx_k_Layer_mag[] = "Layer.mag";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_Cutoffquad[] = "Cutoffquad";
static const char __pyx_k_Layer_epsg[] = "Layer.epsg";
static const char __pyx_k_Layer_setd[] = "Layer.setd";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_wavelength[] = "wavelength";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_Layer_epsxx[] = "Layer.epsxx";
static const char __pyx_k_Layer_epsyy[] = "Layer.epsyy";
static const char __pyx_k_Layer_epszz[] = "Layer.epszz";
static const char __pyx_k_Layer_sigma[] = "Layer.sigma";
static const char __pyx_k_Lowestlayer[] = "Lowestlayer";
static const char __pyx_k_MLstructure[] = "MLstructure";
static const char __pyx_k_Layer_seteps[] = "Layer.seteps";
static const char __pyx_k_Layer_setmag[] = "Layer.setmag";
static const char __pyx_k_Reflectivity[] = "Reflectivity";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_stringsource[] = "<stringsource>";
static const char __pyx_k_Layer_setepsg[] = "Layer.setepsg";
static const char __pyx_k_Lowestlayer_d[] = "Lowestlayer.d";
static const char __pyx_k_NLayers_types[] = "NLayers_types";
static const char __pyx_k_class_getitem[] = "__class_getitem__";
static const char __pyx_k_motherpointer[] = "motherpointer";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_Layer_setepsxx[] = "Layer.setepsxx";
static const char __pyx_k_Layer_setepsyy[] = "Layer.setepsyy";
static const char __pyx_k_Layer_setepszz[] = "Layer.setepszz";
static const char __pyx_k_Layer_setsigma[] = "Layer.setsigma";
static const char __pyx_k_Lowestlayer_eg[] = "Lowestlayer.eg";
static const char __pyx_k_MagneticCutoff[] = "MagneticCutoff";
static const char __pyx_k_Lowestlayer_eps[] = "Lowestlayer.eps";
static const char __pyx_k_Lowestlayer_mag[] = "Lowestlayer.mag";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_Lowestlayer_setd[] = "Lowestlayer.setd";
static const char __pyx_k_Lowestlayer_epsxx[] = "Lowestlayer.epsxx";
static const char __pyx_k_Lowestlayer_epsyy[] = "Lowestlayer.epsyy";
static const char __pyx_k_Lowestlayer_epszz[] = "Lowestlayer.epszz";
static const char __pyx_k_Lowestlayer_sigma[] = "Lowestlayer.sigma";
static const char __pyx_k_Generate_structure[] = "Generate_structure";
static const char __pyx_k_Lowestlayer_seteps[] = "Lowestlayer.seteps";
static const char __pyx_k_Lowestlayer_setmag[] = "Lowestlayer.setmag";
static const char __pyx_k_MultipleScattering[] = "MultipleScattering";
static const char __pyx_k_Pythonreflectivity[] = "Pythonreflectivity";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_Lowestlayer_setepsg[] = "Lowestlayer.setepsg";
static const char __pyx_k_layercontentpointer[] = "layercontentpointer";
static const char __pyx_k_Lowestlayer_setepsxx[] = "Lowestlayer.setepsxx";
static const char __pyx_k_Lowestlayer_setepsyy[] = "Lowestlayer.setepsyy";
static const char __pyx_k_Lowestlayer_setepszz[] = "Lowestlayer.setepszz";
static const char __pyx_k_Lowestlayer_setsigma[] = "Lowestlayer.setsigma";
static const char __pyx_k_isthisthelowestlayer[] = "isthisthelowestlayer";
static const char __pyx_k_Layer___reduce_cython[] = "Layer.__reduce_cython__";
static const char __pyx_k_Layer___setstate_cython[] = "Layer.__setstate_cython__";
static const char __pyx_k_Layer_layercontentpointer[] = "Layer.layercontentpointer";
static const char __pyx_k_Lowestlayer_motherpointer[] = "Lowestlayer.motherpointer";
static const char __pyx_k_Layer_isthisthelowestlayer[] = "Layer.isthisthelowestlayer";
static const char __pyx_k_This_layer_is_not_magnetic[] = "This layer is not magnetic";
static const char __pyx_k_Lowestlayer___reduce_cython[] = "Lowestlayer.__reduce_cython__";
static const char __pyx_k_UTILS_Pythonreflectivity_pyx[] = "UTILS/Pythonreflectivity.pyx";
static const char __pyx_k_Lowestlayer___setstate_cython[] = "Lowestlayer.__setstate_cython__";
static const char __pyx_k_No_magnetization_has_been_set[] = "No magnetization has been set";
static const char __pyx_k_in_Multilayer_structure_string[] = " in Multilayer structure string is not defined";
static const char __pyx_k_Allowed_input_for_setmag_is_x_y[] = "Allowed input for setmag is 'x', 'y', 'z' or '0'";
static const char __pyx_k_Lowestlayer_layercontentpointer[] = "Lowestlayer.layercontentpointer";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_Brackets_inside_Brackets_are_not[] = "Brackets inside Brackets are not supported.";
static const char __pyx_k_Epsilon_must_be_a_number_or_an_a[] = "Epsilon must be a number or an array of length 1, 3 or 4";
static const char __pyx_k_Exception_Magnetic_heterostructu[] = "Exception! Magnetic heterostructures must have \"t\" or \"T\" as an output parameter";
static const char __pyx_k_Exception_Multiple_magnetization[] = "Exception! Multiple magnetization directions are so far not supported!";
static const char __pyx_k_Lowestlayer_isthisthelowestlayer[] = "Lowestlayer.isthisthelowestlayer";
static const char __pyx_k_Magnetized_along_the_x_direction[] = "Magnetized along the x direction";
static const char __pyx_k_Magnetized_along_the_y_direction[] = "Magnetized along the y direction";
static const char __pyx_k_Magnetized_along_the_z_direction[] = "Magnetized along the z direction";
static const char __pyx_k_Please_generate_at_least_one_lay[] = "Please generate at least one layer!";
static const char __pyx_k_Please_use_setmag_to_set_a_magne[] = "Please use setmag to set a magnetization direction for this layer before you set a gyrotropy";
static const char __pyx_k_Something_is_wrong_with_the_Mult[] = "Something is wrong with the Multilayer brackets";
static const char __pyx_k_Substrate_as_Multilayer_is_ill_d[] = "Substrate as Multilayer is ill-defined";
static const char __pyx_k_Theta_must_be_in_the_range_0_the[] = "Theta must be in the range 0<theta<=90";
static const char __pyx_k_Underlying_structure_not_initial[] = "Underlying structure not initialized. Please generate the layer list with Generate_Structure!";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_Theta_must_be_in_the_range_0_the_2[] = "Theta must be in the range 0<=theta<=90";
static const char __pyx_k_Theta_must_be_in_the_range_0_the_3[] = "Theta must be in the range 0<theta<90";
/* #### Code section: decls ### */
static int __pyx_pf_18Pythonreflectivity_11Lowestlayer___cinit__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma, PyObject *__pyx_v_MLstructure, int __pyx_v_NL_types); /* proto */
static void __pyx_pf_18Pythonreflectivity_11Lowestlayer_2__dealloc__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_4isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_6layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_8motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_10d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_12setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_14sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_16setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_18seteps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_epsilon); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_20eps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_wl); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_22epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_24epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_26epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_28eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_30setmag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_dir); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_32mag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_34setepsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_36setepsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_38setepszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_40setepsg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_42__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_44__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_18Pythonreflectivity_5Layer___cinit__(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_2isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_4layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_6d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_8setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_10sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_12setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_14seteps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_epsilon); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_16eps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_18epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_20epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_22epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_24epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_26setmag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_dir); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_28mag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_30setepsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_32setepsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_34setepszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_36setepsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_Generate_structure(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_NLayers_types, PyObject *__pyx_v_MLstructure); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_2Reflectivity(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_HS, PyObject *__pyx_v_th, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_MultipleScattering, PyObject *__pyx_v_MagneticCutoff, PyObject *__pyx_v_Output); /* proto */
static PyObject *__pyx_tp_new_18Pythonreflectivity_Lowestlayer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_18Pythonreflectivity_Layer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4type_type;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_5numpy_dtype;
  PyTypeObject *__pyx_ptype_5numpy_flatiter;
  PyTypeObject *__pyx_ptype_5numpy_broadcast;
  PyTypeObject *__pyx_ptype_5numpy_ndarray;
  PyTypeObject *__pyx_ptype_5numpy_generic;
  PyTypeObject *__pyx_ptype_5numpy_number;
  PyTypeObject *__pyx_ptype_5numpy_integer;
  PyTypeObject *__pyx_ptype_5numpy_signedinteger;
  PyTypeObject *__pyx_ptype_5numpy_unsignedinteger;
  PyTypeObject *__pyx_ptype_5numpy_inexact;
  PyTypeObject *__pyx_ptype_5numpy_floating;
  PyTypeObject *__pyx_ptype_5numpy_complexfloating;
  PyTypeObject *__pyx_ptype_5numpy_flexible;
  PyTypeObject *__pyx_ptype_5numpy_character;
  PyTypeObject *__pyx_ptype_5numpy_ufunc;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_18Pythonreflectivity_Lowestlayer;
  PyObject *__pyx_type_18Pythonreflectivity_Layer;
  #endif
  PyTypeObject *__pyx_ptype_18Pythonreflectivity_Lowestlayer;
  PyTypeObject *__pyx_ptype_18Pythonreflectivity_Layer;
  PyObject *__pyx_kp_s_0;
  PyObject *__pyx_n_s_A;
  PyObject *__pyx_kp_s_Allowed_input_for_setmag_is_x_y;
  PyObject *__pyx_n_s_B;
  PyObject *__pyx_kp_s_Brackets_inside_Brackets_are_not;
  PyObject *__pyx_n_s_Cutoffquad;
  PyObject *__pyx_kp_s_Epsilon_must_be_a_number_or_an_a;
  PyObject *__pyx_kp_s_Exception_Magnetic_heterostructu;
  PyObject *__pyx_kp_s_Exception_Multiple_magnetization;
  PyObject *__pyx_n_s_Generate_structure;
  PyObject *__pyx_n_s_HS;
  PyObject *__pyx_n_s_ImportError;
  PyObject *__pyx_kp_s_Layer;
  PyObject *__pyx_n_s_Layer_2;
  PyObject *__pyx_n_s_Layer___reduce_cython;
  PyObject *__pyx_n_s_Layer___setstate_cython;
  PyObject *__pyx_n_s_Layer_d;
  PyObject *__pyx_n_s_Layer_eps;
  PyObject *__pyx_n_s_Layer_epsg;
  PyObject *__pyx_n_s_Layer_epsxx;
  PyObject *__pyx_n_s_Layer_epsyy;
  PyObject *__pyx_n_s_Layer_epszz;
  PyObject *__pyx_n_s_Layer_isthisthelowestlayer;
  PyObject *__pyx_n_s_Layer_layercontentpointer;
  PyObject *__pyx_n_s_Layer_mag;
  PyObject *__pyx_n_s_Layer_setd;
  PyObject *__pyx_n_s_Layer_seteps;
  PyObject *__pyx_n_s_Layer_setepsg;
  PyObject *__pyx_n_s_Layer_setepsxx;
  PyObject *__pyx_n_s_Layer_setepsyy;
  PyObject *__pyx_n_s_Layer_setepszz;
  PyObject *__pyx_n_s_Layer_setmag;
  PyObject *__pyx_n_s_Layer_setsigma;
  PyObject *__pyx_n_s_Layer_sigma;
  PyObject *__pyx_n_s_Lowestlayer;
  PyObject *__pyx_n_s_Lowestlayer___reduce_cython;
  PyObject *__pyx_n_s_Lowestlayer___setstate_cython;
  PyObject *__pyx_n_s_Lowestlayer_d;
  PyObject *__pyx_n_s_Lowestlayer_eg;
  PyObject *__pyx_n_s_Lowestlayer_eps;
  PyObject *__pyx_n_s_Lowestlayer_epsxx;
  PyObject *__pyx_n_s_Lowestlayer_epsyy;
  PyObject *__pyx_n_s_Lowestlayer_epszz;
  PyObject *__pyx_n_s_Lowestlayer_isthisthelowestlayer;
  PyObject *__pyx_n_s_Lowestlayer_layercontentpointer;
  PyObject *__pyx_n_s_Lowestlayer_mag;
  PyObject *__pyx_n_s_Lowestlayer_motherpointer;
  PyObject *__pyx_n_s_Lowestlayer_setd;
  PyObject *__pyx_n_s_Lowestlayer_seteps;
  PyObject *__pyx_n_s_Lowestlayer_setepsg;
  PyObject *__pyx_n_s_Lowestlayer_setepsxx;
  PyObject *__pyx_n_s_Lowestlayer_setepsyy;
  PyObject *__pyx_n_s_Lowestlayer_setepszz;
  PyObject *__pyx_n_s_Lowestlayer_setmag;
  PyObject *__pyx_n_s_Lowestlayer_setsigma;
  PyObject *__pyx_n_s_Lowestlayer_sigma;
  PyObject *__pyx_n_s_MLstructure;
  PyObject *__pyx_n_s_MagneticCutoff;
  PyObject *__pyx_kp_s_Magnetized_along_the_x_direction;
  PyObject *__pyx_kp_s_Magnetized_along_the_y_direction;
  PyObject *__pyx_kp_s_Magnetized_along_the_z_direction;
  PyObject *__pyx_n_s_MultipleScattering;
  PyObject *__pyx_n_s_NAngles;
  PyObject *__pyx_n_s_NL_types;
  PyObject *__pyx_n_s_NLayers;
  PyObject *__pyx_n_s_NLayers_types;
  PyObject *__pyx_kp_s_No_magnetization_has_been_set;
  PyObject *__pyx_n_s_Output;
  PyObject *__pyx_n_s_P;
  PyObject *__pyx_kp_s_Please_generate_at_least_one_lay;
  PyObject *__pyx_kp_s_Please_use_setmag_to_set_a_magne;
  PyObject *__pyx_n_s_Pythonreflectivity;
  PyObject *__pyx_n_s_Reflectivity;
  PyObject *__pyx_n_s_S;
  PyObject *__pyx_n_s_Setting1;
  PyObject *__pyx_n_s_Setting2;
  PyObject *__pyx_n_s_Setting3;
  PyObject *__pyx_kp_s_Something_is_wrong_with_the_Mult;
  PyObject *__pyx_kp_s_Substrate_as_Multilayer_is_ill_d;
  PyObject *__pyx_n_s_T;
  PyObject *__pyx_kp_s_Theta_must_be_in_the_range_0_the;
  PyObject *__pyx_kp_s_Theta_must_be_in_the_range_0_the_2;
  PyObject *__pyx_kp_s_Theta_must_be_in_the_range_0_the_3;
  PyObject *__pyx_kp_s_This_layer_is_not_magnetic;
  PyObject *__pyx_n_s_TypeError;
  PyObject *__pyx_kp_s_UTILS_Pythonreflectivity_pyx;
  PyObject *__pyx_kp_s_Underlying_structure_not_initial;
  PyObject *__pyx_n_s__21;
  PyObject *__pyx_kp_s__3;
  PyObject *__pyx_kp_s__4;
  PyObject *__pyx_kp_s__5;
  PyObject *__pyx_kp_s__6;
  PyObject *__pyx_n_s__78;
  PyObject *__pyx_n_s_a;
  PyObject *__pyx_n_s_allx;
  PyObject *__pyx_n_s_ally;
  PyObject *__pyx_n_s_allz;
  PyObject *__pyx_n_s_array;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_n_s_class_getitem;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_ctypes;
  PyObject *__pyx_n_s_d;
  PyObject *__pyx_n_s_default;
  PyObject *__pyx_n_s_dir;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_n_s_dtype;
  PyObject *__pyx_n_s_eg;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_eps;
  PyObject *__pyx_n_s_epsg;
  PyObject *__pyx_n_s_epsilon;
  PyObject *__pyx_n_s_epsxx;
  PyObject *__pyx_n_s_epsyy;
  PyObject *__pyx_n_s_epszz;
  PyObject *__pyx_n_s_find;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_getstate;
  PyObject *__pyx_n_s_i;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_kp_s_in_Multilayer_structure_string;
  PyObject *__pyx_n_s_initializing;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_s_isthisthelowestlayer;
  PyObject *__pyx_n_s_layercontentpointer;
  PyObject *__pyx_n_s_len;
  PyObject *__pyx_n_s_mag;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_motherpointer;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
  PyObject *__pyx_n_s_np;
  PyObject *__pyx_n_s_numpy;
  PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
  PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
  PyObject *__pyx_n_s_p;
  PyObject *__pyx_n_s_pyx_state;
  PyObject *__pyx_n_s_pyx_vtable;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_reduce;
  PyObject *__pyx_n_s_reduce_cython;
  PyObject *__pyx_n_s_reduce_ex;
  PyObject *__pyx_n_s_rempty;
  PyObject *__pyx_n_s_rmat;
  PyObject *__pyx_n_s_routl;
  PyObject *__pyx_n_s_routp;
  PyObject *__pyx_n_s_routr;
  PyObject *__pyx_n_s_routs;
  PyObject *__pyx_n_s_rpp;
  PyObject *__pyx_n_s_rss;
  PyObject *__pyx_n_s_s;
  PyObject *__pyx_n_s_self;
  PyObject *__pyx_n_s_setd;
  PyObject *__pyx_n_s_seteps;
  PyObject *__pyx_n_s_setepsg;
  PyObject *__pyx_n_s_setepsxx;
  PyObject *__pyx_n_s_setepsyy;
  PyObject *__pyx_n_s_setepszz;
  PyObject *__pyx_n_s_setmag;
  PyObject *__pyx_n_s_setsigma;
  PyObject *__pyx_n_s_setstate;
  PyObject *__pyx_n_s_setstate_cython;
  PyObject *__pyx_n_s_sigma;
  PyObject *__pyx_n_s_spec;
  PyObject *__pyx_n_s_split;
  PyObject *__pyx_kp_s_stringsource;
  PyObject *__pyx_n_s_t;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_th;
  PyObject *__pyx_n_s_wavelength;
  PyObject *__pyx_n_s_wl;
  PyObject *__pyx_n_s_x;
  PyObject *__pyx_n_s_y;
  PyObject *__pyx_n_s_z;
  PyObject *__pyx_n_s_zeros;
  PyObject *__pyx_float_0_5;
  PyObject *__pyx_float_1_0Eneg_6;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_neg_1;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_tuple__8;
  PyObject *__pyx_tuple__9;
  PyObject *__pyx_tuple__10;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__17;
  PyObject *__pyx_tuple__18;
  PyObject *__pyx_tuple__19;
  PyObject *__pyx_tuple__20;
  PyObject *__pyx_tuple__22;
  PyObject *__pyx_tuple__27;
  PyObject *__pyx_tuple__30;
  PyObject *__pyx_tuple__32;
  PyObject *__pyx_tuple__34;
  PyObject *__pyx_tuple__36;
  PyObject *__pyx_tuple__41;
  PyObject *__pyx_tuple__44;
  PyObject *__pyx_tuple__50;
  PyObject *__pyx_tuple__72;
  PyObject *__pyx_tuple__74;
  PyObject *__pyx_tuple__75;
  PyObject *__pyx_tuple__77;
  PyObject *__pyx_codeobj__23;
  PyObject *__pyx_codeobj__24;
  PyObject *__pyx_codeobj__25;
  PyObject *__pyx_codeobj__26;
  PyObject *__pyx_codeobj__28;
  PyObject *__pyx_codeobj__29;
  PyObject *__pyx_codeobj__31;
  PyObject *__pyx_codeobj__33;
  PyObject *__pyx_codeobj__35;
  PyObject *__pyx_codeobj__37;
  PyObject *__pyx_codeobj__38;
  PyObject *__pyx_codeobj__39;
  PyObject *__pyx_codeobj__40;
  PyObject *__pyx_codeobj__42;
  PyObject *__pyx_codeobj__43;
  PyObject *__pyx_codeobj__45;
  PyObject *__pyx_codeobj__46;
  PyObject *__pyx_codeobj__47;
  PyObject *__pyx_codeobj__48;
  PyObject *__pyx_codeobj__49;
  PyObject *__pyx_codeobj__51;
  PyObject *__pyx_codeobj__52;
  PyObject *__pyx_codeobj__53;
  PyObject *__pyx_codeobj__54;
  PyObject *__pyx_codeobj__55;
  PyObject *__pyx_codeobj__56;
  PyObject *__pyx_codeobj__57;
  PyObject *__pyx_codeobj__58;
  PyObject *__pyx_codeobj__59;
  PyObject *__pyx_codeobj__60;
  PyObject *__pyx_codeobj__61;
  PyObject *__pyx_codeobj__62;
  PyObject *__pyx_codeobj__63;
  PyObject *__pyx_codeobj__64;
  PyObject *__pyx_codeobj__65;
  PyObject *__pyx_codeobj__66;
  PyObject *__pyx_codeobj__67;
  PyObject *__pyx_codeobj__68;
  PyObject *__pyx_codeobj__69;
  PyObject *__pyx_codeobj__70;
  PyObject *__pyx_codeobj__71;
  PyObject *__pyx_codeobj__73;
  PyObject *__pyx_codeobj__76;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4type_type);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_dtype);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_flatiter);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_broadcast);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_ndarray);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_generic);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_number);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_integer);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_signedinteger);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_unsignedinteger);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_inexact);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_floating);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_complexfloating);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_flexible);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_character);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_ufunc);
  Py_CLEAR(clear_module_state->__pyx_ptype_18Pythonreflectivity_Lowestlayer);
  Py_CLEAR(clear_module_state->__pyx_type_18Pythonreflectivity_Lowestlayer);
  Py_CLEAR(clear_module_state->__pyx_ptype_18Pythonreflectivity_Layer);
  Py_CLEAR(clear_module_state->__pyx_type_18Pythonreflectivity_Layer);
  Py_CLEAR(clear_module_state->__pyx_kp_s_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Allowed_input_for_setmag_is_x_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_B);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Brackets_inside_Brackets_are_not);
  Py_CLEAR(clear_module_state->__pyx_n_s_Cutoffquad);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Epsilon_must_be_a_number_or_an_a);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Exception_Magnetic_heterostructu);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Exception_Multiple_magnetization);
  Py_CLEAR(clear_module_state->__pyx_n_s_Generate_structure);
  Py_CLEAR(clear_module_state->__pyx_n_s_HS);
  Py_CLEAR(clear_module_state->__pyx_n_s_ImportError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Layer);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_eps);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_epsg);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_epsxx);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_epsyy);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_epszz);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_isthisthelowestlayer);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_layercontentpointer);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_mag);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_setd);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_seteps);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_setepsg);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_setepsxx);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_setepsyy);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_setepszz);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_setmag);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_setsigma);
  Py_CLEAR(clear_module_state->__pyx_n_s_Layer_sigma);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_eg);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_eps);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_epsxx);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_epsyy);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_epszz);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_isthisthelowestlayer);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_layercontentpointer);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_mag);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_motherpointer);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_setd);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_seteps);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_setepsg);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_setepsxx);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_setepsyy);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_setepszz);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_setmag);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_setsigma);
  Py_CLEAR(clear_module_state->__pyx_n_s_Lowestlayer_sigma);
  Py_CLEAR(clear_module_state->__pyx_n_s_MLstructure);
  Py_CLEAR(clear_module_state->__pyx_n_s_MagneticCutoff);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Magnetized_along_the_x_direction);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Magnetized_along_the_y_direction);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Magnetized_along_the_z_direction);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultipleScattering);
  Py_CLEAR(clear_module_state->__pyx_n_s_NAngles);
  Py_CLEAR(clear_module_state->__pyx_n_s_NL_types);
  Py_CLEAR(clear_module_state->__pyx_n_s_NLayers);
  Py_CLEAR(clear_module_state->__pyx_n_s_NLayers_types);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_magnetization_has_been_set);
  Py_CLEAR(clear_module_state->__pyx_n_s_Output);
  Py_CLEAR(clear_module_state->__pyx_n_s_P);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Please_generate_at_least_one_lay);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Please_use_setmag_to_set_a_magne);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pythonreflectivity);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reflectivity);
  Py_CLEAR(clear_module_state->__pyx_n_s_S);
  Py_CLEAR(clear_module_state->__pyx_n_s_Setting1);
  Py_CLEAR(clear_module_state->__pyx_n_s_Setting2);
  Py_CLEAR(clear_module_state->__pyx_n_s_Setting3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Something_is_wrong_with_the_Mult);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Substrate_as_Multilayer_is_ill_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Theta_must_be_in_the_range_0_the);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Theta_must_be_in_the_range_0_the_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Theta_must_be_in_the_range_0_the_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_This_layer_is_not_magnetic);
  Py_CLEAR(clear_module_state->__pyx_n_s_TypeError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_UTILS_Pythonreflectivity_pyx);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Underlying_structure_not_initial);
  Py_CLEAR(clear_module_state->__pyx_n_s__21);
  Py_CLEAR(clear_module_state->__pyx_kp_s__3);
  Py_CLEAR(clear_module_state->__pyx_kp_s__4);
  Py_CLEAR(clear_module_state->__pyx_kp_s__5);
  Py_CLEAR(clear_module_state->__pyx_kp_s__6);
  Py_CLEAR(clear_module_state->__pyx_n_s__78);
  Py_CLEAR(clear_module_state->__pyx_n_s_a);
  Py_CLEAR(clear_module_state->__pyx_n_s_allx);
  Py_CLEAR(clear_module_state->__pyx_n_s_ally);
  Py_CLEAR(clear_module_state->__pyx_n_s_allz);
  Py_CLEAR(clear_module_state->__pyx_n_s_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_n_s_class_getitem);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_ctypes);
  Py_CLEAR(clear_module_state->__pyx_n_s_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_default);
  Py_CLEAR(clear_module_state->__pyx_n_s_dir);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_n_s_dtype);
  Py_CLEAR(clear_module_state->__pyx_n_s_eg);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_eps);
  Py_CLEAR(clear_module_state->__pyx_n_s_epsg);
  Py_CLEAR(clear_module_state->__pyx_n_s_epsilon);
  Py_CLEAR(clear_module_state->__pyx_n_s_epsxx);
  Py_CLEAR(clear_module_state->__pyx_n_s_epsyy);
  Py_CLEAR(clear_module_state->__pyx_n_s_epszz);
  Py_CLEAR(clear_module_state->__pyx_n_s_find);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_getstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_i);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_kp_s_in_Multilayer_structure_string);
  Py_CLEAR(clear_module_state->__pyx_n_s_initializing);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_isthisthelowestlayer);
  Py_CLEAR(clear_module_state->__pyx_n_s_layercontentpointer);
  Py_CLEAR(clear_module_state->__pyx_n_s_len);
  Py_CLEAR(clear_module_state->__pyx_n_s_mag);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_motherpointer);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_CLEAR(clear_module_state->__pyx_n_s_np);
  Py_CLEAR(clear_module_state->__pyx_n_s_numpy);
  Py_CLEAR(clear_module_state->__pyx_kp_s_numpy_core_multiarray_failed_to);
  Py_CLEAR(clear_module_state->__pyx_kp_s_numpy_core_umath_failed_to_impor);
  Py_CLEAR(clear_module_state->__pyx_n_s_p);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_vtable);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_ex);
  Py_CLEAR(clear_module_state->__pyx_n_s_rempty);
  Py_CLEAR(clear_module_state->__pyx_n_s_rmat);
  Py_CLEAR(clear_module_state->__pyx_n_s_routl);
  Py_CLEAR(clear_module_state->__pyx_n_s_routp);
  Py_CLEAR(clear_module_state->__pyx_n_s_routr);
  Py_CLEAR(clear_module_state->__pyx_n_s_routs);
  Py_CLEAR(clear_module_state->__pyx_n_s_rpp);
  Py_CLEAR(clear_module_state->__pyx_n_s_rss);
  Py_CLEAR(clear_module_state->__pyx_n_s_s);
  Py_CLEAR(clear_module_state->__pyx_n_s_self);
  Py_CLEAR(clear_module_state->__pyx_n_s_setd);
  Py_CLEAR(clear_module_state->__pyx_n_s_seteps);
  Py_CLEAR(clear_module_state->__pyx_n_s_setepsg);
  Py_CLEAR(clear_module_state->__pyx_n_s_setepsxx);
  Py_CLEAR(clear_module_state->__pyx_n_s_setepsyy);
  Py_CLEAR(clear_module_state->__pyx_n_s_setepszz);
  Py_CLEAR(clear_module_state->__pyx_n_s_setmag);
  Py_CLEAR(clear_module_state->__pyx_n_s_setsigma);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_sigma);
  Py_CLEAR(clear_module_state->__pyx_n_s_spec);
  Py_CLEAR(clear_module_state->__pyx_n_s_split);
  Py_CLEAR(clear_module_state->__pyx_kp_s_stringsource);
  Py_CLEAR(clear_module_state->__pyx_n_s_t);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_th);
  Py_CLEAR(clear_module_state->__pyx_n_s_wavelength);
  Py_CLEAR(clear_module_state->__pyx_n_s_wl);
  Py_CLEAR(clear_module_state->__pyx_n_s_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_z);
  Py_CLEAR(clear_module_state->__pyx_n_s_zeros);
  Py_CLEAR(clear_module_state->__pyx_float_0_5);
  Py_CLEAR(clear_module_state->__pyx_float_1_0Eneg_6);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_neg_1);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_tuple__8);
  Py_CLEAR(clear_module_state->__pyx_tuple__9);
  Py_CLEAR(clear_module_state->__pyx_tuple__10);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__17);
  Py_CLEAR(clear_module_state->__pyx_tuple__18);
  Py_CLEAR(clear_module_state->__pyx_tuple__19);
  Py_CLEAR(clear_module_state->__pyx_tuple__20);
  Py_CLEAR(clear_module_state->__pyx_tuple__22);
  Py_CLEAR(clear_module_state->__pyx_tuple__27);
  Py_CLEAR(clear_module_state->__pyx_tuple__30);
  Py_CLEAR(clear_module_state->__pyx_tuple__32);
  Py_CLEAR(clear_module_state->__pyx_tuple__34);
  Py_CLEAR(clear_module_state->__pyx_tuple__36);
  Py_CLEAR(clear_module_state->__pyx_tuple__41);
  Py_CLEAR(clear_module_state->__pyx_tuple__44);
  Py_CLEAR(clear_module_state->__pyx_tuple__50);
  Py_CLEAR(clear_module_state->__pyx_tuple__72);
  Py_CLEAR(clear_module_state->__pyx_tuple__74);
  Py_CLEAR(clear_module_state->__pyx_tuple__75);
  Py_CLEAR(clear_module_state->__pyx_tuple__77);
  Py_CLEAR(clear_module_state->__pyx_codeobj__23);
  Py_CLEAR(clear_module_state->__pyx_codeobj__24);
  Py_CLEAR(clear_module_state->__pyx_codeobj__25);
  Py_CLEAR(clear_module_state->__pyx_codeobj__26);
  Py_CLEAR(clear_module_state->__pyx_codeobj__28);
  Py_CLEAR(clear_module_state->__pyx_codeobj__29);
  Py_CLEAR(clear_module_state->__pyx_codeobj__31);
  Py_CLEAR(clear_module_state->__pyx_codeobj__33);
  Py_CLEAR(clear_module_state->__pyx_codeobj__35);
  Py_CLEAR(clear_module_state->__pyx_codeobj__37);
  Py_CLEAR(clear_module_state->__pyx_codeobj__38);
  Py_CLEAR(clear_module_state->__pyx_codeobj__39);
  Py_CLEAR(clear_module_state->__pyx_codeobj__40);
  Py_CLEAR(clear_module_state->__pyx_codeobj__42);
  Py_CLEAR(clear_module_state->__pyx_codeobj__43);
  Py_CLEAR(clear_module_state->__pyx_codeobj__45);
  Py_CLEAR(clear_module_state->__pyx_codeobj__46);
  Py_CLEAR(clear_module_state->__pyx_codeobj__47);
  Py_CLEAR(clear_module_state->__pyx_codeobj__48);
  Py_CLEAR(clear_module_state->__pyx_codeobj__49);
  Py_CLEAR(clear_module_state->__pyx_codeobj__51);
  Py_CLEAR(clear_module_state->__pyx_codeobj__52);
  Py_CLEAR(clear_module_state->__pyx_codeobj__53);
  Py_CLEAR(clear_module_state->__pyx_codeobj__54);
  Py_CLEAR(clear_module_state->__pyx_codeobj__55);
  Py_CLEAR(clear_module_state->__pyx_codeobj__56);
  Py_CLEAR(clear_module_state->__pyx_codeobj__57);
  Py_CLEAR(clear_module_state->__pyx_codeobj__58);
  Py_CLEAR(clear_module_state->__pyx_codeobj__59);
  Py_CLEAR(clear_module_state->__pyx_codeobj__60);
  Py_CLEAR(clear_module_state->__pyx_codeobj__61);
  Py_CLEAR(clear_module_state->__pyx_codeobj__62);
  Py_CLEAR(clear_module_state->__pyx_codeobj__63);
  Py_CLEAR(clear_module_state->__pyx_codeobj__64);
  Py_CLEAR(clear_module_state->__pyx_codeobj__65);
  Py_CLEAR(clear_module_state->__pyx_codeobj__66);
  Py_CLEAR(clear_module_state->__pyx_codeobj__67);
  Py_CLEAR(clear_module_state->__pyx_codeobj__68);
  Py_CLEAR(clear_module_state->__pyx_codeobj__69);
  Py_CLEAR(clear_module_state->__pyx_codeobj__70);
  Py_CLEAR(clear_module_state->__pyx_codeobj__71);
  Py_CLEAR(clear_module_state->__pyx_codeobj__73);
  Py_CLEAR(clear_module_state->__pyx_codeobj__76);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4type_type);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_dtype);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_flatiter);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_broadcast);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_ndarray);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_generic);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_number);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_integer);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_signedinteger);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_unsignedinteger);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_inexact);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_floating);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_complexfloating);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_flexible);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_character);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_ufunc);
  Py_VISIT(traverse_module_state->__pyx_ptype_18Pythonreflectivity_Lowestlayer);
  Py_VISIT(traverse_module_state->__pyx_type_18Pythonreflectivity_Lowestlayer);
  Py_VISIT(traverse_module_state->__pyx_ptype_18Pythonreflectivity_Layer);
  Py_VISIT(traverse_module_state->__pyx_type_18Pythonreflectivity_Layer);
  Py_VISIT(traverse_module_state->__pyx_kp_s_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Allowed_input_for_setmag_is_x_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_B);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Brackets_inside_Brackets_are_not);
  Py_VISIT(traverse_module_state->__pyx_n_s_Cutoffquad);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Epsilon_must_be_a_number_or_an_a);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Exception_Magnetic_heterostructu);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Exception_Multiple_magnetization);
  Py_VISIT(traverse_module_state->__pyx_n_s_Generate_structure);
  Py_VISIT(traverse_module_state->__pyx_n_s_HS);
  Py_VISIT(traverse_module_state->__pyx_n_s_ImportError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Layer);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_eps);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_epsg);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_epsxx);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_epsyy);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_epszz);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_isthisthelowestlayer);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_layercontentpointer);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_mag);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_setd);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_seteps);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_setepsg);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_setepsxx);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_setepsyy);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_setepszz);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_setmag);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_setsigma);
  Py_VISIT(traverse_module_state->__pyx_n_s_Layer_sigma);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_eg);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_eps);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_epsxx);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_epsyy);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_epszz);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_isthisthelowestlayer);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_layercontentpointer);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_mag);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_motherpointer);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_setd);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_seteps);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_setepsg);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_setepsxx);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_setepsyy);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_setepszz);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_setmag);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_setsigma);
  Py_VISIT(traverse_module_state->__pyx_n_s_Lowestlayer_sigma);
  Py_VISIT(traverse_module_state->__pyx_n_s_MLstructure);
  Py_VISIT(traverse_module_state->__pyx_n_s_MagneticCutoff);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Magnetized_along_the_x_direction);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Magnetized_along_the_y_direction);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Magnetized_along_the_z_direction);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultipleScattering);
  Py_VISIT(traverse_module_state->__pyx_n_s_NAngles);
  Py_VISIT(traverse_module_state->__pyx_n_s_NL_types);
  Py_VISIT(traverse_module_state->__pyx_n_s_NLayers);
  Py_VISIT(traverse_module_state->__pyx_n_s_NLayers_types);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_magnetization_has_been_set);
  Py_VISIT(traverse_module_state->__pyx_n_s_Output);
  Py_VISIT(traverse_module_state->__pyx_n_s_P);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Please_generate_at_least_one_lay);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Please_use_setmag_to_set_a_magne);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pythonreflectivity);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reflectivity);
  Py_VISIT(traverse_module_state->__pyx_n_s_S);
  Py_VISIT(traverse_module_state->__pyx_n_s_Setting1);
  Py_VISIT(traverse_module_state->__pyx_n_s_Setting2);
  Py_VISIT(traverse_module_state->__pyx_n_s_Setting3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Something_is_wrong_with_the_Mult);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Substrate_as_Multilayer_is_ill_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Theta_must_be_in_the_range_0_the);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Theta_must_be_in_the_range_0_the_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Theta_must_be_in_the_range_0_the_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_This_layer_is_not_magnetic);
  Py_VISIT(traverse_module_state->__pyx_n_s_TypeError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_UTILS_Pythonreflectivity_pyx);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Underlying_structure_not_initial);
  Py_VISIT(traverse_module_state->__pyx_n_s__21);
  Py_VISIT(traverse_module_state->__pyx_kp_s__3);
  Py_VISIT(traverse_module_state->__pyx_kp_s__4);
  Py_VISIT(traverse_module_state->__pyx_kp_s__5);
  Py_VISIT(traverse_module_state->__pyx_kp_s__6);
  Py_VISIT(traverse_module_state->__pyx_n_s__78);
  Py_VISIT(traverse_module_state->__pyx_n_s_a);
  Py_VISIT(traverse_module_state->__pyx_n_s_allx);
  Py_VISIT(traverse_module_state->__pyx_n_s_ally);
  Py_VISIT(traverse_module_state->__pyx_n_s_allz);
  Py_VISIT(traverse_module_state->__pyx_n_s_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_n_s_class_getitem);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_ctypes);
  Py_VISIT(traverse_module_state->__pyx_n_s_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_default);
  Py_VISIT(traverse_module_state->__pyx_n_s_dir);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_n_s_dtype);
  Py_VISIT(traverse_module_state->__pyx_n_s_eg);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_eps);
  Py_VISIT(traverse_module_state->__pyx_n_s_epsg);
  Py_VISIT(traverse_module_state->__pyx_n_s_epsilon);
  Py_VISIT(traverse_module_state->__pyx_n_s_epsxx);
  Py_VISIT(traverse_module_state->__pyx_n_s_epsyy);
  Py_VISIT(traverse_module_state->__pyx_n_s_epszz);
  Py_VISIT(traverse_module_state->__pyx_n_s_find);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_getstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_i);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_kp_s_in_Multilayer_structure_string);
  Py_VISIT(traverse_module_state->__pyx_n_s_initializing);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_isthisthelowestlayer);
  Py_VISIT(traverse_module_state->__pyx_n_s_layercontentpointer);
  Py_VISIT(traverse_module_state->__pyx_n_s_len);
  Py_VISIT(traverse_module_state->__pyx_n_s_mag);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_motherpointer);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_VISIT(traverse_module_state->__pyx_n_s_np);
  Py_VISIT(traverse_module_state->__pyx_n_s_numpy);
  Py_VISIT(traverse_module_state->__pyx_kp_s_numpy_core_multiarray_failed_to);
  Py_VISIT(traverse_module_state->__pyx_kp_s_numpy_core_umath_failed_to_impor);
  Py_VISIT(traverse_module_state->__pyx_n_s_p);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_vtable);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_ex);
  Py_VISIT(traverse_module_state->__pyx_n_s_rempty);
  Py_VISIT(traverse_module_state->__pyx_n_s_rmat);
  Py_VISIT(traverse_module_state->__pyx_n_s_routl);
  Py_VISIT(traverse_module_state->__pyx_n_s_routp);
  Py_VISIT(traverse_module_state->__pyx_n_s_routr);
  Py_VISIT(traverse_module_state->__pyx_n_s_routs);
  Py_VISIT(traverse_module_state->__pyx_n_s_rpp);
  Py_VISIT(traverse_module_state->__pyx_n_s_rss);
  Py_VISIT(traverse_module_state->__pyx_n_s_s);
  Py_VISIT(traverse_module_state->__pyx_n_s_self);
  Py_VISIT(traverse_module_state->__pyx_n_s_setd);
  Py_VISIT(traverse_module_state->__pyx_n_s_seteps);
  Py_VISIT(traverse_module_state->__pyx_n_s_setepsg);
  Py_VISIT(traverse_module_state->__pyx_n_s_setepsxx);
  Py_VISIT(traverse_module_state->__pyx_n_s_setepsyy);
  Py_VISIT(traverse_module_state->__pyx_n_s_setepszz);
  Py_VISIT(traverse_module_state->__pyx_n_s_setmag);
  Py_VISIT(traverse_module_state->__pyx_n_s_setsigma);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_sigma);
  Py_VISIT(traverse_module_state->__pyx_n_s_spec);
  Py_VISIT(traverse_module_state->__pyx_n_s_split);
  Py_VISIT(traverse_module_state->__pyx_kp_s_stringsource);
  Py_VISIT(traverse_module_state->__pyx_n_s_t);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_th);
  Py_VISIT(traverse_module_state->__pyx_n_s_wavelength);
  Py_VISIT(traverse_module_state->__pyx_n_s_wl);
  Py_VISIT(traverse_module_state->__pyx_n_s_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_z);
  Py_VISIT(traverse_module_state->__pyx_n_s_zeros);
  Py_VISIT(traverse_module_state->__pyx_float_0_5);
  Py_VISIT(traverse_module_state->__pyx_float_1_0Eneg_6);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_neg_1);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_tuple__8);
  Py_VISIT(traverse_module_state->__pyx_tuple__9);
  Py_VISIT(traverse_module_state->__pyx_tuple__10);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__17);
  Py_VISIT(traverse_module_state->__pyx_tuple__18);
  Py_VISIT(traverse_module_state->__pyx_tuple__19);
  Py_VISIT(traverse_module_state->__pyx_tuple__20);
  Py_VISIT(traverse_module_state->__pyx_tuple__22);
  Py_VISIT(traverse_module_state->__pyx_tuple__27);
  Py_VISIT(traverse_module_state->__pyx_tuple__30);
  Py_VISIT(traverse_module_state->__pyx_tuple__32);
  Py_VISIT(traverse_module_state->__pyx_tuple__34);
  Py_VISIT(traverse_module_state->__pyx_tuple__36);
  Py_VISIT(traverse_module_state->__pyx_tuple__41);
  Py_VISIT(traverse_module_state->__pyx_tuple__44);
  Py_VISIT(traverse_module_state->__pyx_tuple__50);
  Py_VISIT(traverse_module_state->__pyx_tuple__72);
  Py_VISIT(traverse_module_state->__pyx_tuple__74);
  Py_VISIT(traverse_module_state->__pyx_tuple__75);
  Py_VISIT(traverse_module_state->__pyx_tuple__77);
  Py_VISIT(traverse_module_state->__pyx_codeobj__23);
  Py_VISIT(traverse_module_state->__pyx_codeobj__24);
  Py_VISIT(traverse_module_state->__pyx_codeobj__25);
  Py_VISIT(traverse_module_state->__pyx_codeobj__26);
  Py_VISIT(traverse_module_state->__pyx_codeobj__28);
  Py_VISIT(traverse_module_state->__pyx_codeobj__29);
  Py_VISIT(traverse_module_state->__pyx_codeobj__31);
  Py_VISIT(traverse_module_state->__pyx_codeobj__33);
  Py_VISIT(traverse_module_state->__pyx_codeobj__35);
  Py_VISIT(traverse_module_state->__pyx_codeobj__37);
  Py_VISIT(traverse_module_state->__pyx_codeobj__38);
  Py_VISIT(traverse_module_state->__pyx_codeobj__39);
  Py_VISIT(traverse_module_state->__pyx_codeobj__40);
  Py_VISIT(traverse_module_state->__pyx_codeobj__42);
  Py_VISIT(traverse_module_state->__pyx_codeobj__43);
  Py_VISIT(traverse_module_state->__pyx_codeobj__45);
  Py_VISIT(traverse_module_state->__pyx_codeobj__46);
  Py_VISIT(traverse_module_state->__pyx_codeobj__47);
  Py_VISIT(traverse_module_state->__pyx_codeobj__48);
  Py_VISIT(traverse_module_state->__pyx_codeobj__49);
  Py_VISIT(traverse_module_state->__pyx_codeobj__51);
  Py_VISIT(traverse_module_state->__pyx_codeobj__52);
  Py_VISIT(traverse_module_state->__pyx_codeobj__53);
  Py_VISIT(traverse_module_state->__pyx_codeobj__54);
  Py_VISIT(traverse_module_state->__pyx_codeobj__55);
  Py_VISIT(traverse_module_state->__pyx_codeobj__56);
  Py_VISIT(traverse_module_state->__pyx_codeobj__57);
  Py_VISIT(traverse_module_state->__pyx_codeobj__58);
  Py_VISIT(traverse_module_state->__pyx_codeobj__59);
  Py_VISIT(traverse_module_state->__pyx_codeobj__60);
  Py_VISIT(traverse_module_state->__pyx_codeobj__61);
  Py_VISIT(traverse_module_state->__pyx_codeobj__62);
  Py_VISIT(traverse_module_state->__pyx_codeobj__63);
  Py_VISIT(traverse_module_state->__pyx_codeobj__64);
  Py_VISIT(traverse_module_state->__pyx_codeobj__65);
  Py_VISIT(traverse_module_state->__pyx_codeobj__66);
  Py_VISIT(traverse_module_state->__pyx_codeobj__67);
  Py_VISIT(traverse_module_state->__pyx_codeobj__68);
  Py_VISIT(traverse_module_state->__pyx_codeobj__69);
  Py_VISIT(traverse_module_state->__pyx_codeobj__70);
  Py_VISIT(traverse_module_state->__pyx_codeobj__71);
  Py_VISIT(traverse_module_state->__pyx_codeobj__73);
  Py_VISIT(traverse_module_state->__pyx_codeobj__76);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4type_type __pyx_mstate_global->__pyx_ptype_7cpython_4type_type
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_5numpy_dtype __pyx_mstate_global->__pyx_ptype_5numpy_dtype
#define __pyx_ptype_5numpy_flatiter __pyx_mstate_global->__pyx_ptype_5numpy_flatiter
#define __pyx_ptype_5numpy_broadcast __pyx_mstate_global->__pyx_ptype_5numpy_broadcast
#define __pyx_ptype_5numpy_ndarray __pyx_mstate_global->__pyx_ptype_5numpy_ndarray
#define __pyx_ptype_5numpy_generic __pyx_mstate_global->__pyx_ptype_5numpy_generic
#define __pyx_ptype_5numpy_number __pyx_mstate_global->__pyx_ptype_5numpy_number
#define __pyx_ptype_5numpy_integer __pyx_mstate_global->__pyx_ptype_5numpy_integer
#define __pyx_ptype_5numpy_signedinteger __pyx_mstate_global->__pyx_ptype_5numpy_signedinteger
#define __pyx_ptype_5numpy_unsignedinteger __pyx_mstate_global->__pyx_ptype_5numpy_unsignedinteger
#define __pyx_ptype_5numpy_inexact __pyx_mstate_global->__pyx_ptype_5numpy_inexact
#define __pyx_ptype_5numpy_floating __pyx_mstate_global->__pyx_ptype_5numpy_floating
#define __pyx_ptype_5numpy_complexfloating __pyx_mstate_global->__pyx_ptype_5numpy_complexfloating
#define __pyx_ptype_5numpy_flexible __pyx_mstate_global->__pyx_ptype_5numpy_flexible
#define __pyx_ptype_5numpy_character __pyx_mstate_global->__pyx_ptype_5numpy_character
#define __pyx_ptype_5numpy_ufunc __pyx_mstate_global->__pyx_ptype_5numpy_ufunc
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_18Pythonreflectivity_Lowestlayer __pyx_mstate_global->__pyx_type_18Pythonreflectivity_Lowestlayer
#define __pyx_type_18Pythonreflectivity_Layer __pyx_mstate_global->__pyx_type_18Pythonreflectivity_Layer
#endif
#define __pyx_ptype_18Pythonreflectivity_Lowestlayer __pyx_mstate_global->__pyx_ptype_18Pythonreflectivity_Lowestlayer
#define __pyx_ptype_18Pythonreflectivity_Layer __pyx_mstate_global->__pyx_ptype_18Pythonreflectivity_Layer
#define __pyx_kp_s_0 __pyx_mstate_global->__pyx_kp_s_0
#define __pyx_n_s_A __pyx_mstate_global->__pyx_n_s_A
#define __pyx_kp_s_Allowed_input_for_setmag_is_x_y __pyx_mstate_global->__pyx_kp_s_Allowed_input_for_setmag_is_x_y
#define __pyx_n_s_B __pyx_mstate_global->__pyx_n_s_B
#define __pyx_kp_s_Brackets_inside_Brackets_are_not __pyx_mstate_global->__pyx_kp_s_Brackets_inside_Brackets_are_not
#define __pyx_n_s_Cutoffquad __pyx_mstate_global->__pyx_n_s_Cutoffquad
#define __pyx_kp_s_Epsilon_must_be_a_number_or_an_a __pyx_mstate_global->__pyx_kp_s_Epsilon_must_be_a_number_or_an_a
#define __pyx_kp_s_Exception_Magnetic_heterostructu __pyx_mstate_global->__pyx_kp_s_Exception_Magnetic_heterostructu
#define __pyx_kp_s_Exception_Multiple_magnetization __pyx_mstate_global->__pyx_kp_s_Exception_Multiple_magnetization
#define __pyx_n_s_Generate_structure __pyx_mstate_global->__pyx_n_s_Generate_structure
#define __pyx_n_s_HS __pyx_mstate_global->__pyx_n_s_HS
#define __pyx_n_s_ImportError __pyx_mstate_global->__pyx_n_s_ImportError
#define __pyx_kp_s_Layer __pyx_mstate_global->__pyx_kp_s_Layer
#define __pyx_n_s_Layer_2 __pyx_mstate_global->__pyx_n_s_Layer_2
#define __pyx_n_s_Layer___reduce_cython __pyx_mstate_global->__pyx_n_s_Layer___reduce_cython
#define __pyx_n_s_Layer___setstate_cython __pyx_mstate_global->__pyx_n_s_Layer___setstate_cython
#define __pyx_n_s_Layer_d __pyx_mstate_global->__pyx_n_s_Layer_d
#define __pyx_n_s_Layer_eps __pyx_mstate_global->__pyx_n_s_Layer_eps
#define __pyx_n_s_Layer_epsg __pyx_mstate_global->__pyx_n_s_Layer_epsg
#define __pyx_n_s_Layer_epsxx __pyx_mstate_global->__pyx_n_s_Layer_epsxx
#define __pyx_n_s_Layer_epsyy __pyx_mstate_global->__pyx_n_s_Layer_epsyy
#define __pyx_n_s_Layer_epszz __pyx_mstate_global->__pyx_n_s_Layer_epszz
#define __pyx_n_s_Layer_isthisthelowestlayer __pyx_mstate_global->__pyx_n_s_Layer_isthisthelowestlayer
#define __pyx_n_s_Layer_layercontentpointer __pyx_mstate_global->__pyx_n_s_Layer_layercontentpointer
#define __pyx_n_s_Layer_mag __pyx_mstate_global->__pyx_n_s_Layer_mag
#define __pyx_n_s_Layer_setd __pyx_mstate_global->__pyx_n_s_Layer_setd
#define __pyx_n_s_Layer_seteps __pyx_mstate_global->__pyx_n_s_Layer_seteps
#define __pyx_n_s_Layer_setepsg __pyx_mstate_global->__pyx_n_s_Layer_setepsg
#define __pyx_n_s_Layer_setepsxx __pyx_mstate_global->__pyx_n_s_Layer_setepsxx
#define __pyx_n_s_Layer_setepsyy __pyx_mstate_global->__pyx_n_s_Layer_setepsyy
#define __pyx_n_s_Layer_setepszz __pyx_mstate_global->__pyx_n_s_Layer_setepszz
#define __pyx_n_s_Layer_setmag __pyx_mstate_global->__pyx_n_s_Layer_setmag
#define __pyx_n_s_Layer_setsigma __pyx_mstate_global->__pyx_n_s_Layer_setsigma
#define __pyx_n_s_Layer_sigma __pyx_mstate_global->__pyx_n_s_Layer_sigma
#define __pyx_n_s_Lowestlayer __pyx_mstate_global->__pyx_n_s_Lowestlayer
#define __pyx_n_s_Lowestlayer___reduce_cython __pyx_mstate_global->__pyx_n_s_Lowestlayer___reduce_cython
#define __pyx_n_s_Lowestlayer___setstate_cython __pyx_mstate_global->__pyx_n_s_Lowestlayer___setstate_cython
#define __pyx_n_s_Lowestlayer_d __pyx_mstate_global->__pyx_n_s_Lowestlayer_d
#define __pyx_n_s_Lowestlayer_eg __pyx_mstate_global->__pyx_n_s_Lowestlayer_eg
#define __pyx_n_s_Lowestlayer_eps __pyx_mstate_global->__pyx_n_s_Lowestlayer_eps
#define __pyx_n_s_Lowestlayer_epsxx __pyx_mstate_global->__pyx_n_s_Lowestlayer_epsxx
#define __pyx_n_s_Lowestlayer_epsyy __pyx_mstate_global->__pyx_n_s_Lowestlayer_epsyy
#define __pyx_n_s_Lowestlayer_epszz __pyx_mstate_global->__pyx_n_s_Lowestlayer_epszz
#define __pyx_n_s_Lowestlayer_isthisthelowestlayer __pyx_mstate_global->__pyx_n_s_Lowestlayer_isthisthelowestlayer
#define __pyx_n_s_Lowestlayer_layercontentpointer __pyx_mstate_global->__pyx_n_s_Lowestlayer_layercontentpointer
#define __pyx_n_s_Lowestlayer_mag __pyx_mstate_global->__pyx_n_s_Lowestlayer_mag
#define __pyx_n_s_Lowestlayer_motherpointer __pyx_mstate_global->__pyx_n_s_Lowestlayer_motherpointer
#define __pyx_n_s_Lowestlayer_setd __pyx_mstate_global->__pyx_n_s_Lowestlayer_setd
#define __pyx_n_s_Lowestlayer_seteps __pyx_mstate_global->__pyx_n_s_Lowestlayer_seteps
#define __pyx_n_s_Lowestlayer_setepsg __pyx_mstate_global->__pyx_n_s_Lowestlayer_setepsg
#define __pyx_n_s_Lowestlayer_setepsxx __pyx_mstate_global->__pyx_n_s_Lowestlayer_setepsxx
#define __pyx_n_s_Lowestlayer_setepsyy __pyx_mstate_global->__pyx_n_s_Lowestlayer_setepsyy
#define __pyx_n_s_Lowestlayer_setepszz __pyx_mstate_global->__pyx_n_s_Lowestlayer_setepszz
#define __pyx_n_s_Lowestlayer_setmag __pyx_mstate_global->__pyx_n_s_Lowestlayer_setmag
#define __pyx_n_s_Lowestlayer_setsigma __pyx_mstate_global->__pyx_n_s_Lowestlayer_setsigma
#define __pyx_n_s_Lowestlayer_sigma __pyx_mstate_global->__pyx_n_s_Lowestlayer_sigma
#define __pyx_n_s_MLstructure __pyx_mstate_global->__pyx_n_s_MLstructure
#define __pyx_n_s_MagneticCutoff __pyx_mstate_global->__pyx_n_s_MagneticCutoff
#define __pyx_kp_s_Magnetized_along_the_x_direction __pyx_mstate_global->__pyx_kp_s_Magnetized_along_the_x_direction
#define __pyx_kp_s_Magnetized_along_the_y_direction __pyx_mstate_global->__pyx_kp_s_Magnetized_along_the_y_direction
#define __pyx_kp_s_Magnetized_along_the_z_direction __pyx_mstate_global->__pyx_kp_s_Magnetized_along_the_z_direction
#define __pyx_n_s_MultipleScattering __pyx_mstate_global->__pyx_n_s_MultipleScattering
#define __pyx_n_s_NAngles __pyx_mstate_global->__pyx_n_s_NAngles
#define __pyx_n_s_NL_types __pyx_mstate_global->__pyx_n_s_NL_types
#define __pyx_n_s_NLayers __pyx_mstate_global->__pyx_n_s_NLayers
#define __pyx_n_s_NLayers_types __pyx_mstate_global->__pyx_n_s_NLayers_types
#define __pyx_kp_s_No_magnetization_has_been_set __pyx_mstate_global->__pyx_kp_s_No_magnetization_has_been_set
#define __pyx_n_s_Output __pyx_mstate_global->__pyx_n_s_Output
#define __pyx_n_s_P __pyx_mstate_global->__pyx_n_s_P
#define __pyx_kp_s_Please_generate_at_least_one_lay __pyx_mstate_global->__pyx_kp_s_Please_generate_at_least_one_lay
#define __pyx_kp_s_Please_use_setmag_to_set_a_magne __pyx_mstate_global->__pyx_kp_s_Please_use_setmag_to_set_a_magne
#define __pyx_n_s_Pythonreflectivity __pyx_mstate_global->__pyx_n_s_Pythonreflectivity
#define __pyx_n_s_Reflectivity __pyx_mstate_global->__pyx_n_s_Reflectivity
#define __pyx_n_s_S __pyx_mstate_global->__pyx_n_s_S
#define __pyx_n_s_Setting1 __pyx_mstate_global->__pyx_n_s_Setting1
#define __pyx_n_s_Setting2 __pyx_mstate_global->__pyx_n_s_Setting2
#define __pyx_n_s_Setting3 __pyx_mstate_global->__pyx_n_s_Setting3
#define __pyx_kp_s_Something_is_wrong_with_the_Mult __pyx_mstate_global->__pyx_kp_s_Something_is_wrong_with_the_Mult
#define __pyx_kp_s_Substrate_as_Multilayer_is_ill_d __pyx_mstate_global->__pyx_kp_s_Substrate_as_Multilayer_is_ill_d
#define __pyx_n_s_T __pyx_mstate_global->__pyx_n_s_T
#define __pyx_kp_s_Theta_must_be_in_the_range_0_the __pyx_mstate_global->__pyx_kp_s_Theta_must_be_in_the_range_0_the
#define __pyx_kp_s_Theta_must_be_in_the_range_0_the_2 __pyx_mstate_global->__pyx_kp_s_Theta_must_be_in_the_range_0_the_2
#define __pyx_kp_s_Theta_must_be_in_the_range_0_the_3 __pyx_mstate_global->__pyx_kp_s_Theta_must_be_in_the_range_0_the_3
#define __pyx_kp_s_This_layer_is_not_magnetic __pyx_mstate_global->__pyx_kp_s_This_layer_is_not_magnetic
#define __pyx_n_s_TypeError __pyx_mstate_global->__pyx_n_s_TypeError
#define __pyx_kp_s_UTILS_Pythonreflectivity_pyx __pyx_mstate_global->__pyx_kp_s_UTILS_Pythonreflectivity_pyx
#define __pyx_kp_s_Underlying_structure_not_initial __pyx_mstate_global->__pyx_kp_s_Underlying_structure_not_initial
#define __pyx_n_s__21 __pyx_mstate_global->__pyx_n_s__21
#define __pyx_kp_s__3 __pyx_mstate_global->__pyx_kp_s__3
#define __pyx_kp_s__4 __pyx_mstate_global->__pyx_kp_s__4
#define __pyx_kp_s__5 __pyx_mstate_global->__pyx_kp_s__5
#define __pyx_kp_s__6 __pyx_mstate_global->__pyx_kp_s__6
#define __pyx_n_s__78 __pyx_mstate_global->__pyx_n_s__78
#define __pyx_n_s_a __pyx_mstate_global->__pyx_n_s_a
#define __pyx_n_s_allx __pyx_mstate_global->__pyx_n_s_allx
#define __pyx_n_s_ally __pyx_mstate_global->__pyx_n_s_ally
#define __pyx_n_s_allz __pyx_mstate_global->__pyx_n_s_allz
#define __pyx_n_s_array __pyx_mstate_global->__pyx_n_s_array
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_n_s_class_getitem __pyx_mstate_global->__pyx_n_s_class_getitem
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_ctypes __pyx_mstate_global->__pyx_n_s_ctypes
#define __pyx_n_s_d __pyx_mstate_global->__pyx_n_s_d
#define __pyx_n_s_default __pyx_mstate_global->__pyx_n_s_default
#define __pyx_n_s_dir __pyx_mstate_global->__pyx_n_s_dir
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_n_s_dtype __pyx_mstate_global->__pyx_n_s_dtype
#define __pyx_n_s_eg __pyx_mstate_global->__pyx_n_s_eg
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_eps __pyx_mstate_global->__pyx_n_s_eps
#define __pyx_n_s_epsg __pyx_mstate_global->__pyx_n_s_epsg
#define __pyx_n_s_epsilon __pyx_mstate_global->__pyx_n_s_epsilon
#define __pyx_n_s_epsxx __pyx_mstate_global->__pyx_n_s_epsxx
#define __pyx_n_s_epsyy __pyx_mstate_global->__pyx_n_s_epsyy
#define __pyx_n_s_epszz __pyx_mstate_global->__pyx_n_s_epszz
#define __pyx_n_s_find __pyx_mstate_global->__pyx_n_s_find
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_getstate __pyx_mstate_global->__pyx_n_s_getstate
#define __pyx_n_s_i __pyx_mstate_global->__pyx_n_s_i
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_kp_s_in_Multilayer_structure_string __pyx_mstate_global->__pyx_kp_s_in_Multilayer_structure_string
#define __pyx_n_s_initializing __pyx_mstate_global->__pyx_n_s_initializing
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_s_isthisthelowestlayer __pyx_mstate_global->__pyx_n_s_isthisthelowestlayer
#define __pyx_n_s_layercontentpointer __pyx_mstate_global->__pyx_n_s_layercontentpointer
#define __pyx_n_s_len __pyx_mstate_global->__pyx_n_s_len
#define __pyx_n_s_mag __pyx_mstate_global->__pyx_n_s_mag
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_motherpointer __pyx_mstate_global->__pyx_n_s_motherpointer
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_kp_s_no_default___reduce___due_to_non __pyx_mstate_global->__pyx_kp_s_no_default___reduce___due_to_non
#define __pyx_n_s_np __pyx_mstate_global->__pyx_n_s_np
#define __pyx_n_s_numpy __pyx_mstate_global->__pyx_n_s_numpy
#define __pyx_kp_s_numpy_core_multiarray_failed_to __pyx_mstate_global->__pyx_kp_s_numpy_core_multiarray_failed_to
#define __pyx_kp_s_numpy_core_umath_failed_to_impor __pyx_mstate_global->__pyx_kp_s_numpy_core_umath_failed_to_impor
#define __pyx_n_s_p __pyx_mstate_global->__pyx_n_s_p
#define __pyx_n_s_pyx_state __pyx_mstate_global->__pyx_n_s_pyx_state
#define __pyx_n_s_pyx_vtable __pyx_mstate_global->__pyx_n_s_pyx_vtable
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_reduce __pyx_mstate_global->__pyx_n_s_reduce
#define __pyx_n_s_reduce_cython __pyx_mstate_global->__pyx_n_s_reduce_cython
#define __pyx_n_s_reduce_ex __pyx_mstate_global->__pyx_n_s_reduce_ex
#define __pyx_n_s_rempty __pyx_mstate_global->__pyx_n_s_rempty
#define __pyx_n_s_rmat __pyx_mstate_global->__pyx_n_s_rmat
#define __pyx_n_s_routl __pyx_mstate_global->__pyx_n_s_routl
#define __pyx_n_s_routp __pyx_mstate_global->__pyx_n_s_routp
#define __pyx_n_s_routr __pyx_mstate_global->__pyx_n_s_routr
#define __pyx_n_s_routs __pyx_mstate_global->__pyx_n_s_routs
#define __pyx_n_s_rpp __pyx_mstate_global->__pyx_n_s_rpp
#define __pyx_n_s_rss __pyx_mstate_global->__pyx_n_s_rss
#define __pyx_n_s_s __pyx_mstate_global->__pyx_n_s_s
#define __pyx_n_s_self __pyx_mstate_global->__pyx_n_s_self
#define __pyx_n_s_setd __pyx_mstate_global->__pyx_n_s_setd
#define __pyx_n_s_seteps __pyx_mstate_global->__pyx_n_s_seteps
#define __pyx_n_s_setepsg __pyx_mstate_global->__pyx_n_s_setepsg
#define __pyx_n_s_setepsxx __pyx_mstate_global->__pyx_n_s_setepsxx
#define __pyx_n_s_setepsyy __pyx_mstate_global->__pyx_n_s_setepsyy
#define __pyx_n_s_setepszz __pyx_mstate_global->__pyx_n_s_setepszz
#define __pyx_n_s_setmag __pyx_mstate_global->__pyx_n_s_setmag
#define __pyx_n_s_setsigma __pyx_mstate_global->__pyx_n_s_setsigma
#define __pyx_n_s_setstate __pyx_mstate_global->__pyx_n_s_setstate
#define __pyx_n_s_setstate_cython __pyx_mstate_global->__pyx_n_s_setstate_cython
#define __pyx_n_s_sigma __pyx_mstate_global->__pyx_n_s_sigma
#define __pyx_n_s_spec __pyx_mstate_global->__pyx_n_s_spec
#define __pyx_n_s_split __pyx_mstate_global->__pyx_n_s_split
#define __pyx_kp_s_stringsource __pyx_mstate_global->__pyx_kp_s_stringsource
#define __pyx_n_s_t __pyx_mstate_global->__pyx_n_s_t
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_th __pyx_mstate_global->__pyx_n_s_th
#define __pyx_n_s_wavelength __pyx_mstate_global->__pyx_n_s_wavelength
#define __pyx_n_s_wl __pyx_mstate_global->__pyx_n_s_wl
#define __pyx_n_s_x __pyx_mstate_global->__pyx_n_s_x
#define __pyx_n_s_y __pyx_mstate_global->__pyx_n_s_y
#define __pyx_n_s_z __pyx_mstate_global->__pyx_n_s_z
#define __pyx_n_s_zeros __pyx_mstate_global->__pyx_n_s_zeros
#define __pyx_float_0_5 __pyx_mstate_global->__pyx_float_0_5
#define __pyx_float_1_0Eneg_6 __pyx_mstate_global->__pyx_float_1_0Eneg_6
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_neg_1 __pyx_mstate_global->__pyx_int_neg_1
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_tuple__8 __pyx_mstate_global->__pyx_tuple__8
#define __pyx_tuple__9 __pyx_mstate_global->__pyx_tuple__9
#define __pyx_tuple__10 __pyx_mstate_global->__pyx_tuple__10
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__17 __pyx_mstate_global->__pyx_tuple__17
#define __pyx_tuple__18 __pyx_mstate_global->__pyx_tuple__18
#define __pyx_tuple__19 __pyx_mstate_global->__pyx_tuple__19
#define __pyx_tuple__20 __pyx_mstate_global->__pyx_tuple__20
#define __pyx_tuple__22 __pyx_mstate_global->__pyx_tuple__22
#define __pyx_tuple__27 __pyx_mstate_global->__pyx_tuple__27
#define __pyx_tuple__30 __pyx_mstate_global->__pyx_tuple__30
#define __pyx_tuple__32 __pyx_mstate_global->__pyx_tuple__32
#define __pyx_tuple__34 __pyx_mstate_global->__pyx_tuple__34
#define __pyx_tuple__36 __pyx_mstate_global->__pyx_tuple__36
#define __pyx_tuple__41 __pyx_mstate_global->__pyx_tuple__41
#define __pyx_tuple__44 __pyx_mstate_global->__pyx_tuple__44
#define __pyx_tuple__50 __pyx_mstate_global->__pyx_tuple__50
#define __pyx_tuple__72 __pyx_mstate_global->__pyx_tuple__72
#define __pyx_tuple__74 __pyx_mstate_global->__pyx_tuple__74
#define __pyx_tuple__75 __pyx_mstate_global->__pyx_tuple__75
#define __pyx_tuple__77 __pyx_mstate_global->__pyx_tuple__77
#define __pyx_codeobj__23 __pyx_mstate_global->__pyx_codeobj__23
#define __pyx_codeobj__24 __pyx_mstate_global->__pyx_codeobj__24
#define __pyx_codeobj__25 __pyx_mstate_global->__pyx_codeobj__25
#define __pyx_codeobj__26 __pyx_mstate_global->__pyx_codeobj__26
#define __pyx_codeobj__28 __pyx_mstate_global->__pyx_codeobj__28
#define __pyx_codeobj__29 __pyx_mstate_global->__pyx_codeobj__29
#define __pyx_codeobj__31 __pyx_mstate_global->__pyx_codeobj__31
#define __pyx_codeobj__33 __pyx_mstate_global->__pyx_codeobj__33
#define __pyx_codeobj__35 __pyx_mstate_global->__pyx_codeobj__35
#define __pyx_codeobj__37 __pyx_mstate_global->__pyx_codeobj__37
#define __pyx_codeobj__38 __pyx_mstate_global->__pyx_codeobj__38
#define __pyx_codeobj__39 __pyx_mstate_global->__pyx_codeobj__39
#define __pyx_codeobj__40 __pyx_mstate_global->__pyx_codeobj__40
#define __pyx_codeobj__42 __pyx_mstate_global->__pyx_codeobj__42
#define __pyx_codeobj__43 __pyx_mstate_global->__pyx_codeobj__43
#define __pyx_codeobj__45 __pyx_mstate_global->__pyx_codeobj__45
#define __pyx_codeobj__46 __pyx_mstate_global->__pyx_codeobj__46
#define __pyx_codeobj__47 __pyx_mstate_global->__pyx_codeobj__47
#define __pyx_codeobj__48 __pyx_mstate_global->__pyx_codeobj__48
#define __pyx_codeobj__49 __pyx_mstate_global->__pyx_codeobj__49
#define __pyx_codeobj__51 __pyx_mstate_global->__pyx_codeobj__51
#define __pyx_codeobj__52 __pyx_mstate_global->__pyx_codeobj__52
#define __pyx_codeobj__53 __pyx_mstate_global->__pyx_codeobj__53
#define __pyx_codeobj__54 __pyx_mstate_global->__pyx_codeobj__54
#define __pyx_codeobj__55 __pyx_mstate_global->__pyx_codeobj__55
#define __pyx_codeobj__56 __pyx_mstate_global->__pyx_codeobj__56
#define __pyx_codeobj__57 __pyx_mstate_global->__pyx_codeobj__57
#define __pyx_codeobj__58 __pyx_mstate_global->__pyx_codeobj__58
#define __pyx_codeobj__59 __pyx_mstate_global->__pyx_codeobj__59
#define __pyx_codeobj__60 __pyx_mstate_global->__pyx_codeobj__60
#define __pyx_codeobj__61 __pyx_mstate_global->__pyx_codeobj__61
#define __pyx_codeobj__62 __pyx_mstate_global->__pyx_codeobj__62
#define __pyx_codeobj__63 __pyx_mstate_global->__pyx_codeobj__63
#define __pyx_codeobj__64 __pyx_mstate_global->__pyx_codeobj__64
#define __pyx_codeobj__65 __pyx_mstate_global->__pyx_codeobj__65
#define __pyx_codeobj__66 __pyx_mstate_global->__pyx_codeobj__66
#define __pyx_codeobj__67 __pyx_mstate_global->__pyx_codeobj__67
#define __pyx_codeobj__68 __pyx_mstate_global->__pyx_codeobj__68
#define __pyx_codeobj__69 __pyx_mstate_global->__pyx_codeobj__69
#define __pyx_codeobj__70 __pyx_mstate_global->__pyx_codeobj__70
#define __pyx_codeobj__71 __pyx_mstate_global->__pyx_codeobj__71
#define __pyx_codeobj__73 __pyx_mstate_global->__pyx_codeobj__73
#define __pyx_codeobj__76 __pyx_mstate_global->__pyx_codeobj__76
/* #### Code section: module_code ### */

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":245
 * 
 *         @property
 *         cdef inline PyObject* base(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_7ndarray_4base_base(PyArrayObject *__pyx_v_self) {
  PyObject *__pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":248
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 *             return PyArray_BASE(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_BASE(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":245
 * 
 *         @property
 *         cdef inline PyObject* base(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":251
 * 
 *         @property
 *         cdef inline dtype descr(self):             # <<<<<<<<<<<<<<
 *             """Returns an owned reference to the dtype of the array.
 *             """
 */

static CYTHON_INLINE PyArray_Descr *__pyx_f_5numpy_7ndarray_5descr_descr(PyArrayObject *__pyx_v_self) {
  PyArray_Descr *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyArray_Descr *__pyx_t_1;
  __Pyx_RefNannySetupContext("descr", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":254
 *             """Returns an owned reference to the dtype of the array.
 *             """
 *             return <dtype>PyArray_DESCR(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = PyArray_DESCR(__pyx_v_self);
  __Pyx_INCREF((PyObject *)((PyArray_Descr *)__pyx_t_1));
  __pyx_r = ((PyArray_Descr *)__pyx_t_1);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":251
 * 
 *         @property
 *         cdef inline dtype descr(self):             # <<<<<<<<<<<<<<
 *             """Returns an owned reference to the dtype of the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":257
 * 
 *         @property
 *         cdef inline int ndim(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the number of dimensions in the array.
 *             """
 */

static CYTHON_INLINE int __pyx_f_5numpy_7ndarray_4ndim_ndim(PyArrayObject *__pyx_v_self) {
  int __pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":260
 *             """Returns the number of dimensions in the array.
 *             """
 *             return PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_NDIM(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":257
 * 
 *         @property
 *         cdef inline int ndim(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the number of dimensions in the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":263
 * 
 *         @property
 *         cdef inline npy_intp *shape(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the dimensions/shape of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_5shape_shape(PyArrayObject *__pyx_v_self) {
  npy_intp *__pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":268
 *             Can return NULL for 0-dimensional arrays.
 *             """
 *             return PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_DIMS(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":263
 * 
 *         @property
 *         cdef inline npy_intp *shape(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the dimensions/shape of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":271
 * 
 *         @property
 *         cdef inline npy_intp *strides(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the strides of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_7strides_strides(PyArrayObject *__pyx_v_self) {
  npy_intp *__pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":275
 *             The number of elements matches the number of dimensions of the array (ndim).
 *             """
 *             return PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_STRIDES(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":271
 * 
 *         @property
 *         cdef inline npy_intp *strides(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the strides of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":278
 * 
 *         @property
 *         cdef inline npy_intp size(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the total size (in number of elements) of the array.
 *             """
 */

static CYTHON_INLINE npy_intp __pyx_f_5numpy_7ndarray_4size_size(PyArrayObject *__pyx_v_self) {
  npy_intp __pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":281
 *             """Returns the total size (in number of elements) of the array.
 *             """
 *             return PyArray_SIZE(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_SIZE(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":278
 * 
 *         @property
 *         cdef inline npy_intp size(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the total size (in number of elements) of the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":284
 * 
 *         @property
 *         cdef inline char* data(self) nogil:             # <<<<<<<<<<<<<<
 *             """The pointer to the data buffer as a char*.
 *             This is provided for legacy reasons to avoid direct struct field access.
 */

static CYTHON_INLINE char *__pyx_f_5numpy_7ndarray_4data_data(PyArrayObject *__pyx_v_self) {
  char *__pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":290
 *             of `PyArray_DATA()` instead, which returns a 'void*'.
 *             """
 *             return PyArray_BYTES(self)             # <<<<<<<<<<<<<<
 * 
 *     ctypedef unsigned char      npy_bool
 */
  __pyx_r = PyArray_BYTES(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":284
 * 
 *         @property
 *         cdef inline char* data(self) nogil:             # <<<<<<<<<<<<<<
 *             """The pointer to the data buffer as a char*.
 *             This is provided for legacy reasons to avoid direct struct field access.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":773
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":774
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":773
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":776
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":777
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":776
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":779
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":780
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":779
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":782
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":783
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":782
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":785
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":786
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":785
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":788
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":789
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = PyDataType_HASSUBARRAY(__pyx_v_d);
  if (__pyx_t_1) {

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":790
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":789
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":792
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":788
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":968
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":969
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":970
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_t_1 = PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(2, 970, __pyx_L1_error)

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":968
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("numpy.set_array_base", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":972
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":973
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":974
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = (__pyx_v_base == NULL);
  if (__pyx_t_1) {

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":975
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":974
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":976
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":972
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":980
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_array", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":981
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":982
 * cdef inline int import_array() except -1:
 *     try:
 *         __pyx_import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 982, __pyx_L3_error)

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":981
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":983
 *     try:
 *         __pyx_import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 983, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":984
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 984, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 984, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":981
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":980
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":986
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_umath", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":987
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":988
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 988, __pyx_L3_error)

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":987
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":989
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 989, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":990
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 990, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 990, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":987
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":986
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":992
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_ufunc", 1);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":993
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":994
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 994, __pyx_L3_error)

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":993
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":995
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 995, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":996
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 996, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 996, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":993
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":992
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":999
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1011
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":999
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1014
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1026
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1014
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1029
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
  npy_datetime __pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1036
 *     also needed.  That can be found using `get_datetime64_unit`.
 *     """
 *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1029
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1039
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
  npy_timedelta __pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1043
 *     returns the int64 value underlying scalar numpy timedelta64 object
 *     """
 *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1039
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1046
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
  NPY_DATETIMEUNIT __pyx_r;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1050
 *     returns the unit part of the dtype for a numpy datetime64 object.
 *     """
 *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
 */
  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
  goto __pyx_L0;

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":1046
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":41
 *     cdef Heterostructure Mother
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma, MLstructure, int NL_types):             # <<<<<<<<<<<<<<
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d
 */

/* Python wrapper */
static int __pyx_pw_18Pythonreflectivity_11Lowestlayer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_18Pythonreflectivity_11Lowestlayer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_d;
  double __pyx_v_sigma;
  PyObject *__pyx_v_MLstructure = 0;
  int __pyx_v_NL_types;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d,&__pyx_n_s_sigma,&__pyx_n_s_MLstructure,&__pyx_n_s_NL_types,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_d)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sigma)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); __PYX_ERR(0, 41, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_MLstructure)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); __PYX_ERR(0, 41, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_NL_types)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); __PYX_ERR(0, 41, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 41, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
      values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
      values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
    }
    __pyx_v_d = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L3_error)
    __pyx_v_sigma = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L3_error)
    __pyx_v_MLstructure = values[2];
    __pyx_v_NL_types = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_NL_types == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 41, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer___cinit__(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_d, __pyx_v_sigma, __pyx_v_MLstructure, __pyx_v_NL_types);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_18Pythonreflectivity_11Lowestlayer___cinit__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma, PyObject *__pyx_v_MLstructure, int __pyx_v_NL_types) {
  int __pyx_v_NLayers;
  int *__pyx_v_MLLENGTH;
  int *__pyx_v_MLREP;
  int **__pyx_v_MLCOMP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_SaveNumbers = NULL;
  PyObject *__pyx_v_a = NULL;
  Py_ssize_t __pyx_v_N;
  PyObject *__pyx_v_j = NULL;
  int __pyx_v_IsInBracket;
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_l = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  size_t __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "Pythonreflectivity.pyx":43
 *     def __cinit__(self, double d, double sigma, MLstructure, int NL_types):
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":44
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma             # <<<<<<<<<<<<<<
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":45
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 */
  __pyx_v_self->Layercontent.type = 1;

  /* "Pythonreflectivity.pyx":46
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 */
  __pyx_v_self->Layercontent.magdir = 0;

  /* "Pythonreflectivity.pyx":47
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 */
  __pyx_v_self->Layercontent.ex = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":48
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 */
  __pyx_v_self->Layercontent.ey = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":49
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=0
 *         self.islowestlayer=1
 */
  __pyx_v_self->Layercontent.ez = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":50
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *         self.islowestlayer=1
 *         cdef int NLayers
 */
  __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":51
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 *         self.islowestlayer=1             # <<<<<<<<<<<<<<
 *         cdef int NLayers
 *         cdef int *MLLENGTH
 */
  __pyx_v_self->islowestlayer = 1;

  /* "Pythonreflectivity.pyx":57
 *         cdef int **MLCOMP
 *         cdef CLayer *LR
 *         NLayers=FindLayerNumber(MLstructure, NL_types)             # <<<<<<<<<<<<<<
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NL_types); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_18Pythonreflectivity_FindLayerNumber(__pyx_v_MLstructure, __pyx_t_1); if (unlikely(__pyx_t_2 == ((int)-1) && PyErr_Occurred())) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_NLayers = __pyx_t_2;

  /* "Pythonreflectivity.pyx":58
 *         cdef CLayer *LR
 *         NLayers=FindLayerNumber(MLstructure, NL_types)
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))             # <<<<<<<<<<<<<<
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))
 */
  __pyx_v_MLLENGTH = ((int *)malloc((__pyx_v_NLayers * (sizeof(int)))));

  /* "Pythonreflectivity.pyx":59
 *         NLayers=FindLayerNumber(MLstructure, NL_types)
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))
 *         MLREP = <int*>malloc( NLayers* sizeof(int))             # <<<<<<<<<<<<<<
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )
 */
  __pyx_v_MLREP = ((int *)malloc((__pyx_v_NLayers * (sizeof(int)))));

  /* "Pythonreflectivity.pyx":60
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))             # <<<<<<<<<<<<<<
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )
 * 
 */
  __pyx_v_MLCOMP = ((int **)malloc((__pyx_v_NLayers * (sizeof(int *)))));

  /* "Pythonreflectivity.pyx":61
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )             # <<<<<<<<<<<<<<
 * 
 *         if(MLstructure=="default"):
 */
  __pyx_v_LR = ((struct __pyx_t_18Pythonreflectivity_CLayer *)malloc((__pyx_v_NL_types * (sizeof(struct __pyx_t_18Pythonreflectivity_CLayer)))));

  /* "Pythonreflectivity.pyx":63
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )
 * 
 *         if(MLstructure=="default"):             # <<<<<<<<<<<<<<
 *             for i in range(NL_types):
 *                 MLREP[i]=1
 */
  __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_v_MLstructure, __pyx_n_s_default, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 63, __pyx_L1_error)
  if (__pyx_t_3) {

    /* "Pythonreflectivity.pyx":64
 * 
 *         if(MLstructure=="default"):
 *             for i in range(NL_types):             # <<<<<<<<<<<<<<
 *                 MLREP[i]=1
 *                 MLLENGTH[i]=1
 */
    __pyx_t_2 = __pyx_v_NL_types;
    __pyx_t_4 = __pyx_t_2;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "Pythonreflectivity.pyx":65
 *         if(MLstructure=="default"):
 *             for i in range(NL_types):
 *                 MLREP[i]=1             # <<<<<<<<<<<<<<
 *                 MLLENGTH[i]=1
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))
 */
      (__pyx_v_MLREP[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":66
 *             for i in range(NL_types):
 *                 MLREP[i]=1
 *                 MLLENGTH[i]=1             # <<<<<<<<<<<<<<
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))
 *                 MLCOMP[i][0]=i
 */
      (__pyx_v_MLLENGTH[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":67
 *                 MLREP[i]=1
 *                 MLLENGTH[i]=1
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *                 MLCOMP[i][0]=i
 *         else:
 */
      (__pyx_v_MLCOMP[__pyx_v_i]) = ((int *)malloc((sizeof(int))));

      /* "Pythonreflectivity.pyx":68
 *                 MLLENGTH[i]=1
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))
 *                 MLCOMP[i][0]=i             # <<<<<<<<<<<<<<
 *         else:
 *             SaveNumbers=[]
 */
      ((__pyx_v_MLCOMP[__pyx_v_i])[0]) = __pyx_v_i;
    }

    /* "Pythonreflectivity.pyx":63
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )
 * 
 *         if(MLstructure=="default"):             # <<<<<<<<<<<<<<
 *             for i in range(NL_types):
 *                 MLREP[i]=1
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":70
 *                 MLCOMP[i][0]=i
 *         else:
 *             SaveNumbers=[]             # <<<<<<<<<<<<<<
 * 
 *             a=MLstructure.split(",")
 */
  /*else*/ {
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_SaveNumbers = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "Pythonreflectivity.pyx":72
 *             SaveNumbers=[]
 * 
 *             a=MLstructure.split(",")             # <<<<<<<<<<<<<<
 * 
 *             N=len(a)
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_MLstructure, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__3};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_v_a = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Pythonreflectivity.pyx":74
 *             a=MLstructure.split(",")
 * 
 *             N=len(a)             # <<<<<<<<<<<<<<
 *             j=0
 *             IsInBracket=False
 */
    __pyx_t_5 = PyObject_Length(__pyx_v_a); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 74, __pyx_L1_error)
    __pyx_v_N = __pyx_t_5;

    /* "Pythonreflectivity.pyx":75
 * 
 *             N=len(a)
 *             j=0             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *             k=0
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_j = __pyx_int_0;

    /* "Pythonreflectivity.pyx":76
 *             N=len(a)
 *             j=0
 *             IsInBracket=False             # <<<<<<<<<<<<<<
 *             k=0
 *             for i in range(N):
 */
    __pyx_v_IsInBracket = 0;

    /* "Pythonreflectivity.pyx":77
 *             j=0
 *             IsInBracket=False
 *             k=0             # <<<<<<<<<<<<<<
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_k = __pyx_int_0;

    /* "Pythonreflectivity.pyx":78
 *             IsInBracket=False
 *             k=0
 *             for i in range(N):             # <<<<<<<<<<<<<<
 *                 if (a[i].find('(')!=-1):
 *                     b=a[i].split('*(')
 */
    __pyx_t_5 = __pyx_v_N;
    __pyx_t_9 = __pyx_t_5;
    for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
      __pyx_v_i = __pyx_t_10;

      /* "Pythonreflectivity.pyx":79
 *             k=0
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 79, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 79, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      __pyx_t_8 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_8 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_kp_s__4};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __pyx_t_3 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_1, __pyx_int_neg_1, -1L, 0)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 79, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":80
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):
 *                     b=a[i].split('*(')             # <<<<<<<<<<<<<<
 *                     MLREP[j]=int(b[0])
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 */
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 80, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 80, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_8 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_8 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__5};
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Pythonreflectivity.pyx":81
 *                 if (a[i].find('(')!=-1):
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])             # <<<<<<<<<<<<<<
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 *                     IsInBracket=True
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 81, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 81, __pyx_L1_error)
        (__pyx_v_MLREP[__pyx_t_11]) = __pyx_t_2;

        /* "Pythonreflectivity.pyx":82
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])
 *                     SaveNumbers=SaveNumbers+[int(b[1])]             # <<<<<<<<<<<<<<
 *                     IsInBracket=True
 *                     k=1
 */
        __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_b, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_1);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_1));
        __pyx_t_1 = 0;

        /* "Pythonreflectivity.pyx":83
 *                     MLREP[j]=int(b[0])
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 *                     IsInBracket=True             # <<<<<<<<<<<<<<
 *                     k=1
 *                 elif (a[i].find(')')!=-1):
 */
        __pyx_v_IsInBracket = 1;

        /* "Pythonreflectivity.pyx":84
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 *                     IsInBracket=True
 *                     k=1             # <<<<<<<<<<<<<<
 *                 elif (a[i].find(')')!=-1):
 *                     b=a[i].split(')')
 */
        __Pyx_INCREF(__pyx_int_1);
        __Pyx_DECREF_SET(__pyx_v_k, __pyx_int_1);

        /* "Pythonreflectivity.pyx":79
 *             k=0
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":85
 *                     IsInBracket=True
 *                     k=1
 *                 elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 85, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 85, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      __pyx_t_8 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_8 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_kp_s__6};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 85, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __pyx_t_3 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_1, __pyx_int_neg_1, -1L, 0)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 85, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":86
 *                     k=1
 *                 elif (a[i].find(')')!=-1):
 *                     b=a[i].split(')')             # <<<<<<<<<<<<<<
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 *                     IsInBracket=False
 */
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 86, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 86, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_8 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_8 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__6};
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Pythonreflectivity.pyx":87
 *                 elif (a[i].find(')')!=-1):
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]             # <<<<<<<<<<<<<<
 *                     IsInBracket=False
 *                     k=k+1
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_6);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_6)) __PYX_ERR(0, 87, __pyx_L1_error);
        __pyx_t_6 = 0;
        __pyx_t_6 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 87, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_6));
        __pyx_t_6 = 0;

        /* "Pythonreflectivity.pyx":88
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 *                     IsInBracket=False             # <<<<<<<<<<<<<<
 *                     k=k+1
 *                     MLLENGTH[j]=k
 */
        __pyx_v_IsInBracket = 0;

        /* "Pythonreflectivity.pyx":89
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 *                     IsInBracket=False
 *                     k=k+1             # <<<<<<<<<<<<<<
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 */
        __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_v_k, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 89, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF_SET(__pyx_v_k, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "Pythonreflectivity.pyx":90
 *                     IsInBracket=False
 *                     k=k+1
 *                     MLLENGTH[j]=k             # <<<<<<<<<<<<<<
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):
 */
        __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_k); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 90, __pyx_L1_error)
        __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 90, __pyx_L1_error)
        (__pyx_v_MLLENGTH[__pyx_t_11]) = __pyx_t_2;

        /* "Pythonreflectivity.pyx":91
 *                     k=k+1
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))             # <<<<<<<<<<<<<<
 *                     for l in range(MLLENGTH[j]):
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 */
        __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 91, __pyx_L1_error)
        __pyx_t_6 = __Pyx_PyInt_From_int((__pyx_v_MLLENGTH[__pyx_t_11])); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 91, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyInt_Type)), __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 91, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyInt_FromSize_t((sizeof(int))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 91, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = PyNumber_Multiply(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 91, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_12 = __Pyx_PyInt_As_size_t(__pyx_t_7); if (unlikely((__pyx_t_12 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 91, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 91, __pyx_L1_error)
        (__pyx_v_MLCOMP[__pyx_t_11]) = ((int *)malloc(__pyx_t_12));

        /* "Pythonreflectivity.pyx":92
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):             # <<<<<<<<<<<<<<
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]
 */
        __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 92, __pyx_L1_error)
        __pyx_t_7 = __Pyx_PyInt_From_int((__pyx_v_MLLENGTH[__pyx_t_11])); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 92, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 92, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
          __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7);
          __pyx_t_11 = 0;
          __pyx_t_13 = NULL;
        } else {
          __pyx_t_11 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 92, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_13 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 92, __pyx_L1_error)
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        for (;;) {
          if (likely(!__pyx_t_13)) {
            if (likely(PyList_CheckExact(__pyx_t_7))) {
              {
                Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_7);
                #if !CYTHON_ASSUME_SAFE_MACROS
                if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 92, __pyx_L1_error)
                #endif
                if (__pyx_t_11 >= __pyx_temp) break;
              }
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_11); __Pyx_INCREF(__pyx_t_6); __pyx_t_11++; if (unlikely((0 < 0))) __PYX_ERR(0, 92, __pyx_L1_error)
              #else
              __pyx_t_6 = __Pyx_PySequence_ITEM(__pyx_t_7, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 92, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              #endif
            } else {
              {
                Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_7);
                #if !CYTHON_ASSUME_SAFE_MACROS
                if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 92, __pyx_L1_error)
                #endif
                if (__pyx_t_11 >= __pyx_temp) break;
              }
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_11); __Pyx_INCREF(__pyx_t_6); __pyx_t_11++; if (unlikely((0 < 0))) __PYX_ERR(0, 92, __pyx_L1_error)
              #else
              __pyx_t_6 = __Pyx_PySequence_ITEM(__pyx_t_7, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 92, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_6);
              #endif
            }
          } else {
            __pyx_t_6 = __pyx_t_13(__pyx_t_7);
            if (unlikely(!__pyx_t_6)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 92, __pyx_L1_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_6);
          }
          __Pyx_XDECREF_SET(__pyx_v_l, __pyx_t_6);
          __pyx_t_6 = 0;

          /* "Pythonreflectivity.pyx":93
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):
 *                         MLCOMP[j][l]=int(SaveNumbers[l])             # <<<<<<<<<<<<<<
 *                     SaveNumbers=[]
 *                     j=j+1
 */
          __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_SaveNumbers, __pyx_v_l); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 93, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 93, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_14 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_14 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L1_error)
          __pyx_t_15 = __Pyx_PyIndex_AsSsize_t(__pyx_v_l); if (unlikely((__pyx_t_15 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L1_error)
          ((__pyx_v_MLCOMP[__pyx_t_14])[__pyx_t_15]) = __pyx_t_2;

          /* "Pythonreflectivity.pyx":92
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):             # <<<<<<<<<<<<<<
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]
 */
        }
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "Pythonreflectivity.pyx":94
 *                     for l in range(MLLENGTH[j]):
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]             # <<<<<<<<<<<<<<
 *                     j=j+1
 *                 else:
 */
        __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 94, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_7));
        __pyx_t_7 = 0;

        /* "Pythonreflectivity.pyx":95
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]
 *                     j=j+1             # <<<<<<<<<<<<<<
 *                 else:
 *                     if(IsInBracket):
 */
        __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_v_j, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 95, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_7);
        __pyx_t_7 = 0;

        /* "Pythonreflectivity.pyx":85
 *                     IsInBracket=True
 *                     k=1
 *                 elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":97
 *                     j=j+1
 *                 else:
 *                     if(IsInBracket):             # <<<<<<<<<<<<<<
 *                         k=k+1
 *                         SaveNumbers=SaveNumbers+[int(a[i])]
 */
      /*else*/ {
        if (__pyx_v_IsInBracket) {

          /* "Pythonreflectivity.pyx":98
 *                 else:
 *                     if(IsInBracket):
 *                         k=k+1             # <<<<<<<<<<<<<<
 *                         SaveNumbers=SaveNumbers+[int(a[i])]
 *                     else:
 */
          __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_v_k, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 98, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF_SET(__pyx_v_k, __pyx_t_7);
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":99
 *                     if(IsInBracket):
 *                         k=k+1
 *                         SaveNumbers=SaveNumbers+[int(a[i])]             # <<<<<<<<<<<<<<
 *                     else:
 *                         MLREP[j]=1
 */
          __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 99, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 99, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = PyList_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 99, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_1);
          if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_1)) __PYX_ERR(0, 99, __pyx_L1_error);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 99, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_1));
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":97
 *                     j=j+1
 *                 else:
 *                     if(IsInBracket):             # <<<<<<<<<<<<<<
 *                         k=k+1
 *                         SaveNumbers=SaveNumbers+[int(a[i])]
 */
          goto __pyx_L12;
        }

        /* "Pythonreflectivity.pyx":101
 *                         SaveNumbers=SaveNumbers+[int(a[i])]
 *                     else:
 *                         MLREP[j]=1             # <<<<<<<<<<<<<<
 *                         MLLENGTH[j]=1
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 */
        /*else*/ {
          __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 101, __pyx_L1_error)
          (__pyx_v_MLREP[__pyx_t_11]) = 1;

          /* "Pythonreflectivity.pyx":102
 *                     else:
 *                         MLREP[j]=1
 *                         MLLENGTH[j]=1             # <<<<<<<<<<<<<<
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 *                         MLCOMP[j][0]=int(a[i])
 */
          __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 102, __pyx_L1_error)
          (__pyx_v_MLLENGTH[__pyx_t_11]) = 1;

          /* "Pythonreflectivity.pyx":103
 *                         MLREP[j]=1
 *                         MLLENGTH[j]=1
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *                         MLCOMP[j][0]=int(a[i])
 *                         j=j+1
 */
          __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 103, __pyx_L1_error)
          (__pyx_v_MLCOMP[__pyx_t_11]) = ((int *)malloc((sizeof(int))));

          /* "Pythonreflectivity.pyx":104
 *                         MLLENGTH[j]=1
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 *                         MLCOMP[j][0]=int(a[i])             # <<<<<<<<<<<<<<
 *                         j=j+1
 * 
 */
          __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 104, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_7); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 104, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 104, __pyx_L1_error)
          ((__pyx_v_MLCOMP[__pyx_t_11])[0]) = __pyx_t_2;

          /* "Pythonreflectivity.pyx":105
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 *                         MLCOMP[j][0]=int(a[i])
 *                         j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_v_j, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 105, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_7);
          __pyx_t_7 = 0;
        }
        __pyx_L12:;
      }
      __pyx_L8:;
    }
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":110
 * 
 * 
 *         self.Mother.MLLENGTH=MLLENGTH             # <<<<<<<<<<<<<<
 *         self.Mother.MLREP=MLREP
 *         self.Mother.MLCOMP=MLCOMP
 */
  __pyx_v_self->Mother.MLLENGTH = __pyx_v_MLLENGTH;

  /* "Pythonreflectivity.pyx":111
 * 
 *         self.Mother.MLLENGTH=MLLENGTH
 *         self.Mother.MLREP=MLREP             # <<<<<<<<<<<<<<
 *         self.Mother.MLCOMP=MLCOMP
 *         self.Mother.NLayers=NLayers
 */
  __pyx_v_self->Mother.MLREP = __pyx_v_MLREP;

  /* "Pythonreflectivity.pyx":112
 *         self.Mother.MLLENGTH=MLLENGTH
 *         self.Mother.MLREP=MLREP
 *         self.Mother.MLCOMP=MLCOMP             # <<<<<<<<<<<<<<
 *         self.Mother.NLayers=NLayers
 *         self.Mother.NLayers_types=NL_types
 */
  __pyx_v_self->Mother.MLCOMP = __pyx_v_MLCOMP;

  /* "Pythonreflectivity.pyx":113
 *         self.Mother.MLREP=MLREP
 *         self.Mother.MLCOMP=MLCOMP
 *         self.Mother.NLayers=NLayers             # <<<<<<<<<<<<<<
 *         self.Mother.NLayers_types=NL_types
 *         self.Mother.LR=LR
 */
  __pyx_v_self->Mother.NLayers = __pyx_v_NLayers;

  /* "Pythonreflectivity.pyx":114
 *         self.Mother.MLCOMP=MLCOMP
 *         self.Mother.NLayers=NLayers
 *         self.Mother.NLayers_types=NL_types             # <<<<<<<<<<<<<<
 *         self.Mother.LR=LR
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 */
  __pyx_v_self->Mother.NLayers_types = __pyx_v_NL_types;

  /* "Pythonreflectivity.pyx":115
 *         self.Mother.NLayers=NLayers
 *         self.Mother.NLayers_types=NL_types
 *         self.Mother.LR=LR             # <<<<<<<<<<<<<<
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 * 
 */
  __pyx_v_self->Mother.LR = __pyx_v_LR;

  /* "Pythonreflectivity.pyx":116
 *         self.Mother.NLayers_types=NL_types
 *         self.Mother.LR=LR
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NL_types); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_MakeConsistencyCheck(__pyx_v_MLstructure, (&__pyx_v_self->Mother), __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Pythonreflectivity.pyx":41
 *     cdef Heterostructure Mother
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma, MLstructure, int NL_types):             # <<<<<<<<<<<<<<
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_SaveNumbers);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":118
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):
 */

/* Python wrapper */
static void __pyx_pw_18Pythonreflectivity_11Lowestlayer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_18Pythonreflectivity_11Lowestlayer_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_18Pythonreflectivity_11Lowestlayer_2__dealloc__(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_18Pythonreflectivity_11Lowestlayer_2__dealloc__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  int __pyx_v_i;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;

  /* "Pythonreflectivity.pyx":120
 *     def __dealloc__(self):
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):             # <<<<<<<<<<<<<<
 *             free(self.Mother.MLCOMP[i])
 *         free(self.Mother.MLCOMP)
 */
  __pyx_t_1 = __pyx_v_self->Mother.NLayers;
  __pyx_t_2 = __pyx_t_1;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "Pythonreflectivity.pyx":121
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):
 *             free(self.Mother.MLCOMP[i])             # <<<<<<<<<<<<<<
 *         free(self.Mother.MLCOMP)
 *         free(self.Mother.MLLENGTH)
 */
    free((__pyx_v_self->Mother.MLCOMP[__pyx_v_i]));
  }

  /* "Pythonreflectivity.pyx":122
 *         for i in range(self.Mother.NLayers):
 *             free(self.Mother.MLCOMP[i])
 *         free(self.Mother.MLCOMP)             # <<<<<<<<<<<<<<
 *         free(self.Mother.MLLENGTH)
 *         free(self.Mother.MLREP)
 */
  free(__pyx_v_self->Mother.MLCOMP);

  /* "Pythonreflectivity.pyx":123
 *             free(self.Mother.MLCOMP[i])
 *         free(self.Mother.MLCOMP)
 *         free(self.Mother.MLLENGTH)             # <<<<<<<<<<<<<<
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 */
  free(__pyx_v_self->Mother.MLLENGTH);

  /* "Pythonreflectivity.pyx":124
 *         free(self.Mother.MLCOMP)
 *         free(self.Mother.MLLENGTH)
 *         free(self.Mother.MLREP)             # <<<<<<<<<<<<<<
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):
 */
  free(__pyx_v_self->Mother.MLREP);

  /* "Pythonreflectivity.pyx":125
 *         free(self.Mother.MLLENGTH)
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)             # <<<<<<<<<<<<<<
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 */
  free(__pyx_v_self->Mother.LR);

  /* "Pythonreflectivity.pyx":118
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):
 */

  /* function exit code */
}

/* "Pythonreflectivity.pyx":126
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static int __pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isthisthelowestlayer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 126, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 126, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":127
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer             # <<<<<<<<<<<<<<
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 */
  __pyx_r = __pyx_v_self->islowestlayer;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":126
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer = {"isthisthelowestlayer", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isthisthelowestlayer (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("isthisthelowestlayer", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "isthisthelowestlayer", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_4isthisthelowestlayer(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_4isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 126, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":128
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  long __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_layercontentpointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 128, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_6 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 128, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":129
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))             # <<<<<<<<<<<<<<
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 */
  __pyx_r = ((long)(&__pyx_v_self->Layercontent));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":128
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_7layercontentpointer = {"layercontentpointer", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("layercontentpointer (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("layercontentpointer", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "layercontentpointer", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_6layercontentpointer(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_6layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 128, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":130
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  long __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("motherpointer", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_motherpointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 130, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 130, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_6 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 130, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":131
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))             # <<<<<<<<<<<<<<
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 */
  __pyx_r = ((long)(&__pyx_v_self->Mother));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":130
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.motherpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_9motherpointer = {"motherpointer", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("motherpointer (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("motherpointer", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "motherpointer", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_8motherpointer(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_8motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("motherpointer", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 130, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.motherpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":132
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 132, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_11d)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 132, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":133
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness             # <<<<<<<<<<<<<<
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 */
  __pyx_r = __pyx_v_self->Layercontent.Thickness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":132
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_11d = {"d", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("d (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("d", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "d", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_10d(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_10d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_d(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 132, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":134
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  unsigned int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_d); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":135
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)             # <<<<<<<<<<<<<<
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":134
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_13setd = {"setd", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  double __pyx_v_d;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setd (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_d)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 134, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setd") < 0)) __PYX_ERR(0, 134, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_d = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 134, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setd", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 134, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_12setd(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_d);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_12setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_setd(__pyx_v_self, __pyx_v_d, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":136
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sigma); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 136, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 136, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 136, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":137
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness             # <<<<<<<<<<<<<<
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 */
  __pyx_r = __pyx_v_self->Layercontent.Roughness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":136
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_15sigma = {"sigma", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sigma (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("sigma", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "sigma", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_14sigma(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_14sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_sigma(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 136, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":138
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  unsigned int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setsigma); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_sigma); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":139
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)             # <<<<<<<<<<<<<<
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":138
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_17setsigma = {"setsigma", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  double __pyx_v_sigma;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setsigma (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sigma,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sigma)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 138, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setsigma") < 0)) __PYX_ERR(0, 138, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_sigma = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 138, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setsigma", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 138, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_16setsigma(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_sigma);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_16setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma(__pyx_v_self, __pyx_v_sigma, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":140
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_19seteps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_19seteps = {"seteps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_19seteps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_19seteps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_epsilon = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("seteps (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_epsilon,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_epsilon)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 140, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "seteps") < 0)) __PYX_ERR(0, 140, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_epsilon = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("seteps", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 140, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.seteps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_18seteps(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_epsilon);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_18seteps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("seteps", 1);

  /* "Pythonreflectivity.pyx":141
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):             # <<<<<<<<<<<<<<
 *             if(len(epsilon) in (1,3,4)):
 * 
 */
  __pyx_t_1 = __Pyx_HasAttr(__pyx_v_epsilon, __pyx_n_s_len); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 141, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":142
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):             # <<<<<<<<<<<<<<
 * 
 *                 if(len(epsilon)==1):
 */
    __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 142, __pyx_L1_error)
    __pyx_t_3 = (__pyx_t_2 == 1);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_t_2 == 3);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_t_2 == 4);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L5_bool_binop_done:;
    __pyx_t_3 = __pyx_t_1;
    if (likely(__pyx_t_3)) {

      /* "Pythonreflectivity.pyx":144
 *             if(len(epsilon) in (1,3,4)):
 * 
 *                 if(len(epsilon)==1):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 */
      __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 144, __pyx_L1_error)
      __pyx_t_3 = (__pyx_t_2 == 1);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":145
 * 
 *                 if(len(epsilon)==1):
 *                     self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 */
        __pyx_v_self->Layercontent.type = 1;

        /* "Pythonreflectivity.pyx":147
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 147, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":148
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 148, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":149
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 149, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 149, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":150
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":151
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 */
        __pyx_v_self->Layercontent.magdir = 0;

        /* "Pythonreflectivity.pyx":144
 *             if(len(epsilon) in (1,3,4)):
 * 
 *                 if(len(epsilon)==1):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":152
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 152, __pyx_L1_error)
      __pyx_t_3 = (__pyx_t_2 == 3);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":153
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 2;

        /* "Pythonreflectivity.pyx":154
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 154, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 154, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":155
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 155, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 155, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":156
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 156, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":157
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":158
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 */
        __pyx_v_self->Layercontent.magdir = 0;

        /* "Pythonreflectivity.pyx":152
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":159
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 159, __pyx_L1_error)
      __pyx_t_3 = (__pyx_t_2 == 4);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":160
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 3;

        /* "Pythonreflectivity.pyx":161
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 161, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 161, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":162
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     if(epsilon[3]==0):
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 162, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 162, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":163
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 163, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 163, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":164
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     if(epsilon[3]==0):             # <<<<<<<<<<<<<<
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 164, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = (__Pyx_PyInt_BoolEqObjC(__pyx_t_4, __pyx_int_0, 0, 0)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 164, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_3) {

          /* "Pythonreflectivity.pyx":165
 *                     self.Layercontent.ez=epsilon[2]
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 */
          __pyx_v_self->Layercontent.magdir = 0;

          /* "Pythonreflectivity.pyx":166
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
          __pyx_v_self->Layercontent.type = 2;

          /* "Pythonreflectivity.pyx":164
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     if(epsilon[3]==0):             # <<<<<<<<<<<<<<
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 */
          goto __pyx_L9;
        }

        /* "Pythonreflectivity.pyx":167
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *                     self.Layercontent.eg=epsilon[3]
 */
        __pyx_t_3 = (__pyx_v_self->Layercontent.magdir == 0);
        if (unlikely(__pyx_t_3)) {

          /* "Pythonreflectivity.pyx":168
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=epsilon[3]
 * 
 */
          __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 168, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_Raise(__pyx_t_4, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __PYX_ERR(0, 168, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":167
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *                     self.Layercontent.eg=epsilon[3]
 */
        }
        __pyx_L9:;

        /* "Pythonreflectivity.pyx":169
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *                     self.Layercontent.eg=epsilon[3]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 169, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 169, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.eg = __pyx_t_5;

        /* "Pythonreflectivity.pyx":159
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 */
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":142
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):             # <<<<<<<<<<<<<<
 * 
 *                 if(len(epsilon)==1):
 */
      goto __pyx_L4;
    }

    /* "Pythonreflectivity.pyx":174
 * 
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')             # <<<<<<<<<<<<<<
 *         else:
 *             self.Layercontent.type=1
 */
    /*else*/ {
      __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_ERR(0, 174, __pyx_L1_error)
    }
    __pyx_L4:;

    /* "Pythonreflectivity.pyx":141
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):             # <<<<<<<<<<<<<<
 *             if(len(epsilon) in (1,3,4)):
 * 
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":176
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')
 *         else:
 *             self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 */
  /*else*/ {
    __pyx_v_self->Layercontent.type = 1;

    /* "Pythonreflectivity.pyx":177
 *         else:
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 177, __pyx_L1_error)
    __pyx_v_self->Layercontent.ex = __pyx_t_5;

    /* "Pythonreflectivity.pyx":178
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 178, __pyx_L1_error)
    __pyx_v_self->Layercontent.ey = __pyx_t_5;

    /* "Pythonreflectivity.pyx":179
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon             # <<<<<<<<<<<<<<
 *     def eps(self, wl=-1):
 *         if(self.Layercontent.type==1):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L1_error)
    __pyx_v_self->Layercontent.ez = __pyx_t_5;
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":140
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.seteps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":180
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_21eps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_21eps = {"eps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_21eps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_21eps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_wl = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eps (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_wl,0};
    values[0] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)__pyx_int_neg_1));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_wl);
          if (value) { values[0] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 180, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "eps") < 0)) __PYX_ERR(0, 180, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_wl = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("eps", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 180, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.eps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_20eps(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_wl);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_20eps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_wl) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  unsigned int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eps", 1);

  /* "Pythonreflectivity.pyx":181
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):
 *         if(self.Layercontent.type==1):             # <<<<<<<<<<<<<<
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 */
  switch (__pyx_v_self->Layercontent.type) {
    case 1:

    /* "Pythonreflectivity.pyx":182
 *     def eps(self, wl=-1):
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":181
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):
 *         if(self.Layercontent.type==1):             # <<<<<<<<<<<<<<
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 */
    break;
    case 2:

    /* "Pythonreflectivity.pyx":184
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])             # <<<<<<<<<<<<<<
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyList_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_2);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4)) __PYX_ERR(0, 184, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_5);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5)) __PYX_ERR(0, 184, __pyx_L1_error);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 184, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":183
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):             # <<<<<<<<<<<<<<
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 */
    break;
    default:

    /* "Pythonreflectivity.pyx":186
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])             # <<<<<<<<<<<<<<
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.eg); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = PyList_New(4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 0, __pyx_t_3)) __PYX_ERR(0, 186, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_5);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_5)) __PYX_ERR(0, 186, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 2, __pyx_t_4)) __PYX_ERR(0, 186, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_2);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 3, __pyx_t_2)) __PYX_ERR(0, 186, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_5 = 0;
    __pyx_t_4 = 0;
    __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_8};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
  }

  /* "Pythonreflectivity.pyx":180
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.eps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":187
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsxx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 187, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":188
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 */
  __pyx_r = __pyx_v_self->Layercontent.ex;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":187
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_23epsxx = {"epsxx", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsxx (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("epsxx", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "epsxx", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_22epsxx(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_22epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":189
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsyy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 189, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":190
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey             # <<<<<<<<<<<<<<
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 */
  __pyx_r = __pyx_v_self->Layercontent.ey;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":189
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_25epsyy = {"epsyy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsyy (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("epsyy", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "epsyy", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_24epsyy(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_24epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 189, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":191
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epszz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 191, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 191, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":192
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez             # <<<<<<<<<<<<<<
 *     cpdef double complex eg(self):
 *         return self.Layercontent.eg
 */
  __pyx_r = __pyx_v_self->Layercontent.ez;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":191
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_27epszz = {"epszz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epszz (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("epszz", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "epszz", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_26epszz(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_26epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_epszz(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 191, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":193
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eg", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_eg); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 193, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 193, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":194
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 *         return self.Layercontent.eg             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->Layercontent.eg;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":193
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.eg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_29eg = {"eg", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eg (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("eg", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "eg", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_28eg(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_28eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eg", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_eg(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 193, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.eg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":199
 * 
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_31setmag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_31setmag = {"setmag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_31setmag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_31setmag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_dir = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setmag (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dir,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dir)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 199, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setmag") < 0)) __PYX_ERR(0, 199, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_dir = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setmag", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 199, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_30setmag(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_dir);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_30setmag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_dir) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setmag", 1);

  /* "Pythonreflectivity.pyx":200
 * 
 *     def setmag(self, dir):
 *         if(dir=='x'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_x, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 200, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":201
 *     def setmag(self, dir):
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1             # <<<<<<<<<<<<<<
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 */
    __pyx_v_self->Layercontent.magdir = 1;

    /* "Pythonreflectivity.pyx":200
 * 
 *     def setmag(self, dir):
 *         if(dir=='x'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":202
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_y, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 202, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":203
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2             # <<<<<<<<<<<<<<
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 */
    __pyx_v_self->Layercontent.magdir = 2;

    /* "Pythonreflectivity.pyx":202
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":204
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_z, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 204, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":205
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3             # <<<<<<<<<<<<<<
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0
 */
    __pyx_v_self->Layercontent.magdir = 3;

    /* "Pythonreflectivity.pyx":204
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":206
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *         else:
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_kp_s_0, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 206, __pyx_L1_error)
  if (likely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":207
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 */
    __pyx_v_self->Layercontent.magdir = 0;

    /* "Pythonreflectivity.pyx":206
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":209
 *             self.Layercontent.magdir=0
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")             # <<<<<<<<<<<<<<
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 209, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 209, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":199
 * 
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":210
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_33mag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_33mag = {"mag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_33mag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_33mag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mag (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("mag", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "mag", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_32mag(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_32mag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("mag", 1);

  /* "Pythonreflectivity.pyx":211
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):
 *         if(self.Layercontent.type==3):             # <<<<<<<<<<<<<<
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 */
  __pyx_t_1 = (__pyx_v_self->Layercontent.type == 3);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":212
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 */
    switch (__pyx_v_self->Layercontent.magdir) {
      case 1:

      /* "Pythonreflectivity.pyx":213
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_x_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_x_direction;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":212
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 */
      break;
      case 2:

      /* "Pythonreflectivity.pyx":215
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_y_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_y_direction;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":214
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 */
      break;
      case 3:

      /* "Pythonreflectivity.pyx":217
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"             # <<<<<<<<<<<<<<
 *             else:
 *                 return "No magnetization has been set"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_z_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_z_direction;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":216
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the z direction"
 *             else:
 */
      break;
      default:

      /* "Pythonreflectivity.pyx":219
 *                 return "Magnetized along the z direction"
 *             else:
 *                 return "No magnetization has been set"             # <<<<<<<<<<<<<<
 *         else:
 *             return "This layer is not magnetic"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_No_magnetization_has_been_set);
      __pyx_r = __pyx_kp_s_No_magnetization_has_been_set;
      goto __pyx_L0;
      break;
    }

    /* "Pythonreflectivity.pyx":211
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):
 *         if(self.Layercontent.type==3):             # <<<<<<<<<<<<<<
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 */
  }

  /* "Pythonreflectivity.pyx":221
 *                 return "No magnetization has been set"
 *         else:
 *             return "This layer is not magnetic"             # <<<<<<<<<<<<<<
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_s_This_layer_is_not_magnetic);
    __pyx_r = __pyx_kp_s_This_layer_is_not_magnetic;
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":210
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":222
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

static int __pyx_f_18Pythonreflectivity_11Lowestlayer_GetType(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  int __pyx_r;

  /* "Pythonreflectivity.pyx":223
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):
 *         return self.Layercontent.type             # <<<<<<<<<<<<<<
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 */
  __pyx_r = __pyx_v_self->Layercontent.type;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":222
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":224
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

static int __pyx_f_18Pythonreflectivity_11Lowestlayer_dir(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  int __pyx_r;

  /* "Pythonreflectivity.pyx":225
 *         return self.Layercontent.type
 *     cdef int dir(self):
 *         return self.Layercontent.magdir             # <<<<<<<<<<<<<<
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 */
  __pyx_r = __pyx_v_self->Layercontent.magdir;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":224
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":226
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_35setepsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_35setepsxx = {"setepsxx", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_35setepsxx, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_35setepsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsxx (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 226, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepsxx") < 0)) __PYX_ERR(0, 226, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepsxx", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 226, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_34setepsxx(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_34setepsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsxx", 1);

  /* "Pythonreflectivity.pyx":227
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x             # <<<<<<<<<<<<<<
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 227, __pyx_L1_error)
  __pyx_v_self->Layercontent.ex = __pyx_t_1;

  /* "Pythonreflectivity.pyx":226
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":228
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_37setepsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_37setepsyy = {"setepsyy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_37setepsyy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_37setepsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsyy (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 228, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepsyy") < 0)) __PYX_ERR(0, 228, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepsyy", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 228, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_36setepsyy(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_36setepsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsyy", 1);

  /* "Pythonreflectivity.pyx":229
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x             # <<<<<<<<<<<<<<
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 229, __pyx_L1_error)
  __pyx_v_self->Layercontent.ey = __pyx_t_1;

  /* "Pythonreflectivity.pyx":228
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":230
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_39setepszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_39setepszz = {"setepszz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_39setepszz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_39setepszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepszz (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 230, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepszz") < 0)) __PYX_ERR(0, 230, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepszz", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 230, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_38setepszz(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_38setepszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepszz", 1);

  /* "Pythonreflectivity.pyx":231
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x             # <<<<<<<<<<<<<<
 *     def setepsg(self,  x):
 *         if(x==0):
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 231, __pyx_L1_error)
  __pyx_v_self->Layercontent.ez = __pyx_t_1;

  /* "Pythonreflectivity.pyx":230
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":232
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_41setepsg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_41setepsg = {"setepsg", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_41setepsg, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_41setepsg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsg (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 232, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepsg") < 0)) __PYX_ERR(0, 232, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepsg", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 232, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_40setepsg(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_40setepsg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsg", 1);

  /* "Pythonreflectivity.pyx":233
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 *         if(x==0):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 */
  __pyx_t_1 = (__Pyx_PyInt_BoolEqObjC(__pyx_v_x, __pyx_int_0, 0, 0)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 233, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":234
 *     def setepsg(self,  x):
 *         if(x==0):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 */
    __pyx_v_self->Layercontent.magdir = 0;

    /* "Pythonreflectivity.pyx":235
 *         if(x==0):
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
    __pyx_v_self->Layercontent.type = 2;

    /* "Pythonreflectivity.pyx":233
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 *         if(x==0):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":236
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x
 */
  __pyx_t_1 = (__pyx_v_self->Layercontent.magdir == 0);
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":237
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=x
 * #    def __getstate__(self):
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 237, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":236
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x
 */
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":238
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x             # <<<<<<<<<<<<<<
 * #    def __getstate__(self):
 * #        return list([self.Layercontent.Thickness, \
 */
  __pyx_t_3 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 238, __pyx_L1_error)
  __pyx_v_self->Layercontent.eg = __pyx_t_3;

  /* "Pythonreflectivity.pyx":232
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_43__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_43__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_43__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_43__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_42__reduce_cython__(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_42__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_45__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_11Lowestlayer_45__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_45__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_45__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_44__setstate_cython__(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_44__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":263
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma=0):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 */

/* Python wrapper */
static int __pyx_pw_18Pythonreflectivity_5Layer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_18Pythonreflectivity_5Layer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_d;
  double __pyx_v_sigma;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d,&__pyx_n_s_sigma,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_d)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 263, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sigma);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 263, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 263, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_d = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 263, __pyx_L3_error)
    if (values[1]) {
      __pyx_v_sigma = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 263, __pyx_L3_error)
    } else {
      __pyx_v_sigma = ((double)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 263, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer___cinit__(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_d, __pyx_v_sigma);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_18Pythonreflectivity_5Layer___cinit__(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma) {
  int __pyx_r;

  /* "Pythonreflectivity.pyx":264
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma=0):
 *         self.Layercontent.Thickness = d             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":265
 *     def __cinit__(self, double d, double sigma=0):
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma             # <<<<<<<<<<<<<<
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":266
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 */
  __pyx_v_self->Layercontent.type = 1;

  /* "Pythonreflectivity.pyx":267
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 */
  __pyx_v_self->Layercontent.magdir = 0;

  /* "Pythonreflectivity.pyx":268
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 */
  __pyx_v_self->Layercontent.ex = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":269
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 */
  __pyx_v_self->Layercontent.ey = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":270
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 */
  __pyx_v_self->Layercontent.ez = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":271
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):
 */
  __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":272
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0             # <<<<<<<<<<<<<<
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 */
  __pyx_v_self->islowestlayer = 0;

  /* "Pythonreflectivity.pyx":263
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma=0):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":273
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isthisthelowestlayer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 273, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 273, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":274
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer             # <<<<<<<<<<<<<<
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 */
  __pyx_r = __pyx_v_self->islowestlayer;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":273
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_3isthisthelowestlayer = {"isthisthelowestlayer", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isthisthelowestlayer (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("isthisthelowestlayer", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "isthisthelowestlayer", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_2isthisthelowestlayer(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_2isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 273, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":275
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static long __pyx_f_18Pythonreflectivity_5Layer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  long __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_layercontentpointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 275, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 275, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_6 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":276
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))             # <<<<<<<<<<<<<<
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 */
  __pyx_r = ((long)(&__pyx_v_self->Layercontent));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":275
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_5layercontentpointer = {"layercontentpointer", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("layercontentpointer (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("layercontentpointer", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "layercontentpointer", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_4layercontentpointer(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_4layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_layercontentpointer(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":277
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_7d(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_d); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 277, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_7d)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 277, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 277, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":278
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness             # <<<<<<<<<<<<<<
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 */
  __pyx_r = __pyx_v_self->Layercontent.Thickness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":277
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_7d(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_7d = {"d", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_7d, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_7d(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("d (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("d", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "d", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_6d(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_6d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_d(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 277, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":279
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_9setd(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  unsigned int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 279, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_9setd)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_d); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 279, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 279, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":280
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)             # <<<<<<<<<<<<<<
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":279
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_9setd(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_9setd = {"setd", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_9setd, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_9setd(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  double __pyx_v_d;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setd (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_d)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setd") < 0)) __PYX_ERR(0, 279, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_d = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setd", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 279, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_8setd(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_d);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_8setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_setd(__pyx_v_self, __pyx_v_d, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":281
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_11sigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sigma); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 281, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_11sigma)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 281, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":282
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness             # <<<<<<<<<<<<<<
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 */
  __pyx_r = __pyx_v_self->Layercontent.Roughness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":281
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_11sigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_11sigma = {"sigma", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_11sigma, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_11sigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sigma (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("sigma", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "sigma", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_10sigma(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_10sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_sigma(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 281, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":283
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_13setsigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  unsigned int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setsigma); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 283, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_13setsigma)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_sigma); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 283, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 283, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":284
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)             # <<<<<<<<<<<<<<
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":283
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_13setsigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_13setsigma = {"setsigma", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_13setsigma, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_13setsigma(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  double __pyx_v_sigma;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setsigma (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sigma,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sigma)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 283, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setsigma") < 0)) __PYX_ERR(0, 283, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_sigma = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 283, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setsigma", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 283, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_12setsigma(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_sigma);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_12setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_setsigma(__pyx_v_self, __pyx_v_sigma, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":285
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_15seteps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_15seteps = {"seteps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_15seteps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_15seteps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_epsilon = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("seteps (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_epsilon,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_epsilon)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 285, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "seteps") < 0)) __PYX_ERR(0, 285, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_epsilon = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("seteps", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 285, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.seteps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_14seteps(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_epsilon);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_14seteps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("seteps", 1);

  /* "Pythonreflectivity.pyx":286
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):             # <<<<<<<<<<<<<<
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):
 */
  __pyx_t_1 = __Pyx_HasAttr(__pyx_v_epsilon, __pyx_n_s_len); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 286, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":287
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):             # <<<<<<<<<<<<<<
 *                 if(len(epsilon)==1):
 *                     self.Layercontent.type=1
 */
    __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 287, __pyx_L1_error)
    __pyx_t_3 = (__pyx_t_2 == 1);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_t_2 == 3);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_1 = __pyx_t_3;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_t_2 == 4);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L5_bool_binop_done:;
    __pyx_t_3 = __pyx_t_1;
    if (likely(__pyx_t_3)) {

      /* "Pythonreflectivity.pyx":288
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 */
      __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 288, __pyx_L1_error)
      __pyx_t_3 = (__pyx_t_2 == 1);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":289
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):
 *                     self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 */
        __pyx_v_self->Layercontent.type = 1;

        /* "Pythonreflectivity.pyx":291
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 291, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":292
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 292, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 292, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":293
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 293, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 293, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":294
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":295
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 */
        __pyx_v_self->Layercontent.magdir = 0;

        /* "Pythonreflectivity.pyx":288
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":296
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 296, __pyx_L1_error)
      __pyx_t_3 = (__pyx_t_2 == 3);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":297
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 2;

        /* "Pythonreflectivity.pyx":298
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 298, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":299
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 299, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":300
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 300, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":301
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":302
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 */
        __pyx_v_self->Layercontent.magdir = 0;

        /* "Pythonreflectivity.pyx":296
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":303
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_2 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 303, __pyx_L1_error)
      __pyx_t_3 = (__pyx_t_2 == 4);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":304
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 3;

        /* "Pythonreflectivity.pyx":305
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 305, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":306
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=epsilon[3]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 306, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 306, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":307
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=epsilon[3]
 *                     if(epsilon[3]==0):
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 307, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":308
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=epsilon[3]             # <<<<<<<<<<<<<<
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 308, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 308, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.eg = __pyx_t_5;

        /* "Pythonreflectivity.pyx":309
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=epsilon[3]
 *                     if(epsilon[3]==0):             # <<<<<<<<<<<<<<
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 309, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = (__Pyx_PyInt_BoolEqObjC(__pyx_t_4, __pyx_int_0, 0, 0)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 309, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_3) {

          /* "Pythonreflectivity.pyx":310
 *                     self.Layercontent.eg=epsilon[3]
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 */
          __pyx_v_self->Layercontent.magdir = 0;

          /* "Pythonreflectivity.pyx":311
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
          __pyx_v_self->Layercontent.type = 2;

          /* "Pythonreflectivity.pyx":309
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=epsilon[3]
 *                     if(epsilon[3]==0):             # <<<<<<<<<<<<<<
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 */
          goto __pyx_L9;
        }

        /* "Pythonreflectivity.pyx":312
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *             else:
 */
        __pyx_t_3 = (__pyx_v_self->Layercontent.magdir == 0);
        if (unlikely(__pyx_t_3)) {

          /* "Pythonreflectivity.pyx":313
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')
 */
          __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 313, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_Raise(__pyx_t_4, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __PYX_ERR(0, 313, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":312
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *             else:
 */
        }
        __pyx_L9:;

        /* "Pythonreflectivity.pyx":303
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 */
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":287
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):             # <<<<<<<<<<<<<<
 *                 if(len(epsilon)==1):
 *                     self.Layercontent.type=1
 */
      goto __pyx_L4;
    }

    /* "Pythonreflectivity.pyx":315
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')             # <<<<<<<<<<<<<<
 *         else:
 *             self.Layercontent.type=1
 */
    /*else*/ {
      __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 315, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_ERR(0, 315, __pyx_L1_error)
    }
    __pyx_L4:;

    /* "Pythonreflectivity.pyx":286
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):             # <<<<<<<<<<<<<<
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":317
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')
 *         else:
 *             self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 */
  /*else*/ {
    __pyx_v_self->Layercontent.type = 1;

    /* "Pythonreflectivity.pyx":318
 *         else:
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 318, __pyx_L1_error)
    __pyx_v_self->Layercontent.ex = __pyx_t_5;

    /* "Pythonreflectivity.pyx":319
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ez=epsilon
 *     def eps(self):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 319, __pyx_L1_error)
    __pyx_v_self->Layercontent.ey = __pyx_t_5;

    /* "Pythonreflectivity.pyx":320
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon             # <<<<<<<<<<<<<<
 *     def eps(self):
 *         if(self.Layercontent.type==1):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 320, __pyx_L1_error)
    __pyx_v_self->Layercontent.ez = __pyx_t_5;
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":285
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.seteps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":321
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_17eps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_17eps = {"eps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_17eps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_17eps(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eps (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("eps", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "eps", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_16eps(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_16eps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  unsigned int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eps", 1);

  /* "Pythonreflectivity.pyx":322
 *             self.Layercontent.ez=epsilon
 *     def eps(self):
 *         if(self.Layercontent.type==1):             # <<<<<<<<<<<<<<
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 */
  switch (__pyx_v_self->Layercontent.type) {
    case 1:

    /* "Pythonreflectivity.pyx":323
 *     def eps(self):
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":322
 *             self.Layercontent.ez=epsilon
 *     def eps(self):
 *         if(self.Layercontent.type==1):             # <<<<<<<<<<<<<<
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 */
    break;
    case 2:

    /* "Pythonreflectivity.pyx":325
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])             # <<<<<<<<<<<<<<
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyList_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_2);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_2)) __PYX_ERR(0, 325, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4)) __PYX_ERR(0, 325, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_5);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5)) __PYX_ERR(0, 325, __pyx_L1_error);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":324
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):             # <<<<<<<<<<<<<<
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 */
    break;
    default:

    /* "Pythonreflectivity.pyx":327
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])             # <<<<<<<<<<<<<<
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.eg); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = PyList_New(4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 0, __pyx_t_3)) __PYX_ERR(0, 327, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_5);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_5)) __PYX_ERR(0, 327, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 2, __pyx_t_4)) __PYX_ERR(0, 327, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_2);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_8, 3, __pyx_t_2)) __PYX_ERR(0, 327, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_5 = 0;
    __pyx_t_4 = 0;
    __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_8};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 327, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
  }

  /* "Pythonreflectivity.pyx":321
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.eps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":328
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_19epsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsxx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_19epsxx)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":329
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 */
  __pyx_r = __pyx_v_self->Layercontent.ex;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":328
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_19epsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_19epsxx = {"epsxx", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_19epsxx, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_19epsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsxx (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("epsxx", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "epsxx", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_18epsxx(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_18epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epsxx(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":330
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_21epsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsyy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 330, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_21epsyy)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 330, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 330, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":331
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey             # <<<<<<<<<<<<<<
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 */
  __pyx_r = __pyx_v_self->Layercontent.ey;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":330
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_21epsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_21epsyy = {"epsyy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_21epsyy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_21epsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsyy (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("epsyy", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "epsyy", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_20epsyy(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_20epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epsyy(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 330, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":332
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_23epszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epszz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_23epszz)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 332, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 332, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":333
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez             # <<<<<<<<<<<<<<
 *     cpdef double complex epsg(self):
 *         return self.Layercontent.eg
 */
  __pyx_r = __pyx_v_self->Layercontent.ez;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":332
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_23epszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_23epszz = {"epszz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_23epszz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_23epszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epszz (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("epszz", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "epszz", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_22epszz(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_22epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epszz(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 332, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":334
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_25epsg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __pyx_t_double_complex __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsg", 1);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || __Pyx_PyType_HasFeature(Py_TYPE(((PyObject *)__pyx_v_self)), (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_typedict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsg); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 334, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!__Pyx_IsSameCFunction(__pyx_t_1, (void*) __pyx_pw_18Pythonreflectivity_5Layer_25epsg)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 334, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_6 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 334, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_6;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_typedict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Pythonreflectivity.pyx":335
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 *         return self.Layercontent.eg             # <<<<<<<<<<<<<<
 * 
 *     def setmag(self, dir):
 */
  __pyx_r = __pyx_v_self->Layercontent.eg;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":334
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_25epsg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_25epsg = {"epsg", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_25epsg, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_25epsg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsg (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("epsg", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "epsg", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_24epsg(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_24epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsg", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epsg(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 334, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":337
 *         return self.Layercontent.eg
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_27setmag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_27setmag = {"setmag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_27setmag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_27setmag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_dir = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setmag (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dir,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dir)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 337, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setmag") < 0)) __PYX_ERR(0, 337, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_dir = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setmag", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 337, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_26setmag(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_dir);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_26setmag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_dir) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setmag", 1);

  /* "Pythonreflectivity.pyx":338
 * 
 *     def setmag(self, dir):
 *         if(dir=='x'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_x, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 338, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":339
 *     def setmag(self, dir):
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1             # <<<<<<<<<<<<<<
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 */
    __pyx_v_self->Layercontent.magdir = 1;

    /* "Pythonreflectivity.pyx":338
 * 
 *     def setmag(self, dir):
 *         if(dir=='x'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":340
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_y, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 340, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":341
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2             # <<<<<<<<<<<<<<
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 */
    __pyx_v_self->Layercontent.magdir = 2;

    /* "Pythonreflectivity.pyx":340
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":342
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_z, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 342, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":343
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3             # <<<<<<<<<<<<<<
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0
 */
    __pyx_v_self->Layercontent.magdir = 3;

    /* "Pythonreflectivity.pyx":342
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":344
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *         else:
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_kp_s_0, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 344, __pyx_L1_error)
  if (likely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":345
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 */
    __pyx_v_self->Layercontent.magdir = 0;

    /* "Pythonreflectivity.pyx":344
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":347
 *             self.Layercontent.magdir=0
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")             # <<<<<<<<<<<<<<
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 347, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":337
 *         return self.Layercontent.eg
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":348
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_29mag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_29mag = {"mag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_29mag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_29mag(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mag (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("mag", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "mag", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_28mag(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_28mag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("mag", 1);

  /* "Pythonreflectivity.pyx":349
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):
 *         if(self.Layercontent.type==3):             # <<<<<<<<<<<<<<
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 */
  __pyx_t_1 = (__pyx_v_self->Layercontent.type == 3);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":350
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 */
    switch (__pyx_v_self->Layercontent.magdir) {
      case 1:

      /* "Pythonreflectivity.pyx":351
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_x_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_x_direction;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":350
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 */
      break;
      case 2:

      /* "Pythonreflectivity.pyx":353
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_y_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_y_direction;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":352
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 */
      break;
      case 3:

      /* "Pythonreflectivity.pyx":355
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"             # <<<<<<<<<<<<<<
 *             else:
 *                 return "No magnetization has been set"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_z_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_z_direction;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":354
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the z direction"
 *             else:
 */
      break;
      default:

      /* "Pythonreflectivity.pyx":357
 *                 return "Magnetized along the z direction"
 *             else:
 *                 return "No magnetization has been set"             # <<<<<<<<<<<<<<
 *         else:
 *             return "This layer is not magnetic"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_No_magnetization_has_been_set);
      __pyx_r = __pyx_kp_s_No_magnetization_has_been_set;
      goto __pyx_L0;
      break;
    }

    /* "Pythonreflectivity.pyx":349
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):
 *         if(self.Layercontent.type==3):             # <<<<<<<<<<<<<<
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 */
  }

  /* "Pythonreflectivity.pyx":359
 *                 return "No magnetization has been set"
 *         else:
 *             return "This layer is not magnetic"             # <<<<<<<<<<<<<<
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_s_This_layer_is_not_magnetic);
    __pyx_r = __pyx_kp_s_This_layer_is_not_magnetic;
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":348
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":360
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

static int __pyx_f_18Pythonreflectivity_5Layer_GetType(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  int __pyx_r;

  /* "Pythonreflectivity.pyx":361
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):
 *         return self.Layercontent.type             # <<<<<<<<<<<<<<
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 */
  __pyx_r = __pyx_v_self->Layercontent.type;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":360
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":362
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

static int __pyx_f_18Pythonreflectivity_5Layer_dir(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  int __pyx_r;

  /* "Pythonreflectivity.pyx":363
 *         return self.Layercontent.type
 *     cdef int dir(self):
 *         return self.Layercontent.magdir             # <<<<<<<<<<<<<<
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 */
  __pyx_r = __pyx_v_self->Layercontent.magdir;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":362
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":364
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_31setepsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_31setepsxx = {"setepsxx", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_31setepsxx, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_31setepsxx(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsxx (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 364, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepsxx") < 0)) __PYX_ERR(0, 364, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepsxx", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 364, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_30setepsxx(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_30setepsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsxx", 1);

  /* "Pythonreflectivity.pyx":365
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x             # <<<<<<<<<<<<<<
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 365, __pyx_L1_error)
  __pyx_v_self->Layercontent.ex = __pyx_t_1;

  /* "Pythonreflectivity.pyx":364
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":366
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_33setepsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_33setepsyy = {"setepsyy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_33setepsyy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_33setepsyy(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsyy (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 366, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepsyy") < 0)) __PYX_ERR(0, 366, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepsyy", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 366, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_32setepsyy(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_32setepsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsyy", 1);

  /* "Pythonreflectivity.pyx":367
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x             # <<<<<<<<<<<<<<
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 367, __pyx_L1_error)
  __pyx_v_self->Layercontent.ey = __pyx_t_1;

  /* "Pythonreflectivity.pyx":366
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":368
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_35setepszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_35setepszz = {"setepszz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_35setepszz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_35setepszz(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepszz (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 368, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepszz") < 0)) __PYX_ERR(0, 368, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepszz", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 368, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_34setepszz(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_34setepszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepszz", 1);

  /* "Pythonreflectivity.pyx":369
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x             # <<<<<<<<<<<<<<
 *     def setepsg(self,  x):
 *         if(x==0):
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 369, __pyx_L1_error)
  __pyx_v_self->Layercontent.ez = __pyx_t_1;

  /* "Pythonreflectivity.pyx":368
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":370
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_37setepsg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_37setepsg = {"setepsg", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_37setepsg, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_37setepsg(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsg (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 370, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "setepsg") < 0)) __PYX_ERR(0, 370, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setepsg", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 370, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_36setepsg(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_36setepsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsg", 1);

  /* "Pythonreflectivity.pyx":371
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 *         if(x==0):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 */
  __pyx_t_1 = (__Pyx_PyInt_BoolEqObjC(__pyx_v_x, __pyx_int_0, 0, 0)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 371, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":372
 *     def setepsg(self,  x):
 *         if(x==0):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 */
    __pyx_v_self->Layercontent.magdir = 0;

    /* "Pythonreflectivity.pyx":373
 *         if(x==0):
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
    __pyx_v_self->Layercontent.type = 2;

    /* "Pythonreflectivity.pyx":371
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 *         if(x==0):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":374
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x
 */
  __pyx_t_1 = (__pyx_v_self->Layercontent.magdir == 0);
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":375
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=x
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 375, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":374
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x
 */
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":376
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 376, __pyx_L1_error)
  __pyx_v_self->Layercontent.eg = __pyx_t_3;

  /* "Pythonreflectivity.pyx":370
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_39__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_39__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_38__reduce_cython__(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_38__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_5Layer_41__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_41__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Layer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_40__setstate_cython__(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_40__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":386
 * 
 * 
 * cdef inline double complex cquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double quadr(double x):
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cquadr(__pyx_t_double_complex __pyx_v_x) {
  __pyx_t_double_complex __pyx_r;

  /* "Pythonreflectivity.pyx":387
 * 
 * cdef inline double complex cquadr(double complex x):
 *     return x*x             # <<<<<<<<<<<<<<
 * cdef inline double quadr(double x):
 *     return x*x
 */
  __pyx_r = __Pyx_c_prod_double(__pyx_v_x, __pyx_v_x);
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":386
 * 
 * 
 * cdef inline double complex cquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double quadr(double x):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":388
 * cdef inline double complex cquadr(double complex x):
 *     return x*x
 * cdef inline double quadr(double x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double cabsquadr(double complex x):
 */

static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_quadr(double __pyx_v_x) {
  double __pyx_r;

  /* "Pythonreflectivity.pyx":389
 *     return x*x
 * cdef inline double quadr(double x):
 *     return x*x             # <<<<<<<<<<<<<<
 * cdef inline double cabsquadr(double complex x):
 *     return quadr(x.real)+quadr(x.imag)
 */
  __pyx_r = (__pyx_v_x * __pyx_v_x);
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":388
 * cdef inline double complex cquadr(double complex x):
 *     return x*x
 * cdef inline double quadr(double x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double cabsquadr(double complex x):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":390
 * cdef inline double quadr(double x):
 *     return x*x
 * cdef inline double cabsquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return quadr(x.real)+quadr(x.imag)
 * 
 */

static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_t_double_complex __pyx_v_x) {
  double __pyx_r;
  double __pyx_t_1;
  double __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":391
 *     return x*x
 * cdef inline double cabsquadr(double complex x):
 *     return quadr(x.real)+quadr(x.imag)             # <<<<<<<<<<<<<<
 * 
 * cdef double complex cconj(double complex x):
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_quadr(__Pyx_CREAL(__pyx_v_x)); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 391, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_18Pythonreflectivity_quadr(__Pyx_CIMAG(__pyx_v_x)); if (unlikely(__pyx_t_2 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 391, __pyx_L1_error)
  __pyx_r = (__pyx_t_1 + __pyx_t_2);
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":390
 * cdef inline double quadr(double x):
 *     return x*x
 * cdef inline double cabsquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return quadr(x.real)+quadr(x.imag)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.cabsquadr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":393
 *     return quadr(x.real)+quadr(x.imag)
 * 
 * cdef double complex cconj(double complex x):             # <<<<<<<<<<<<<<
 *     return x.real -1j*x.imag
 * 
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cconj(__pyx_t_double_complex __pyx_v_x) {
  __pyx_t_double_complex __pyx_r;

  /* "Pythonreflectivity.pyx":394
 * 
 * cdef double complex cconj(double complex x):
 *     return x.real -1j*x.imag             # <<<<<<<<<<<<<<
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):
 */
  __pyx_r = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_v_x), 0), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__Pyx_CIMAG(__pyx_v_x), 0)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":393
 *     return quadr(x.real)+quadr(x.imag)
 * 
 * cdef double complex cconj(double complex x):             # <<<<<<<<<<<<<<
 *     return x.real -1j*x.imag
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":396
 *     return x.real -1j*x.imag
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):             # <<<<<<<<<<<<<<
 *     return sqrt(ex-vyvy)
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZsigma(double __pyx_v_vyvy, __pyx_t_double_complex __pyx_v_ex) {
  __pyx_t_double_complex __pyx_r;

  /* "Pythonreflectivity.pyx":397
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):
 *     return sqrt(ex-vyvy)             # <<<<<<<<<<<<<<
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):
 */
  __pyx_r = sqrt(__Pyx_c_diff_double(__pyx_v_ex, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":396
 *     return x.real -1j*x.imag
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):             # <<<<<<<<<<<<<<
 *     return sqrt(ex-vyvy)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":399
 *     return sqrt(ex-vyvy)
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi(double __pyx_v_vyvy, __pyx_t_double_complex __pyx_v_ey, __pyx_t_double_complex __pyx_v_ez) {
  __pyx_t_double_complex __pyx_r;
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":400
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):
 *     return sqrt((1.-vyvy/ez)*ey)             # <<<<<<<<<<<<<<
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_ez))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 400, __pyx_L1_error)
  }
  __pyx_r = sqrt(__Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot_double(__pyx_t_1, __pyx_v_ez)), __pyx_v_ey));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":399
 *     return sqrt(ex-vyvy)
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.CalculateVZpi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":402
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey+eg*eg/ez)
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi_m(double __pyx_v_vyvy, __pyx_t_double_complex __pyx_v_ey, __pyx_t_double_complex __pyx_v_ez, __pyx_t_double_complex __pyx_v_eg) {
  __pyx_t_double_complex __pyx_r;
  __pyx_t_double_complex __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":403
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):
 *     return sqrt((1.-vyvy/ez)*ey+eg*eg/ez)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_ez))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 403, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_c_prod_double(__pyx_v_eg, __pyx_v_eg);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_ez))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 403, __pyx_L1_error)
  }
  __pyx_r = sqrt(__Pyx_c_sum_double(__Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot_double(__pyx_t_1, __pyx_v_ez)), __pyx_v_ey), __Pyx_c_quot_double(__pyx_t_2, __pyx_v_ez)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":402
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey+eg*eg/ez)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.CalculateVZpi_m", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":406
 * 
 * 
 * cdef void Calculate_Multilayer(double complex *t_comp1_up, double complex *t_comp2_up, double complex *t_comp1_do, double complex *t_comp2_do, double complex *r_ML_in1, double complex *r_ML_in2, double complex *r_ML_ba1, double complex *r_ML_ba2, double N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex rres1, rres2, tres_up, tres_do, MLfac
 */

static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer(__pyx_t_double_complex *__pyx_v_t_comp1_up, __pyx_t_double_complex *__pyx_v_t_comp2_up, __pyx_t_double_complex *__pyx_v_t_comp1_do, __pyx_t_double_complex *__pyx_v_t_comp2_do, __pyx_t_double_complex *__pyx_v_r_ML_in1, __pyx_t_double_complex *__pyx_v_r_ML_in2, __pyx_t_double_complex *__pyx_v_r_ML_ba1, __pyx_t_double_complex *__pyx_v_r_ML_ba2, double __pyx_v_N) {
  __pyx_t_double_complex __pyx_v_rres1;
  __pyx_t_double_complex __pyx_v_rres2;
  __pyx_t_double_complex __pyx_v_tres_up;
  __pyx_t_double_complex __pyx_v_tres_do;
  __pyx_t_double_complex __pyx_v_MLfac;
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":410
 *     cdef double complex rres1, rres2, tres_up, tres_do, MLfac
 * 
 *     rres1=r_ML_in1[0]             # <<<<<<<<<<<<<<
 *     rres2=r_ML_ba1[0]
 *     tres_up=t_comp1_up[0]
 */
  __pyx_v_rres1 = (__pyx_v_r_ML_in1[0]);

  /* "Pythonreflectivity.pyx":411
 * 
 *     rres1=r_ML_in1[0]
 *     rres2=r_ML_ba1[0]             # <<<<<<<<<<<<<<
 *     tres_up=t_comp1_up[0]
 *     tres_do=t_comp1_do[0]
 */
  __pyx_v_rres2 = (__pyx_v_r_ML_ba1[0]);

  /* "Pythonreflectivity.pyx":412
 *     rres1=r_ML_in1[0]
 *     rres2=r_ML_ba1[0]
 *     tres_up=t_comp1_up[0]             # <<<<<<<<<<<<<<
 *     tres_do=t_comp1_do[0]
 *     if(N==0):
 */
  __pyx_v_tres_up = (__pyx_v_t_comp1_up[0]);

  /* "Pythonreflectivity.pyx":413
 *     rres2=r_ML_ba1[0]
 *     tres_up=t_comp1_up[0]
 *     tres_do=t_comp1_do[0]             # <<<<<<<<<<<<<<
 *     if(N==0):
 *         t_comp2_up[0]=1
 */
  __pyx_v_tres_do = (__pyx_v_t_comp1_do[0]);

  /* "Pythonreflectivity.pyx":414
 *     tres_up=t_comp1_up[0]
 *     tres_do=t_comp1_do[0]
 *     if(N==0):             # <<<<<<<<<<<<<<
 *         t_comp2_up[0]=1
 *         t_comp2_do[0]=1
 */
  __pyx_t_1 = (__pyx_v_N == 0.0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":415
 *     tres_do=t_comp1_do[0]
 *     if(N==0):
 *         t_comp2_up[0]=1             # <<<<<<<<<<<<<<
 *         t_comp2_do[0]=1
 *         r_ML_in2[0]=0
 */
    (__pyx_v_t_comp2_up[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":416
 *     if(N==0):
 *         t_comp2_up[0]=1
 *         t_comp2_do[0]=1             # <<<<<<<<<<<<<<
 *         r_ML_in2[0]=0
 *         r_ML_ba2[0]=0
 */
    (__pyx_v_t_comp2_do[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":417
 *         t_comp2_up[0]=1
 *         t_comp2_do[0]=1
 *         r_ML_in2[0]=0             # <<<<<<<<<<<<<<
 *         r_ML_ba2[0]=0
 *         return
 */
    (__pyx_v_r_ML_in2[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":418
 *         t_comp2_do[0]=1
 *         r_ML_in2[0]=0
 *         r_ML_ba2[0]=0             # <<<<<<<<<<<<<<
 *         return
 *     N=N-1
 */
    (__pyx_v_r_ML_ba2[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":419
 *         r_ML_in2[0]=0
 *         r_ML_ba2[0]=0
 *         return             # <<<<<<<<<<<<<<
 *     N=N-1
 * 
 */
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":414
 *     tres_up=t_comp1_up[0]
 *     tres_do=t_comp1_do[0]
 *     if(N==0):             # <<<<<<<<<<<<<<
 *         t_comp2_up[0]=1
 *         t_comp2_do[0]=1
 */
  }

  /* "Pythonreflectivity.pyx":420
 *         r_ML_ba2[0]=0
 *         return
 *     N=N-1             # <<<<<<<<<<<<<<
 * 
 *     while(N):
 */
  __pyx_v_N = (__pyx_v_N - 1.0);

  /* "Pythonreflectivity.pyx":422
 *     N=N-1
 * 
 *     while(N):             # <<<<<<<<<<<<<<
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_N != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":423
 * 
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure             # <<<<<<<<<<<<<<
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 */
    __pyx_t_1 = (__Pyx_mod_double(__pyx_v_N, 2.0) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":424
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])             # <<<<<<<<<<<<<<
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 */
      __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
      __pyx_t_3 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__pyx_v_rres1, (__pyx_v_r_ML_ba1[0])));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_3))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 424, __pyx_L1_error)
      }
      __pyx_v_MLfac = __Pyx_c_quot_double(__pyx_t_2, __pyx_t_3);

      /* "Pythonreflectivity.pyx":425
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac             # <<<<<<<<<<<<<<
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 * 
 */
      __pyx_v_rres1 = __Pyx_c_sum_double((__pyx_v_r_ML_in1[0]), __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double((__pyx_v_t_comp1_up[0]), (__pyx_v_t_comp1_do[0])), __pyx_v_rres1), __pyx_v_MLfac));

      /* "Pythonreflectivity.pyx":426
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac             # <<<<<<<<<<<<<<
 * 
 *             tres_up=t_comp1_up[0]*tres_up*MLfac
 */
      __pyx_v_rres2 = __Pyx_c_sum_double(__pyx_v_rres2, __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_tres_up, __pyx_v_tres_do), (__pyx_v_r_ML_ba1[0])), __pyx_v_MLfac));

      /* "Pythonreflectivity.pyx":428
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 * 
 *             tres_up=t_comp1_up[0]*tres_up*MLfac             # <<<<<<<<<<<<<<
 *             tres_do=t_comp1_do[0]*tres_do*MLfac
 * 
 */
      __pyx_v_tres_up = __Pyx_c_prod_double(__Pyx_c_prod_double((__pyx_v_t_comp1_up[0]), __pyx_v_tres_up), __pyx_v_MLfac);

      /* "Pythonreflectivity.pyx":429
 * 
 *             tres_up=t_comp1_up[0]*tres_up*MLfac
 *             tres_do=t_comp1_do[0]*tres_do*MLfac             # <<<<<<<<<<<<<<
 * 
 *         N=N/2
 */
      __pyx_v_tres_do = __Pyx_c_prod_double(__Pyx_c_prod_double((__pyx_v_t_comp1_do[0]), __pyx_v_tres_do), __pyx_v_MLfac);

      /* "Pythonreflectivity.pyx":423
 * 
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure             # <<<<<<<<<<<<<<
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 */
    }

    /* "Pythonreflectivity.pyx":431
 *             tres_do=t_comp1_do[0]*tres_do*MLfac
 * 
 *         N=N/2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_N = (__pyx_v_N / 2.0);

    /* "Pythonreflectivity.pyx":435
 * 
 *         #Doubling the heterostructure:
 *         MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])             # <<<<<<<<<<<<<<
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 */
    __pyx_t_3 = __pyx_t_double_complex_from_parts(1.0, 0);
    __pyx_t_2 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double((__pyx_v_r_ML_in1[0]), (__pyx_v_r_ML_ba1[0])));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_t_2))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 435, __pyx_L1_error)
    }
    __pyx_v_MLfac = __Pyx_c_quot_double(__pyx_t_3, __pyx_t_2);

    /* "Pythonreflectivity.pyx":436
 *         #Doubling the heterostructure:
 *         MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac             # <<<<<<<<<<<<<<
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 */
    (__pyx_v_r_ML_in1[0]) = __Pyx_c_sum_double((__pyx_v_r_ML_in1[0]), __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double((__pyx_v_t_comp1_up[0]), (__pyx_v_t_comp1_do[0])), (__pyx_v_r_ML_in1[0])), __pyx_v_MLfac));

    /* "Pythonreflectivity.pyx":437
 *         MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac             # <<<<<<<<<<<<<<
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 */
    (__pyx_v_r_ML_ba1[0]) = __Pyx_c_sum_double((__pyx_v_r_ML_ba1[0]), __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double((__pyx_v_t_comp1_up[0]), (__pyx_v_t_comp1_do[0])), (__pyx_v_r_ML_ba1[0])), __pyx_v_MLfac));

    /* "Pythonreflectivity.pyx":438
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac             # <<<<<<<<<<<<<<
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 */
    __pyx_t_2 = __pyx_f_18Pythonreflectivity_cquadr((__pyx_v_t_comp1_up[0])); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 438, __pyx_L1_error)
    (__pyx_v_t_comp1_up[0]) = __Pyx_c_prod_double(__pyx_t_2, __pyx_v_MLfac);

    /* "Pythonreflectivity.pyx":439
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac             # <<<<<<<<<<<<<<
 * 
 *     t_comp2_up[0]=tres_up
 */
    __pyx_t_2 = __pyx_f_18Pythonreflectivity_cquadr((__pyx_v_t_comp1_do[0])); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 439, __pyx_L1_error)
    (__pyx_v_t_comp1_do[0]) = __Pyx_c_prod_double(__pyx_t_2, __pyx_v_MLfac);
  }

  /* "Pythonreflectivity.pyx":441
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 *     t_comp2_up[0]=tres_up             # <<<<<<<<<<<<<<
 *     t_comp2_do[0]=tres_do
 *     r_ML_in2[0]=rres1
 */
  (__pyx_v_t_comp2_up[0]) = __pyx_v_tres_up;

  /* "Pythonreflectivity.pyx":442
 * 
 *     t_comp2_up[0]=tres_up
 *     t_comp2_do[0]=tres_do             # <<<<<<<<<<<<<<
 *     r_ML_in2[0]=rres1
 *     r_ML_ba2[0]=rres2
 */
  (__pyx_v_t_comp2_do[0]) = __pyx_v_tres_do;

  /* "Pythonreflectivity.pyx":443
 *     t_comp2_up[0]=tres_up
 *     t_comp2_do[0]=tres_do
 *     r_ML_in2[0]=rres1             # <<<<<<<<<<<<<<
 *     r_ML_ba2[0]=rres2
 * 
 */
  (__pyx_v_r_ML_in2[0]) = __pyx_v_rres1;

  /* "Pythonreflectivity.pyx":444
 *     t_comp2_do[0]=tres_do
 *     r_ML_in2[0]=rres1
 *     r_ML_ba2[0]=rres2             # <<<<<<<<<<<<<<
 * 
 * 
 */
  (__pyx_v_r_ML_ba2[0]) = __pyx_v_rres2;

  /* "Pythonreflectivity.pyx":406
 * 
 * 
 * cdef void Calculate_Multilayer(double complex *t_comp1_up, double complex *t_comp2_up, double complex *t_comp1_do, double complex *t_comp2_do, double complex *r_ML_in1, double complex *r_ML_in2, double complex *r_ML_ba1, double complex *r_ML_ba2, double N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex rres1, rres2, tres_up, tres_do, MLfac
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Calculate_Multilayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":448
 * 
 * 
 * cdef double complex ipow(double complex base, double exp):             # <<<<<<<<<<<<<<
 *     cdef double complex result = 1.
 *     while (exp):
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_ipow(__pyx_t_double_complex __pyx_v_base, double __pyx_v_exp) {
  __pyx_t_double_complex __pyx_v_result;
  __pyx_t_double_complex __pyx_r;
  int __pyx_t_1;

  /* "Pythonreflectivity.pyx":449
 * 
 * cdef double complex ipow(double complex base, double exp):
 *     cdef double complex result = 1.             # <<<<<<<<<<<<<<
 *     while (exp):
 *         if (exp%2): #If exp is Uneven
 */
  __pyx_v_result = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":450
 * cdef double complex ipow(double complex base, double exp):
 *     cdef double complex result = 1.
 *     while (exp):             # <<<<<<<<<<<<<<
 *         if (exp%2): #If exp is Uneven
 *             result *= base
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_exp != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":451
 *     cdef double complex result = 1.
 *     while (exp):
 *         if (exp%2): #If exp is Uneven             # <<<<<<<<<<<<<<
 *             result *= base
 *         exp=exp/2 #exp halbieren
 */
    __pyx_t_1 = (__Pyx_mod_double(__pyx_v_exp, 2.0) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":452
 *     while (exp):
 *         if (exp%2): #If exp is Uneven
 *             result *= base             # <<<<<<<<<<<<<<
 *         exp=exp/2 #exp halbieren
 *         base=base*base
 */
      __pyx_v_result = __Pyx_c_prod_double(__pyx_v_result, __pyx_v_base);

      /* "Pythonreflectivity.pyx":451
 *     cdef double complex result = 1.
 *     while (exp):
 *         if (exp%2): #If exp is Uneven             # <<<<<<<<<<<<<<
 *             result *= base
 *         exp=exp/2 #exp halbieren
 */
    }

    /* "Pythonreflectivity.pyx":453
 *         if (exp%2): #If exp is Uneven
 *             result *= base
 *         exp=exp/2 #exp halbieren             # <<<<<<<<<<<<<<
 *         base=base*base
 *     return result
 */
    __pyx_v_exp = (__pyx_v_exp / 2.0);

    /* "Pythonreflectivity.pyx":454
 *             result *= base
 *         exp=exp/2 #exp halbieren
 *         base=base*base             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_v_base = __Pyx_c_prod_double(__pyx_v_base, __pyx_v_base);
  }

  /* "Pythonreflectivity.pyx":455
 *         exp=exp/2 #exp halbieren
 *         base=base*base
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":448
 * 
 * 
 * cdef double complex ipow(double complex base, double exp):             # <<<<<<<<<<<<<<
 *     cdef double complex result = 1.
 *     while (exp):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":459
 * 
 * 
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_r_ML_1;
  __pyx_t_double_complex __pyx_v_r_ML_2;
  __pyx_t_double_complex __pyx_v_ptot;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_v_rough;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Sigma", 1);

  /* "Pythonreflectivity.pyx":460
 * 
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th > 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":461
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 461, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 461, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":460
 * 
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":464
 * 
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 464, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":465
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":466
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th))); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 466, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":469
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":470
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":471
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":472
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 * 
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":473
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":479
 *     cdef int i,j
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":488
 *     cdef int Lower, Upper
 *     cdef double complex rough, groundrough
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 488, __pyx_L1_error)
  __pyx_v_roughfak = (-2. * __pyx_t_3);

  /* "Pythonreflectivity.pyx":492
 * 
 * 
 *     vzlower=CalculateVZsigma(vyvy, LR[ MLCOMP[0][0] ].ex )             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 492, __pyx_L1_error)
  __pyx_v_vzlower = __pyx_t_8;

  /* "Pythonreflectivity.pyx":498
 *   #  print NLAYERS
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *     else:
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":499
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZsigma(vyvy,   LR[ MLCOMP[1][0] ].ex  )
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":498
 *   #  print NLAYERS
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *     else:
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":501
 *         vzupper=sintheta
 *     else:
 *         vzupper=CalculateVZsigma(vyvy,   LR[ MLCOMP[1][0] ].ex  )             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 501, __pyx_L1_error)
    __pyx_v_vzupper = __pyx_t_8;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":504
 * 
 * 
 *     rough=exp(vzlower*vzupper*quadr(   LR[ MLCOMP[0][0] ].Roughness )*roughfak)             # <<<<<<<<<<<<<<
 *   #  print "all:", MLCOMP[0][0], MLCOMP[1][0], LR[ MLCOMP[0][0] ].ex, LR[ MLCOMP[1][0] ].ex, vzupper, vzlower
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L1_error)
  __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

  /* "Pythonreflectivity.pyx":506
 *     rough=exp(vzlower*vzupper*quadr(   LR[ MLCOMP[0][0] ].Roughness )*roughfak)
 *   #  print "all:", MLCOMP[0][0], MLCOMP[1][0], LR[ MLCOMP[0][0] ].ex, LR[ MLCOMP[1][0] ].ex, vzupper, vzlower
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 *   #  print rtot
 *     i=1
 */
  __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
  __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 506, __pyx_L1_error)
  }
  __pyx_v_rtot = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

  /* "Pythonreflectivity.pyx":508
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *   #  print rtot
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":509
 *   #  print rtot
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":511
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":512
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":513
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":514
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )
 *             else:
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":515
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )             # <<<<<<<<<<<<<<
 *             else:
 *                 vzupper=sintheta
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 515, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":513
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":517
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][0]
 * 
 */
      /*else*/ {
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":518
 *             else:
 *                 vzupper=sintheta
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 * 
 *             rough=exp(roughfak*vzlower*vzupper*quadr(   LR[ Lower ].Roughness  ))
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":520
 *             Lower=MLCOMP[i][0]
 * 
 *             rough=exp(roughfak*vzlower*vzupper*quadr(   LR[ Lower ].Roughness  ))             # <<<<<<<<<<<<<<
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L1_error)
      __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

      /* "Pythonreflectivity.pyx":522
 *             rough=exp(roughfak*vzlower*vzupper*quadr(   LR[ Lower ].Roughness  ))
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 *             pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
      __pyx_t_9 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 522, __pyx_L1_error)
      }
      __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":524
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 *             pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *           #  print pquad, rprime
 *            # No Multiple scattering:
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":527
 *           #  print pquad, rprime
 *            # No Multiple scattering:
 *             rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

      /* "Pythonreflectivity.pyx":511
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
      goto __pyx_L7;
    }

    /* "Pythonreflectivity.pyx":531
 *         else:
 * 
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))             # <<<<<<<<<<<<<<
 * 
 *             vzlower=vzupper
 */
    /*else*/ {
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 531, __pyx_L1_error)
      __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

      /* "Pythonreflectivity.pyx":533
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZsigma(vyvy, LR[ MLCOMP[i][1] ].ex)
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":534
 * 
 *             vzlower=vzupper
 *             vzupper=CalculateVZsigma(vyvy, LR[ MLCOMP[i][1] ].ex)             # <<<<<<<<<<<<<<
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 534, __pyx_L1_error)
      __pyx_v_vzupper = __pyx_t_8;

      /* "Pythonreflectivity.pyx":535
 *             vzlower=vzupper
 *             vzupper=CalculateVZsigma(vyvy, LR[ MLCOMP[i][1] ].ex)
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 535, __pyx_L1_error)
      }
      __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":538
 * 
 * 
 *             r_ML_1=rprime             # <<<<<<<<<<<<<<
 *            # print "2"
 * 
 */
      __pyx_v_r_ML_1 = __pyx_v_rprime;

      /* "Pythonreflectivity.pyx":541
 *            # print "2"
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             p=1.
 * 
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":542
 * 
 *             j=1
 *             p=1.             # <<<<<<<<<<<<<<
 * 
 *            # print MLLENGTH[i]
 */
      __pyx_v_p = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":545
 * 
 *            # print MLLENGTH[i]
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *               #  print "3 ", j
 *                 vzlower=vzupper
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":547
 *             while j<MLLENGTH[i]:
 *               #  print "3 ", j
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 p*=pquad
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":548
 *               #  print "3 ", j
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 p*=pquad
 *              #   print pquad, p
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":549
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 p*=pquad             # <<<<<<<<<<<<<<
 *              #   print pquad, p
 *                 if(j==(MLLENGTH[i]-1)):
 */
        __pyx_v_p = __Pyx_c_prod_double(__pyx_v_p, __pyx_v_pquad);

        /* "Pythonreflectivity.pyx":551
 *                 p*=pquad
 *              #   print pquad, p
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][0]
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_j == ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":552
 *              #   print pquad, p
 *                 if(j==(MLLENGTH[i]-1)):
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

          /* "Pythonreflectivity.pyx":551
 *                 p*=pquad
 *              #   print pquad, p
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][0]
 *                 else:
 */
          goto __pyx_L11;
        }

        /* "Pythonreflectivity.pyx":554
 *                     Upper=MLCOMP[i][0]
 *                 else:
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 * 
 */
        /*else*/ {
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":555
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )             # <<<<<<<<<<<<<<
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 555, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":557
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))             # <<<<<<<<<<<<<<
 * 
 *                 rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 557, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":559
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))
 * 
 *                 rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_1=rprime+r_ML_1*pquad
 */
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 559, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":561
 *                 rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 *                 r_ML_1=rprime+r_ML_1*pquad             # <<<<<<<<<<<<<<
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 */
        __pyx_v_r_ML_1 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_r_ML_1, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":564
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 *                 j+=1             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":565
 *              #   print "new rml", r_ML_1
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             p*=pquad
 *           #  print pquad, p
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":566
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad             # <<<<<<<<<<<<<<
 *           #  print pquad, p
 *           #  print "6 "
 */
      __pyx_v_p = __Pyx_c_prod_double(__pyx_v_p, __pyx_v_pquad);

      /* "Pythonreflectivity.pyx":570
 *           #  print "6 "
 * 
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
      __pyx_t_1 = ((__pyx_v_MLREP[__pyx_v_i]) <= 1);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":571
 * 
 *             if(MLREP[i]<=1):
 *                 ptot=1             # <<<<<<<<<<<<<<
 *                 r_ML_2=0
 *             else:
 */
        __pyx_v_ptot = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":572
 *             if(MLREP[i]<=1):
 *                 ptot=1
 *                 r_ML_2=0             # <<<<<<<<<<<<<<
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 */
        __pyx_v_r_ML_2 = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":570
 *           #  print "6 "
 * 
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
        goto __pyx_L12;
      }

      /* "Pythonreflectivity.pyx":574
 *                 r_ML_2=0
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 */
      /*else*/ {
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(__pyx_v_p, ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 574, __pyx_L1_error)
        __pyx_v_ptot = __pyx_t_8;

        /* "Pythonreflectivity.pyx":575
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)             # <<<<<<<<<<<<<<
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot
 */
        __pyx_t_8 = __Pyx_c_prod_double(__pyx_v_r_ML_1, __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_ptot));
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_p);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 575, __pyx_L1_error)
        }
        __pyx_v_r_ML_2 = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":577
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot             # <<<<<<<<<<<<<<
 * 
 *             j=0
 */
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r_ML_2, __Pyx_c_prod_double(__pyx_v_ptot, __pyx_v_rtot));

      /* "Pythonreflectivity.pyx":579
 *             rtot=r_ML_2+ptot*rtot
 * 
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":580
 * 
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":581
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":582
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":583
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":584
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 584, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":585
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":586
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":587
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1
 */
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 587, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":588
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":589
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":591
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":592
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":593
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":596
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":597
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":599
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 599, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":600
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 600, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":601
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 *             else:
 */
        __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 601, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":602
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":593
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
        goto __pyx_L15;
      }

      /* "Pythonreflectivity.pyx":605
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 */
      /*else*/ {
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":606
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 606, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":607
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 *         i=i+1
 */
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 607, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":608
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 *         i=i+1
 *     return rtot
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
      }
      __pyx_L15:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":609
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=rprime+rtot*pquad
 *         i=i+1             # <<<<<<<<<<<<<<
 *     return rtot
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":610
 *                 rtot=rprime+rtot*pquad
 *         i=i+1
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":459
 * 
 * 
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":613
 * 
 * 
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_r_ML_1;
  __pyx_t_double_complex __pyx_v_r_ML_2;
  __pyx_t_double_complex __pyx_v_ptot;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_v_rough;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi", 1);

  /* "Pythonreflectivity.pyx":614
 * 
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th > 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":615
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 615, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":614
 * 
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":617
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 617, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":618
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":619
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th))); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 619, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":621
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":622
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":623
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":624
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":625
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 * 
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":628
 *     cdef int i,j
 * 
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":637
 *     cdef int Lower, Upper
 *     cdef double complex rough, groundrough
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 * 
 *     #rough=1.
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 637, __pyx_L1_error)
  __pyx_v_roughfak = (-2. * __pyx_t_3);

  /* "Pythonreflectivity.pyx":641
 *     #rough=1.
 * 
 *     vzlower=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 641, __pyx_L1_error)
  __pyx_v_vzlower = __pyx_t_8;

  /* "Pythonreflectivity.pyx":644
 * 
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":645
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":646
 *     if(NLAYERS==1):
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 646, __pyx_L1_error)
    __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":647
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
    __pyx_t_8 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 647, __pyx_L1_error)
    }
    __pyx_v_rtot = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

    /* "Pythonreflectivity.pyx":644
 * 
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":649
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness )*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 */
  /*else*/ {
    __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 649, __pyx_L1_error)
    __pyx_v_vzupper = __pyx_t_9;

    /* "Pythonreflectivity.pyx":650
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness )*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 650, __pyx_L1_error)
    __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":651
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness )*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 651, __pyx_L1_error)
    }
    __pyx_v_rtot = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":655
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":656
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":658
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":659
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":660
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":661
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 Lower=MLCOMP[i][0]
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":662
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 662, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":663
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":664
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 664, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":665
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *             else:
 *                 Lower=MLCOMP[i][0]
 */
        __pyx_t_8 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 665, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":660
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":667
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*sintheta*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 */
      /*else*/ {
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":668
 *             else:
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*sintheta*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 * 
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 668, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0)), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":669
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*sintheta*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 669, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":674
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *            # No Multiple scattering:
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":677
 * 
 *            # No Multiple scattering:
 *             rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

      /* "Pythonreflectivity.pyx":658
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
      goto __pyx_L7;
    }

    /* "Pythonreflectivity.pyx":680
 * 
 *         else:
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))             # <<<<<<<<<<<<<<
 * 
 *             vzlower=vzupper
 */
    /*else*/ {
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 680, __pyx_L1_error)
      __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

      /* "Pythonreflectivity.pyx":682
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi(vyvy, LR[ MLCOMP[i][1] ].ey, LR[ MLCOMP[i][1] ].ez)
 *            # rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":683
 * 
 *             vzlower=vzupper
 *             vzupper=CalculateVZpi(vyvy, LR[ MLCOMP[i][1] ].ey, LR[ MLCOMP[i][1] ].ez)             # <<<<<<<<<<<<<<
 *            # rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *             r_ML_1=(vzupper*LR[MLCOMP[i][0]].ey-vzlower*LR[MLCOMP[i][1]].ey)/(vzupper*LR[MLCOMP[i][0]].ey+vzlower*LR[MLCOMP[i][1]].ey)*rough
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L1_error)
      __pyx_v_vzupper = __pyx_t_8;

      /* "Pythonreflectivity.pyx":685
 *             vzupper=CalculateVZpi(vyvy, LR[ MLCOMP[i][1] ].ey, LR[ MLCOMP[i][1] ].ez)
 *            # rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *             r_ML_1=(vzupper*LR[MLCOMP[i][0]].ey-vzlower*LR[MLCOMP[i][1]].ey)/(vzupper*LR[MLCOMP[i][0]].ey+vzlower*LR[MLCOMP[i][1]].ey)*rough             # <<<<<<<<<<<<<<
 * 
 *            # print "2"
 */
      __pyx_t_8 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey));
      __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 685, __pyx_L1_error)
      }
      __pyx_v_r_ML_1 = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":689
 *            # print "2"
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             p=1.
 * 
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":690
 * 
 *             j=1
 *             p=1.             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_p = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":693
 * 
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *               #  print "3 ", j
 *                 vzlower=vzupper
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":695
 *             while j<MLLENGTH[i]:
 *               #  print "3 ", j
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 * 
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":696
 *               #  print "3 ", j
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 p*=pquad
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":698
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 * 
 *                 p*=pquad             # <<<<<<<<<<<<<<
 * 
 *                 if(j==(MLLENGTH[i]-1)):
 */
        __pyx_v_p = __Pyx_c_prod_double(__pyx_v_p, __pyx_v_pquad);

        /* "Pythonreflectivity.pyx":700
 *                 p*=pquad
 * 
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][0]
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_j == ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":701
 * 
 *                 if(j==(MLLENGTH[i]-1)):
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

          /* "Pythonreflectivity.pyx":700
 *                 p*=pquad
 * 
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][0]
 *                 else:
 */
          goto __pyx_L11;
        }

        /* "Pythonreflectivity.pyx":703
 *                     Upper=MLCOMP[i][0]
 *                 else:
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 * 
 */
        /*else*/ {
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":704
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)             # <<<<<<<<<<<<<<
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 704, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":706
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))             # <<<<<<<<<<<<<<
 * 
 *               #  rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 706, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":709
 * 
 *               #  rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *                 rprime=(vzupper*LR[MLCOMP[i][j]].ey-vzlower*LR[Upper].ey)/(vzupper*LR[MLCOMP[i][j]].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 r_ML_1=rprime+r_ML_1*pquad
 *               #  print "5 ", j
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 709, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":710
 *               #  rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *                 rprime=(vzupper*LR[MLCOMP[i][j]].ey-vzlower*LR[Upper].ey)/(vzupper*LR[MLCOMP[i][j]].ey+vzlower*LR[Upper].ey)*rough
 *                 r_ML_1=rprime+r_ML_1*pquad             # <<<<<<<<<<<<<<
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 */
        __pyx_v_r_ML_1 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_r_ML_1, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":713
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 *                 j+=1             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":714
 *              #   print "new rml", r_ML_1
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             p*=pquad
 *           #  print "6 "
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":715
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad             # <<<<<<<<<<<<<<
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 */
      __pyx_v_p = __Pyx_c_prod_double(__pyx_v_p, __pyx_v_pquad);

      /* "Pythonreflectivity.pyx":717
 *             p*=pquad
 *           #  print "6 "
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
      __pyx_t_1 = ((__pyx_v_MLREP[__pyx_v_i]) <= 1);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":718
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 *                 ptot=1             # <<<<<<<<<<<<<<
 *                 r_ML_2=0
 *             else:
 */
        __pyx_v_ptot = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":719
 *             if(MLREP[i]<=1):
 *                 ptot=1
 *                 r_ML_2=0             # <<<<<<<<<<<<<<
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 */
        __pyx_v_r_ML_2 = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":717
 *             p*=pquad
 *           #  print "6 "
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
        goto __pyx_L12;
      }

      /* "Pythonreflectivity.pyx":721
 *                 r_ML_2=0
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 */
      /*else*/ {
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(__pyx_v_p, ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 721, __pyx_L1_error)
        __pyx_v_ptot = __pyx_t_8;

        /* "Pythonreflectivity.pyx":722
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)             # <<<<<<<<<<<<<<
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot
 */
        __pyx_t_8 = __Pyx_c_prod_double(__pyx_v_r_ML_1, __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_ptot));
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_p);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 722, __pyx_L1_error)
        }
        __pyx_v_r_ML_2 = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":724
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot             # <<<<<<<<<<<<<<
 * 
 *             j=0
 */
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r_ML_2, __Pyx_c_prod_double(__pyx_v_ptot, __pyx_v_rtot));

      /* "Pythonreflectivity.pyx":726
 *             rtot=r_ML_2+ptot*rtot
 * 
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":727
 * 
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":728
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":729
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":730
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":731
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 731, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":732
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 732, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":733
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":734
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 734, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":735
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":736
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":738
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":739
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":740
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":743
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":744
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":746
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 746, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":747
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 747, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":748
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 *             else:
 */
        __pyx_t_8 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 748, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":749
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":740
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
        goto __pyx_L15;
      }

      /* "Pythonreflectivity.pyx":752
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 */
      /*else*/ {
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":753
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 753, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":754
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 * 
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 754, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":755
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 * 
 *         i=i+1
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
      }
      __pyx_L15:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":757
 *                 rtot=rprime+rtot*pquad
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 *     return rtot
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":758
 * 
 *         i=i+1
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":613
 * 
 * 
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":760
 *     return rtot
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_v_rough;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_MSfac;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_t_comp1_down;
  __pyx_t_double_complex __pyx_v_t_comp1_up;
  __pyx_t_double_complex __pyx_v_t_comp2_down;
  __pyx_t_double_complex __pyx_v_t_comp2_up;
  __pyx_t_double_complex __pyx_v_r_ML_in_1;
  __pyx_t_double_complex __pyx_v_r_ML_in_2;
  __pyx_t_double_complex __pyx_v_r_ML_back_1;
  __pyx_t_double_complex __pyx_v_r_ML_back_2;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Sigma_MS", 1);

  /* "Pythonreflectivity.pyx":761
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 */
  __pyx_t_1 = ((__pyx_v_th < 0.0) | (__pyx_v_th > 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":762
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")             # <<<<<<<<<<<<<<
 *     if(th==0):
 *         return 1.0
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 762, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 762, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":761
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 */
  }

  /* "Pythonreflectivity.pyx":763
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):             # <<<<<<<<<<<<<<
 *         return 1.0
 *     cdef double k0=two_times_pi/wavelength
 */
  __pyx_t_1 = (__pyx_v_th == 0.0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":764
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 *         return 1.0             # <<<<<<<<<<<<<<
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 */
    __pyx_r = __pyx_t_double_complex_from_parts(1.0, 0);
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":763
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):             # <<<<<<<<<<<<<<
 *         return 1.0
 *     cdef double k0=two_times_pi/wavelength
 */
  }

  /* "Pythonreflectivity.pyx":765
 *     if(th==0):
 *         return 1.0
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 765, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":766
 *         return 1.0
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":767
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th))); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 767, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":769
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":770
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":771
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":772
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":773
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":775
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 775, __pyx_L1_error)
  __pyx_v_roughfak = (-2. * __pyx_t_3);

  /* "Pythonreflectivity.pyx":777
 *     cdef double roughfak=-2.*quadr(k0)
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":790
 *     cdef int Lower, Upper
 * 
 *     vzlower=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 * 
 *     if(NLAYERS==1):
 */
  __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 790, __pyx_L1_error)
  __pyx_v_vzlower = __pyx_t_8;

  /* "Pythonreflectivity.pyx":792
 *     vzlower=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *     else:
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":793
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":792
 *     vzlower=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *     else:
 */
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":795
 *         vzupper=sintheta
 *     else:
 *         vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 * 
 *     rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness))
 */
  /*else*/ {
    __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 795, __pyx_L1_error)
    __pyx_v_vzupper = __pyx_t_8;
  }
  __pyx_L5:;

  /* "Pythonreflectivity.pyx":797
 *         vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 * 
 *     rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 797, __pyx_L1_error)
  __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

  /* "Pythonreflectivity.pyx":800
 * 
 * 
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 *     i=1
 */
  __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
  __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 800, __pyx_L1_error)
  }
  __pyx_v_rtot = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

  /* "Pythonreflectivity.pyx":802
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":803
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":804
 *     i=1
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":805
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":806
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":807
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *             else:
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":808
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)             # <<<<<<<<<<<<<<
 *             else:
 *                 vzupper=sintheta
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 808, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":806
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        goto __pyx_L9;
      }

      /* "Pythonreflectivity.pyx":810
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][0]
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
      /*else*/ {
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);
      }
      __pyx_L9:;

      /* "Pythonreflectivity.pyx":811
 *             else:
 *                 vzupper=sintheta
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 * 
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":812
 *                 vzupper=sintheta
 *             Lower=MLCOMP[i][0]
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 812, __pyx_L1_error)
      __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

      /* "Pythonreflectivity.pyx":814
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *            # if(MultipleScattering):
 */
      __pyx_t_9 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 814, __pyx_L1_error)
      }
      __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":815
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":817
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *            # else:
 *             #    rtot=rprime+rtot*pquad
 */
      __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
      __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 817, __pyx_L1_error)
      }
      __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

      /* "Pythonreflectivity.pyx":804
 *     i=1
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
      goto __pyx_L8;
    }

    /* "Pythonreflectivity.pyx":822
 * 
 *         else:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[i][1]].ex)
 * 
 */
    /*else*/ {
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":823
 *         else:
 *             vzlower=vzupper
 *             vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[i][1]].ex)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 823, __pyx_L1_error)
      __pyx_v_vzupper = __pyx_t_9;

      /* "Pythonreflectivity.pyx":826
 * 
 * 
 *             r_ML_in_1=(vzupper-vzlower)/(vzupper+vzlower)             # <<<<<<<<<<<<<<
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough
 */
      __pyx_t_9 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 826, __pyx_L1_error)
      }
      __pyx_v_r_ML_in_1 = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

      /* "Pythonreflectivity.pyx":827
 * 
 *             r_ML_in_1=(vzupper-vzlower)/(vzupper+vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *             r_ML_in_1*=rough
 * 
 */
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 827, __pyx_L1_error)
      __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

      /* "Pythonreflectivity.pyx":828
 *             r_ML_in_1=(vzupper-vzlower)/(vzupper+vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough             # <<<<<<<<<<<<<<
 * 
 *             t_comp1_up=1-r_ML_in_1
 */
      __pyx_v_r_ML_in_1 = __Pyx_c_prod_double(__pyx_v_r_ML_in_1, __pyx_v_rough);

      /* "Pythonreflectivity.pyx":830
 *             r_ML_in_1*=rough
 * 
 *             t_comp1_up=1-r_ML_in_1             # <<<<<<<<<<<<<<
 * 
 *             j=1
 */
      __pyx_v_t_comp1_up = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_in_1);

      /* "Pythonreflectivity.pyx":832
 *             t_comp1_up=1-r_ML_in_1
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":833
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":834
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
        __pyx_t_1 = ((__pyx_v_j + 1) < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":835
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][0]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

          /* "Pythonreflectivity.pyx":834
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
          goto __pyx_L12;
        }

        /* "Pythonreflectivity.pyx":837
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 */
        /*else*/ {
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
        }
        __pyx_L12:;

        /* "Pythonreflectivity.pyx":838
 *                 else:
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":839
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":840
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 840, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":841
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)
 * 
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 841, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":842
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_t_8 = __Pyx_c_prod_double(__pyx_v_rough, __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 842, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":844
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 */
        __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":845
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 845, __pyx_L1_error)
        __pyx_v_pquad = __pyx_t_9;

        /* "Pythonreflectivity.pyx":846
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 */
        __pyx_t_9 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_r_ML_in_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 846, __pyx_L1_error)
        }
        __pyx_v_MSfac = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":847
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 */
        __pyx_v_t = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":848
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 */
        __pyx_v_t_comp1_up = __Pyx_c_prod_double(__pyx_v_t_comp1_up, __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":849
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_v_r_ML_in_1 = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_r_ML_in_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":850
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":851
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             t_comp1_up*=p
 * 
 */
      __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":852
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p             # <<<<<<<<<<<<<<
 * 
 *             r_ML_back_1=-rprime
 */
      __pyx_v_t_comp1_up = __Pyx_c_prod_double(__pyx_v_t_comp1_up, __pyx_v_p);

      /* "Pythonreflectivity.pyx":854
 *             t_comp1_up*=p
 * 
 *             r_ML_back_1=-rprime             # <<<<<<<<<<<<<<
 *             t_comp1_down=1-r_ML_back_1
 *             j=MLLENGTH[i]-2
 */
      __pyx_v_r_ML_back_1 = __Pyx_c_neg_double(__pyx_v_rprime);

      /* "Pythonreflectivity.pyx":855
 * 
 *             r_ML_back_1=-rprime
 *             t_comp1_down=1-r_ML_back_1             # <<<<<<<<<<<<<<
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 */
      __pyx_v_t_comp1_down = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_back_1);

      /* "Pythonreflectivity.pyx":856
 *             r_ML_back_1=-rprime
 *             t_comp1_down=1-r_ML_back_1
 *             j=MLLENGTH[i]-2             # <<<<<<<<<<<<<<
 *             while j>=0:
 *                 vzupper=vzlower
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 2);

      /* "Pythonreflectivity.pyx":857
 *             t_comp1_down=1-r_ML_back_1
 *             j=MLLENGTH[i]-2
 *             while j>=0:             # <<<<<<<<<<<<<<
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j >= 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":858
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 *                 vzupper=vzlower             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzupper = __pyx_v_vzlower;

        /* "Pythonreflectivity.pyx":859
 *             while j>=0:
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":860
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":861
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 861, __pyx_L1_error)
        __pyx_v_vzlower = __pyx_t_8;

        /* "Pythonreflectivity.pyx":862
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 * 
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 862, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":864
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_t_8 = __Pyx_c_prod_double(__pyx_v_rough, __Pyx_c_diff_double(__pyx_v_vzlower, __pyx_v_vzupper));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vzupper, __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 864, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":865
 * 
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)
 */
        __pyx_v_t = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":866
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

        /* "Pythonreflectivity.pyx":867
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 867, __pyx_L1_error)
        __pyx_v_pquad = __pyx_t_9;

        /* "Pythonreflectivity.pyx":869
 *                 pquad=cquadr(p)
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)             # <<<<<<<<<<<<<<
 *                 t_comp1_down*=p*t*MSfac
 * 
 */
        __pyx_t_9 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_r_ML_back_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 869, __pyx_L1_error)
        }
        __pyx_v_MSfac = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":870
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 *                 t_comp1_down*=p*t*MSfac             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 */
        __pyx_v_t_comp1_down = __Pyx_c_prod_double(__pyx_v_t_comp1_down, __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":872
 *                 t_comp1_down*=p*t*MSfac
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_v_r_ML_back_1 = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_r_ML_back_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":873
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":874
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)
 */
      __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":875
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p             # <<<<<<<<<<<<<<
 *             r_ML_back_1*=cquadr(p)
 * 
 */
      __pyx_v_t_comp1_down = __Pyx_c_prod_double(__pyx_v_t_comp1_down, __pyx_v_p);

      /* "Pythonreflectivity.pyx":876
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 876, __pyx_L1_error)
      __pyx_v_r_ML_back_1 = __Pyx_c_prod_double(__pyx_v_r_ML_back_1, __pyx_t_8);

      /* "Pythonreflectivity.pyx":879
 * 
 * 
 *             Calculate_Multilayer(&t_comp1_up, &t_comp2_up,&t_comp1_down, &t_comp2_down, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer((&__pyx_v_t_comp1_up), (&__pyx_v_t_comp2_up), (&__pyx_v_t_comp1_down), (&__pyx_v_t_comp2_down), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 879, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":883
 * 
 * 
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 */
      __pyx_t_8 = __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t_comp2_up, __pyx_v_t_comp2_down), __pyx_v_rtot);
      __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__pyx_v_r_ML_back_2, __pyx_v_rtot));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 883, __pyx_L1_error)
      }
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r_ML_in_2, __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9));

      /* "Pythonreflectivity.pyx":885
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)             # <<<<<<<<<<<<<<
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 */
      __pyx_v_vzupper = __pyx_v_vzlower;

      /* "Pythonreflectivity.pyx":886
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":887
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":888
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":889
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":890
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":891
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 891, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":892
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 892, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":893
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":894
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1
 */
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 894, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":895
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 895, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":896
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":898
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":899
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":900
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":903
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":904
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":906
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 906, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":907
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 907, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":908
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *             else:
 */
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 908, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":909
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 909, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":900
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
        goto __pyx_L17;
      }

      /* "Pythonreflectivity.pyx":912
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 */
      /*else*/ {
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":913
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 913, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":914
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 * 
 */
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 914, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":915
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 915, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);
      }
      __pyx_L17:;
    }
    __pyx_L8:;

    /* "Pythonreflectivity.pyx":918
 * 
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":921
 * 
 * 
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":760
 *     return rtot
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Sigma_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":924
 * 
 * 
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_v_rough;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_MSfac;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_t_comp1_down;
  __pyx_t_double_complex __pyx_v_t_comp1_up;
  __pyx_t_double_complex __pyx_v_t_comp2_down;
  __pyx_t_double_complex __pyx_v_t_comp2_up;
  __pyx_t_double_complex __pyx_v_r_ML_in_1;
  __pyx_t_double_complex __pyx_v_r_ML_in_2;
  __pyx_t_double_complex __pyx_v_r_ML_back_1;
  __pyx_t_double_complex __pyx_v_r_ML_back_2;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi_MS", 1);

  /* "Pythonreflectivity.pyx":925
 * 
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 */
  __pyx_t_1 = ((__pyx_v_th < 0.0) | (__pyx_v_th > 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":926
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")             # <<<<<<<<<<<<<<
 *     if(th==0):
 *         return 1.0
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 926, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":925
 * 
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 */
  }

  /* "Pythonreflectivity.pyx":927
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):             # <<<<<<<<<<<<<<
 *         return 1.0
 * 
 */
  __pyx_t_1 = (__pyx_v_th == 0.0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":928
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 *         return 1.0             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_r = __pyx_t_double_complex_from_parts(1.0, 0);
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":927
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):             # <<<<<<<<<<<<<<
 *         return 1.0
 * 
 */
  }

  /* "Pythonreflectivity.pyx":930
 *         return 1.0
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 930, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":931
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":932
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th))); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 932, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":935
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":936
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":937
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":938
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":939
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":941
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 941, __pyx_L1_error)
  __pyx_v_roughfak = (-2. * __pyx_t_3);

  /* "Pythonreflectivity.pyx":943
 *     cdef double roughfak=-2.*quadr(k0)
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":956
 *     cdef int Lower, Upper
 * 
 *     vzlower=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 * 
 *     if(NLAYERS==1):
 */
  __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 956, __pyx_L1_error)
  __pyx_v_vzlower = __pyx_t_8;

  /* "Pythonreflectivity.pyx":958
 *     vzlower=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":959
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":960
 *     if(NLAYERS==1):
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 960, __pyx_L1_error)
    __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":961
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
    __pyx_t_8 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 961, __pyx_L1_error)
    }
    __pyx_v_rtot = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

    /* "Pythonreflectivity.pyx":958
 *     vzlower=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":963
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 */
  /*else*/ {
    __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 963, __pyx_L1_error)
    __pyx_v_vzupper = __pyx_t_9;

    /* "Pythonreflectivity.pyx":964
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L1_error)
    __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":965
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 965, __pyx_L1_error)
    }
    __pyx_v_rtot = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);
  }
  __pyx_L5:;

  /* "Pythonreflectivity.pyx":969
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":970
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":971
 *     i=1
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":972
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":973
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 Lower=MLCOMP[i][0]
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":974
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":975
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":976
 *                 Upper=MLCOMP[i+1][0]
 *                 Lower=MLCOMP[i][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 976, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":977
 *                 Lower=MLCOMP[i][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 977, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":978
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *             else:
 *                 vzupper=sintheta
 */
        __pyx_t_8 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 978, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":973
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 Lower=MLCOMP[i][0]
 */
        goto __pyx_L9;
      }

      /* "Pythonreflectivity.pyx":980
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
      /*else*/ {
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":981
 *             else:
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower)/(vzupper*LR[Lower].ey+vzlower)*rough
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":982
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower)/(vzupper*LR[Lower].ey+vzlower)*rough
 * 
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":983
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower)/(vzupper*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 983, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);
      }
      __pyx_L9:;

      /* "Pythonreflectivity.pyx":988
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":990
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *            # else:
 *             #    rtot=rprime+rtot*pquad
 */
      __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
      __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 990, __pyx_L1_error)
      }
      __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

      /* "Pythonreflectivity.pyx":971
 *     i=1
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
      goto __pyx_L8;
    }

    /* "Pythonreflectivity.pyx":996
 *         else:
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi(vyvy, LR[MLCOMP[i][1]].ey, LR[MLCOMP[i][1]].ez )
 * 
 */
    /*else*/ {
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":997
 * 
 *             vzlower=vzupper
 *             vzupper=CalculateVZpi(vyvy, LR[MLCOMP[i][1]].ey, LR[MLCOMP[i][1]].ez )             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 997, __pyx_L1_error)
      __pyx_v_vzupper = __pyx_t_9;

      /* "Pythonreflectivity.pyx":1000
 * 
 * 
 *             r_ML_in_1=(vzupper*LR[MLCOMP[i][0]].ey-LR[MLCOMP[i][1]].ey*vzlower)/(vzupper*LR[MLCOMP[i][0]].ey+LR[MLCOMP[i][1]].ey*vzlower)             # <<<<<<<<<<<<<<
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough
 */
      __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod_double((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, __pyx_v_vzlower));
      __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod_double((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, __pyx_v_vzlower));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1000, __pyx_L1_error)
      }
      __pyx_v_r_ML_in_1 = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

      /* "Pythonreflectivity.pyx":1001
 * 
 *             r_ML_in_1=(vzupper*LR[MLCOMP[i][0]].ey-LR[MLCOMP[i][1]].ey*vzlower)/(vzupper*LR[MLCOMP[i][0]].ey+LR[MLCOMP[i][1]].ey*vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *             r_ML_in_1*=rough
 * 
 */
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1001, __pyx_L1_error)
      __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

      /* "Pythonreflectivity.pyx":1002
 *             r_ML_in_1=(vzupper*LR[MLCOMP[i][0]].ey-LR[MLCOMP[i][1]].ey*vzlower)/(vzupper*LR[MLCOMP[i][0]].ey+LR[MLCOMP[i][1]].ey*vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough             # <<<<<<<<<<<<<<
 * 
 *             t_comp1_up=1-r_ML_in_1
 */
      __pyx_v_r_ML_in_1 = __Pyx_c_prod_double(__pyx_v_r_ML_in_1, __pyx_v_rough);

      /* "Pythonreflectivity.pyx":1004
 *             r_ML_in_1*=rough
 * 
 *             t_comp1_up=1-r_ML_in_1             # <<<<<<<<<<<<<<
 *             j=1
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_t_comp1_up = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_in_1);

      /* "Pythonreflectivity.pyx":1005
 * 
 *             t_comp1_up=1-r_ML_in_1
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":1006
 *             t_comp1_up=1-r_ML_in_1
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1007
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
        __pyx_t_1 = ((__pyx_v_j + 1) < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":1008
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][0]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

          /* "Pythonreflectivity.pyx":1007
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
          goto __pyx_L12;
        }

        /* "Pythonreflectivity.pyx":1010
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 */
        /*else*/ {
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
        }
        __pyx_L12:;

        /* "Pythonreflectivity.pyx":1011
 *                 else:
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1012
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1013
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1014
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 * 
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1014, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":1015
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)             # <<<<<<<<<<<<<<
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_t_8 = __Pyx_c_prod_double(__pyx_v_rough, __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey)));
        __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1015, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":1017
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 */
        __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1018
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1018, __pyx_L1_error)
        __pyx_v_pquad = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1019
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 */
        __pyx_t_9 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_r_ML_in_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1019, __pyx_L1_error)
        }
        __pyx_v_MSfac = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":1020
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 */
        __pyx_v_t = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":1021
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 */
        __pyx_v_t_comp1_up = __Pyx_c_prod_double(__pyx_v_t_comp1_up, __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1022
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_v_r_ML_in_1 = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_r_ML_in_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":1023
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1024
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             t_comp1_up*=p
 * 
 */
      __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":1025
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p             # <<<<<<<<<<<<<<
 * 
 *             r_ML_back_1=-rprime
 */
      __pyx_v_t_comp1_up = __Pyx_c_prod_double(__pyx_v_t_comp1_up, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1027
 *             t_comp1_up*=p
 * 
 *             r_ML_back_1=-rprime             # <<<<<<<<<<<<<<
 *             t_comp1_down=1-r_ML_back_1
 * 
 */
      __pyx_v_r_ML_back_1 = __Pyx_c_neg_double(__pyx_v_rprime);

      /* "Pythonreflectivity.pyx":1028
 * 
 *             r_ML_back_1=-rprime
 *             t_comp1_down=1-r_ML_back_1             # <<<<<<<<<<<<<<
 * 
 *             j=MLLENGTH[i]-2
 */
      __pyx_v_t_comp1_down = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_back_1);

      /* "Pythonreflectivity.pyx":1030
 *             t_comp1_down=1-r_ML_back_1
 * 
 *             j=MLLENGTH[i]-2             # <<<<<<<<<<<<<<
 *             while j>=0:
 *                 vzupper=vzlower
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 2);

      /* "Pythonreflectivity.pyx":1031
 * 
 *             j=MLLENGTH[i]-2
 *             while j>=0:             # <<<<<<<<<<<<<<
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j >= 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1032
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 *                 vzupper=vzlower             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzupper = __pyx_v_vzlower;

        /* "Pythonreflectivity.pyx":1033
 *             while j>=0:
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1034
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1035
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L1_error)
        __pyx_v_vzlower = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1036
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 * 
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1036, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":1038
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_t_8 = __Pyx_c_prod_double(__pyx_v_rough, __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey), __Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey)));
        __pyx_t_9 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1038, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":1039
 * 
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)
 */
        __pyx_v_t = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":1040
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

        /* "Pythonreflectivity.pyx":1041
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1041, __pyx_L1_error)
        __pyx_v_pquad = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1043
 *                 pquad=cquadr(p)
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)             # <<<<<<<<<<<<<<
 *                 t_comp1_down*=p*t*MSfac
 * 
 */
        __pyx_t_9 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_r_ML_back_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1043, __pyx_L1_error)
        }
        __pyx_v_MSfac = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":1044
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 *                 t_comp1_down*=p*t*MSfac             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 */
        __pyx_v_t_comp1_down = __Pyx_c_prod_double(__pyx_v_t_comp1_down, __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1046
 *                 t_comp1_down*=p*t*MSfac
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_v_r_ML_back_1 = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_r_ML_back_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":1047
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":1048
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)
 */
      __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1049
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p             # <<<<<<<<<<<<<<
 *             r_ML_back_1*=cquadr(p)
 * 
 */
      __pyx_v_t_comp1_down = __Pyx_c_prod_double(__pyx_v_t_comp1_down, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1050
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1050, __pyx_L1_error)
      __pyx_v_r_ML_back_1 = __Pyx_c_prod_double(__pyx_v_r_ML_back_1, __pyx_t_8);

      /* "Pythonreflectivity.pyx":1053
 * 
 * 
 *             Calculate_Multilayer(&t_comp1_up, &t_comp2_up,&t_comp1_down, &t_comp2_down, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer((&__pyx_v_t_comp1_up), (&__pyx_v_t_comp2_up), (&__pyx_v_t_comp1_down), (&__pyx_v_t_comp2_down), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1053, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1057
 * 
 * 
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 */
      __pyx_t_8 = __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t_comp2_up, __pyx_v_t_comp2_down), __pyx_v_rtot);
      __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__pyx_v_r_ML_back_2, __pyx_v_rtot));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1057, __pyx_L1_error)
      }
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r_ML_in_2, __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9));

      /* "Pythonreflectivity.pyx":1059
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)             # <<<<<<<<<<<<<<
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 */
      __pyx_v_vzupper = __pyx_v_vzlower;

      /* "Pythonreflectivity.pyx":1060
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":1061
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1062
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1063
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1064
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1065
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1065, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1066
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1066, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":1067
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1068
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1068, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":1069
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1069, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":1070
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1072
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1073
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1074
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1077
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1078
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1080
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1080, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1081
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1081, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":1082
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *             else:
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod_double(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1082, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":1083
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1083, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":1074
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
        goto __pyx_L17;
      }

      /* "Pythonreflectivity.pyx":1086
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 */
      /*else*/ {
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1087
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1087, __pyx_L1_error)
        __pyx_v_rough = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_t_3, 0)));

        /* "Pythonreflectivity.pyx":1088
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 * 
 */
        __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1088, __pyx_L1_error)
        }
        __pyx_v_rprime = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":1089
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_8 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_9 = __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1089, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);
      }
      __pyx_L17:;
    }
    __pyx_L8:;

    /* "Pythonreflectivity.pyx":1093
 * 
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1096
 * 
 * 
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":924
 * 
 * 
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1100
 * 
 * 
 * cdef void Relevant_Stuff_for_xmag(double complex ey1, double complex ey2, double complex ez1, double complex ez2,\             # <<<<<<<<<<<<<<
 *                                   double complex eg1, double complex eg2, double complex vz1, double complex vz2, \
 *                                   double vy, double k0, double sigma, \
 */

static void __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag(CYTHON_UNUSED __pyx_t_double_complex __pyx_v_ey1, CYTHON_UNUSED __pyx_t_double_complex __pyx_v_ey2, __pyx_t_double_complex __pyx_v_ez1, __pyx_t_double_complex __pyx_v_ez2, __pyx_t_double_complex __pyx_v_eg1, __pyx_t_double_complex __pyx_v_eg2, __pyx_t_double_complex __pyx_v_vz1, __pyx_t_double_complex __pyx_v_vz2, double __pyx_v_vy, double __pyx_v_k0, double __pyx_v_sigma, __pyx_t_double_complex *__pyx_v_r, __pyx_t_double_complex *__pyx_v_rp, __pyx_t_double_complex *__pyx_v_t, __pyx_t_double_complex *__pyx_v_tp) {
  double __pyx_v_vyvy;
  __pyx_t_double_complex __pyx_v_div1;
  __pyx_t_double_complex __pyx_v_a;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_c;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_e;
  __pyx_t_double_complex __pyx_v_J11;
  __pyx_t_double_complex __pyx_v_J12;
  __pyx_t_double_complex __pyx_v_J21;
  __pyx_t_double_complex __pyx_v_J22;
  double __pyx_v_roughfac;
  __pyx_t_double_complex __pyx_v_roughplus;
  __pyx_t_double_complex __pyx_v_roughminus;
  __pyx_t_double_complex __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1104
 *                                   double vy, double k0, double sigma, \
 *                                   double complex *r, double complex *rp, double complex *t, double complex *tp):
 *     cdef double vyvy=vy*vy             # <<<<<<<<<<<<<<
 *     cdef double complex div1
 *     cdef double complex a,b,c,d,e
 */
  __pyx_v_vyvy = (__pyx_v_vy * __pyx_v_vy);

  /* "Pythonreflectivity.pyx":1107
 *     cdef double complex div1
 *     cdef double complex a,b,c,d,e
 *     div1=-vy*eg1/ez1             # <<<<<<<<<<<<<<
 *     a=vz1+div1
 *     b=vz1-div1
 */
  __pyx_t_1 = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-__pyx_v_vy), 0), __pyx_v_eg1);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_ez1))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1107, __pyx_L1_error)
  }
  __pyx_v_div1 = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_ez1);

  /* "Pythonreflectivity.pyx":1108
 *     cdef double complex a,b,c,d,e
 *     div1=-vy*eg1/ez1
 *     a=vz1+div1             # <<<<<<<<<<<<<<
 *     b=vz1-div1
 *     c=1.-vyvy/ez1
 */
  __pyx_v_a = __Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1109
 *     div1=-vy*eg1/ez1
 *     a=vz1+div1
 *     b=vz1-div1             # <<<<<<<<<<<<<<
 *     c=1.-vyvy/ez1
 *     div1=ez2-vyvy
 */
  __pyx_v_b = __Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1110
 *     a=vz1+div1
 *     b=vz1-div1
 *     c=1.-vyvy/ez1             # <<<<<<<<<<<<<<
 *     div1=ez2-vyvy
 *     d=(ez2*vz2+eg2*vy)/div1
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_ez1))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1110, __pyx_L1_error)
  }
  __pyx_v_c = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot_double(__pyx_t_1, __pyx_v_ez1));

  /* "Pythonreflectivity.pyx":1111
 *     b=vz1-div1
 *     c=1.-vyvy/ez1
 *     div1=ez2-vyvy             # <<<<<<<<<<<<<<
 *     d=(ez2*vz2+eg2*vy)/div1
 *     e=(-ez2*vz2+eg2*vy)/div1
 */
  __pyx_v_div1 = __Pyx_c_diff_double(__pyx_v_ez2, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0));

  /* "Pythonreflectivity.pyx":1112
 *     c=1.-vyvy/ez1
 *     div1=ez2-vyvy
 *     d=(ez2*vz2+eg2*vy)/div1             # <<<<<<<<<<<<<<
 *     e=(-ez2*vz2+eg2*vy)/div1
 *     div1=1./2.*vz1
 */
  __pyx_t_1 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_ez2, __pyx_v_vz2), __Pyx_c_prod_double(__pyx_v_eg2, __pyx_t_double_complex_from_parts(__pyx_v_vy, 0)));
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div1))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1112, __pyx_L1_error)
  }
  __pyx_v_d = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1113
 *     div1=ez2-vyvy
 *     d=(ez2*vz2+eg2*vy)/div1
 *     e=(-ez2*vz2+eg2*vy)/div1             # <<<<<<<<<<<<<<
 *     div1=1./2.*vz1
 *     cdef double complex J11,J12,J21,J22
 */
  __pyx_t_1 = __Pyx_c_sum_double(__Pyx_c_prod_double(__Pyx_c_neg_double(__pyx_v_ez2), __pyx_v_vz2), __Pyx_c_prod_double(__pyx_v_eg2, __pyx_t_double_complex_from_parts(__pyx_v_vy, 0)));
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div1))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1113, __pyx_L1_error)
  }
  __pyx_v_e = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1114
 *     d=(ez2*vz2+eg2*vy)/div1
 *     e=(-ez2*vz2+eg2*vy)/div1
 *     div1=1./2.*vz1             # <<<<<<<<<<<<<<
 *     cdef double complex J11,J12,J21,J22
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 */
  __pyx_v_div1 = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts((1. / 2.), 0), __pyx_v_vz1);

  /* "Pythonreflectivity.pyx":1116
 *     div1=1./2.*vz1
 *     cdef double complex J11,J12,J21,J22
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)             # <<<<<<<<<<<<<<
 *     cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 */
  __pyx_t_2 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_sigma); if (unlikely(__pyx_t_2 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1116, __pyx_L1_error)
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1116, __pyx_L1_error)
  __pyx_v_roughfac = ((-0.5 * __pyx_t_2) * __pyx_t_3);

  /* "Pythonreflectivity.pyx":1117
 *     cdef double complex J11,J12,J21,J22
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 *     cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))             # <<<<<<<<<<<<<<
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 * 
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_vz2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1117, __pyx_L1_error)
  __pyx_v_roughplus = exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_1));

  /* "Pythonreflectivity.pyx":1118
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 *     cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))             # <<<<<<<<<<<<<<
 * 
 *     J11=roughminus*(a+c*d)*div1
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_vz2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1118, __pyx_L1_error)
  __pyx_v_roughminus = exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_1));

  /* "Pythonreflectivity.pyx":1120
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 * 
 *     J11=roughminus*(a+c*d)*div1             # <<<<<<<<<<<<<<
 *     J12=roughplus*(a+c*e)*div1
 *     J21=roughplus*(b-c*d)*div1
 */
  __pyx_v_J11 = __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_roughminus, __Pyx_c_sum_double(__pyx_v_a, __Pyx_c_prod_double(__pyx_v_c, __pyx_v_d))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1121
 * 
 *     J11=roughminus*(a+c*d)*div1
 *     J12=roughplus*(a+c*e)*div1             # <<<<<<<<<<<<<<
 *     J21=roughplus*(b-c*d)*div1
 *     J22=roughminus*(b-c*e)*div1
 */
  __pyx_v_J12 = __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_roughplus, __Pyx_c_sum_double(__pyx_v_a, __Pyx_c_prod_double(__pyx_v_c, __pyx_v_e))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1122
 *     J11=roughminus*(a+c*d)*div1
 *     J12=roughplus*(a+c*e)*div1
 *     J21=roughplus*(b-c*d)*div1             # <<<<<<<<<<<<<<
 *     J22=roughminus*(b-c*e)*div1
 * 
 */
  __pyx_v_J21 = __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_roughplus, __Pyx_c_diff_double(__pyx_v_b, __Pyx_c_prod_double(__pyx_v_c, __pyx_v_d))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1123
 *     J12=roughplus*(a+c*e)*div1
 *     J21=roughplus*(b-c*d)*div1
 *     J22=roughminus*(b-c*e)*div1             # <<<<<<<<<<<<<<
 * 
 *     r[0]=(-J12/J11)
 */
  __pyx_v_J22 = __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_roughminus, __Pyx_c_diff_double(__pyx_v_b, __Pyx_c_prod_double(__pyx_v_c, __pyx_v_e))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1125
 *     J22=roughminus*(b-c*e)*div1
 * 
 *     r[0]=(-J12/J11)             # <<<<<<<<<<<<<<
 *     t[0]=J21*r[0]+J22
 *     rp[0]=J21/J11
 */
  __pyx_t_1 = __Pyx_c_neg_double(__pyx_v_J12);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_J11))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1125, __pyx_L1_error)
  }
  (__pyx_v_r[0]) = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_J11);

  /* "Pythonreflectivity.pyx":1126
 * 
 *     r[0]=(-J12/J11)
 *     t[0]=J21*r[0]+J22             # <<<<<<<<<<<<<<
 *     rp[0]=J21/J11
 *     tp[0]=1./J11
 */
  (__pyx_v_t[0]) = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_J21, (__pyx_v_r[0])), __pyx_v_J22);

  /* "Pythonreflectivity.pyx":1127
 *     r[0]=(-J12/J11)
 *     t[0]=J21*r[0]+J22
 *     rp[0]=J21/J11             # <<<<<<<<<<<<<<
 *     tp[0]=1./J11
 * 
 */
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_J11))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1127, __pyx_L1_error)
  }
  (__pyx_v_rp[0]) = __Pyx_c_quot_double(__pyx_v_J21, __pyx_v_J11);

  /* "Pythonreflectivity.pyx":1128
 *     t[0]=J21*r[0]+J22
 *     rp[0]=J21/J11
 *     tp[0]=1./J11             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(1., 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_J11))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1128, __pyx_L1_error)
  }
  (__pyx_v_tp[0]) = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_J11);

  /* "Pythonreflectivity.pyx":1100
 * 
 * 
 * cdef void Relevant_Stuff_for_xmag(double complex ey1, double complex ey2, double complex ez1, double complex ez2,\             # <<<<<<<<<<<<<<
 *                                   double complex eg1, double complex eg2, double complex vz1, double complex vz2, \
 *                                   double vy, double k0, double sigma, \
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Relevant_Stuff_for_xmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1132
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_r;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_tp;
  __pyx_t_double_complex __pyx_v_ttot;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_r_ML_1;
  __pyx_t_double_complex __pyx_v_r_ML_2;
  __pyx_t_double_complex __pyx_v_ptot;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi_xmag", 1);

  /* "Pythonreflectivity.pyx":1133
 * 
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th > 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":1134
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1134, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":1133
 * 
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":1137
 * 
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1137, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":1138
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1139
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 * 
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1140
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1140, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":1143
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1144
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1145
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":1146
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1147
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 * 
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":1150
 *     cdef int i,j
 * 
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, r, rprime, vz, p,t,tp,ttot,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":1163
 *     #rough=1.
 * 
 *     vzlower=CalculateVZpi_m(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez, LR[MLCOMP[0][0]].eg)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1163, __pyx_L1_error)
  __pyx_v_vzlower = __pyx_t_8;

  /* "Pythonreflectivity.pyx":1166
 * 
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1167
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *        # rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, 1., LR[MLCOMP[0][0]].ez, 1, \
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":1169
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, 1., LR[MLCOMP[0][0]].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[MLCOMP[0][0]].eg, 0., vzlower, sintheta, \
 *                                 vy, k0, LR[MLCOMP[0][0]].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, __pyx_t_double_complex_from_parts(1., 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).eg, __pyx_t_double_complex_from_parts(0., 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1169, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":1166
 * 
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":1174
 *                                 &rtot, &rprime, &t, &tp)
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *      #   rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, LR[MLCOMP[1][0]].ey, LR[MLCOMP[0][0]].ez, LR[MLCOMP[1][0]].ez, \
 */
  /*else*/ {
    __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L1_error)
    __pyx_v_vzupper = __pyx_t_8;

    /* "Pythonreflectivity.pyx":1176
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *      #   rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, LR[MLCOMP[1][0]].ey, LR[MLCOMP[0][0]].ez, LR[MLCOMP[1][0]].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[MLCOMP[0][0]].eg, LR[MLCOMP[1][0]].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[MLCOMP[0][0]].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).eg, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1176, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":1183
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":1184
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":1186
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1187
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1188
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1189
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1191
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1191, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1192
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1194
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1194, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1188
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":1200
 *               #  print "endif"
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
      /*else*/ {
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":1201
 *             else:
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1203
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1203, __pyx_L1_error)
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":1212
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *            # print "Layer ", Upper, " - ", Lower
 *          #   print "r", r
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1222
 *            # No Multiple scattering:
 *            # rtot=(r*rough+t*tp*pquad*rtot)
 *             rtot=r+t*tp*pquad*rtot             # <<<<<<<<<<<<<<
 *         else:
 * 
 */
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot));

      /* "Pythonreflectivity.pyx":1186
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
      goto __pyx_L7;
    }

    /* "Pythonreflectivity.pyx":1225
 *         else:
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Upper=MLCOMP[i][1]
 *             Lower=MLCOMP[i][0]
 */
    /*else*/ {
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1226
 * 
 *             vzlower=vzupper
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][0]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":1227
 *             vzlower=vzupper
 *             Upper=MLCOMP[i][1]
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":1228
 *             Upper=MLCOMP[i][1]
 *             Lower=MLCOMP[i][0]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 * 
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1228, __pyx_L1_error)
      __pyx_v_vzupper = __pyx_t_8;

      /* "Pythonreflectivity.pyx":1230
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper,  \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
      __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r_ML_1), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1230, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1235
 *                                 &r_ML_1, &rprime, &t, &tp)
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             p=1.
 *             ttot=t*tp
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":1236
 * 
 *             j=1
 *             p=1.             # <<<<<<<<<<<<<<
 *             ttot=t*tp
 * 
 */
      __pyx_v_p = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":1237
 *             j=1
 *             p=1.
 *             ttot=t*tp             # <<<<<<<<<<<<<<
 * 
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_ttot = __Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp);

      /* "Pythonreflectivity.pyx":1239
 *             ttot=t*tp
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *               #  print "3 ", j
 *                 vzlower=vzupper
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1241
 *             while j<MLLENGTH[i]:
 *               #  print "3 ", j
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1242
 *               #  print "3 ", j
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 p*=pquad
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1243
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 p*=pquad
 *                 if(j==(MLLENGTH[i]-1)):
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1244
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 Lower=MLCOMP[i][j]
 *                 p*=pquad             # <<<<<<<<<<<<<<
 *                 if(j==(MLLENGTH[i]-1)):
 * 
 */
        __pyx_v_p = __Pyx_c_prod_double(__pyx_v_p, __pyx_v_pquad);

        /* "Pythonreflectivity.pyx":1245
 *                 Lower=MLCOMP[i][j]
 *                 p*=pquad
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 * 
 *                     Upper=MLCOMP[i][0]
 */
        __pyx_t_1 = (__pyx_v_j == ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":1247
 *                 if(j==(MLLENGTH[i]-1)):
 * 
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

          /* "Pythonreflectivity.pyx":1248
 * 
 *                     Upper=MLCOMP[i][0]
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
          __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1248, __pyx_L1_error)
          __pyx_v_vzupper = __pyx_t_8;

          /* "Pythonreflectivity.pyx":1250
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
          __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1250, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":1245
 *                 Lower=MLCOMP[i][j]
 *                 p*=pquad
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 * 
 *                     Upper=MLCOMP[i][0]
 */
          goto __pyx_L11;
        }

        /* "Pythonreflectivity.pyx":1255
 *                                 &r, &rprime, &t, &tp)
 *                 else:
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 */
        /*else*/ {
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

          /* "Pythonreflectivity.pyx":1256
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
          __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1256, __pyx_L1_error)
          __pyx_v_vzupper = __pyx_t_8;

          /* "Pythonreflectivity.pyx":1258
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
          __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1258, __pyx_L1_error)
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":1263
 *                                 &r, &rprime, &t, &tp)
 *               #  r=r*rough
 *                 ttot*=t*tp             # <<<<<<<<<<<<<<
 *                 r_ML_1=r+t*tp*r_ML_1*pquad
 * 
 */
        __pyx_v_ttot = __Pyx_c_prod_double(__pyx_v_ttot, __Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp));

        /* "Pythonreflectivity.pyx":1264
 *               #  r=r*rough
 *                 ttot*=t*tp
 *                 r_ML_1=r+t*tp*r_ML_1*pquad             # <<<<<<<<<<<<<<
 * 
 *                 j=j+1
 */
        __pyx_v_r_ML_1 = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_r_ML_1), __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":1266
 *                 r_ML_1=r+t*tp*r_ML_1*pquad
 * 
 *                 j=j+1             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0*LR[Upper].Thickness*vzupper)
 *             p*=pquad
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1267
 * 
 *                 j=j+1
 *             pquad=exp(2j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             p*=pquad
 *           #  print "6 "
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":1268
 *                 j=j+1
 *             pquad=exp(2j*k0*LR[Upper].Thickness*vzupper)
 *             p*=pquad             # <<<<<<<<<<<<<<
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 */
      __pyx_v_p = __Pyx_c_prod_double(__pyx_v_p, __pyx_v_pquad);

      /* "Pythonreflectivity.pyx":1270
 *             p*=pquad
 *           #  print "6 "
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
      __pyx_t_1 = ((__pyx_v_MLREP[__pyx_v_i]) <= 1);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1271
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 *                 ptot=1             # <<<<<<<<<<<<<<
 *                 r_ML_2=0
 *             else:
 */
        __pyx_v_ptot = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":1272
 *             if(MLREP[i]<=1):
 *                 ptot=1
 *                 r_ML_2=0             # <<<<<<<<<<<<<<
 *             else:
 *                 ptot=ipow(p*ttot, MLREP[i]-1)
 */
        __pyx_v_r_ML_2 = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":1270
 *             p*=pquad
 *           #  print "6 "
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
        goto __pyx_L12;
      }

      /* "Pythonreflectivity.pyx":1274
 *                 r_ML_2=0
 *             else:
 *                 ptot=ipow(p*ttot, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)
 */
      /*else*/ {
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod_double(__pyx_v_p, __pyx_v_ttot), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1274, __pyx_L1_error)
        __pyx_v_ptot = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1276
 *                 ptot=ipow(p*ttot, MLREP[i]-1)
 * 
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)             # <<<<<<<<<<<<<<
 *             #ttot=ipow(, MLREP[i])
 *           #  r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)
 */
        __pyx_t_8 = __Pyx_c_prod_double(__pyx_v_r_ML_1, __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_ptot));
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__pyx_v_p, __pyx_v_ttot));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1276, __pyx_L1_error)
        }
        __pyx_v_r_ML_2 = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":1280
 *           #  r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot             # <<<<<<<<<<<<<<
 * 
 *             j=0
 */
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r_ML_2, __Pyx_c_prod_double(__pyx_v_ptot, __pyx_v_rtot));

      /* "Pythonreflectivity.pyx":1282
 *             rtot=r_ML_2+ptot*rtot
 * 
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":1283
 * 
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1284
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1285
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1286
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1287
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1287, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1288
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1288, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1292
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rtot=(r+rtot*pquad)
 *                 j+=1
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1293
 *                                 &r, &rprime, &t, &tp)
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rtot=(r+rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":1294
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rtot=(r+rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1296
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1297
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1298
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1301
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1302
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1304
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1304, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1305
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1305, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1309
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+rtot*pquad             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":1298
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
        goto __pyx_L15;
      }

      /* "Pythonreflectivity.pyx":1312
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 */
      /*else*/ {
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1313
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1313, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1317
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+rtot*pquad             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_pquad));
      }
      __pyx_L15:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":1320
 * 
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 *    # print "8 "
 *     return rtot
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1322
 *         i=i+1
 *    # print "8 "
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":1132
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi_xmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1325
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_r;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_tp;
  __pyx_t_double_complex __pyx_v_MSfac;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_t_ML_in_1;
  __pyx_t_double_complex __pyx_v_t_ML_back_1;
  __pyx_t_double_complex __pyx_v_t_ML_in_2;
  __pyx_t_double_complex __pyx_v_t_ML_back_2;
  __pyx_t_double_complex __pyx_v_r_ML_in_1;
  __pyx_t_double_complex __pyx_v_r_ML_in_2;
  __pyx_t_double_complex __pyx_v_r_ML_back_1;
  __pyx_t_double_complex __pyx_v_r_ML_back_2;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi_xmag_MS", 1);

  /* "Pythonreflectivity.pyx":1326
 * 
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":1327
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1327, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":1326
 * 
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":1330
 * 
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1330, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":1331
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1332
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 * 
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1333
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1333, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":1336
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1337
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1338
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":1339
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1340
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *    # cdef double roughfak=-2.*quadr(k0)
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":1344
 *    # cdef double roughfak=-2.*quadr(k0)
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz,r, p,t,tp,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":1357
 *     cdef int Lower, Upper
 *     #rough=1.
 *     Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *     Upper=MLCOMP[1][0]
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 */
  __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

  /* "Pythonreflectivity.pyx":1358
 *     #rough=1.
 *     Lower=MLCOMP[0][0]
 *     Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 */
  __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

  /* "Pythonreflectivity.pyx":1359
 *     Lower=MLCOMP[0][0]
 *     Upper=MLCOMP[1][0]
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)             # <<<<<<<<<<<<<<
 * 
 *     if(NLAYERS==1):
 */
  __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L1_error)
  __pyx_v_vzlower = __pyx_t_8;

  /* "Pythonreflectivity.pyx":1361
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1362
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *        # rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, 1., LR[Lower].ez, 1, \
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":1364
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, 1., LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0., vzlower, sintheta, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1., 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0., 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1364, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":1361
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":1369
 *                                 &rtot, &rprime, &t, &tp)
 *     else:
 *         vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *      #   rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
  /*else*/ {
    __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1369, __pyx_L1_error)
    __pyx_v_vzupper = __pyx_t_8;

    /* "Pythonreflectivity.pyx":1371
 *         vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *      #   rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1371, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":1378
 *    # print rtot
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":1379
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":1381
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1382
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1383
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1384
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1386
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1386, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1387
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1389
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1389, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1383
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":1395
 *               #  print "endif"
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
      /*else*/ {
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":1396
 *             else:
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1398
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1398, __pyx_L1_error)
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":1407
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 *           #  print rtot, vzlower, vzupper
 */
      __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1408
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *             rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *           #  print rtot, vzlower, vzupper
 *         else:
 */
      __pyx_t_8 = __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
      __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1408, __pyx_L1_error)
      }
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9));

      /* "Pythonreflectivity.pyx":1381
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
      goto __pyx_L7;
    }

    /* "Pythonreflectivity.pyx":1412
 *         else:
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 * 
 *             Lower=MLCOMP[i][0]
 */
    /*else*/ {
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1414
 *             vzlower=vzupper
 * 
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             Upper=MLCOMP[i][1]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":1415
 * 
 *             Lower=MLCOMP[i][0]
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":1416
 *             Lower=MLCOMP[i][0]
 *             Upper=MLCOMP[i][1]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
      __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1416, __pyx_L1_error)
      __pyx_v_vzupper = __pyx_t_9;

      /* "Pythonreflectivity.pyx":1417
 *             Upper=MLCOMP[i][1]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
      __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1421
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r_ML_in_1, &rprime, &t, &t_ML_back_1)
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":1422
 *                                 &r_ML_in_1, &rprime, &t, &t_ML_back_1)
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1423
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
        __pyx_t_1 = ((__pyx_v_j + 1) < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":1424
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][0]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

          /* "Pythonreflectivity.pyx":1423
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
          goto __pyx_L11;
        }

        /* "Pythonreflectivity.pyx":1426
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 * 
 */
        /*else*/ {
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":1427
 *                 else:
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 * 
 *                 vzlower=vzupper
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1429
 *                 Lower=MLCOMP[i][j]
 * 
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1430
 * 
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1431
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1431, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1435
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1436
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1436, __pyx_L1_error)
        __pyx_v_pquad = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1439
 * 
 * 
 *                 MSfac=1.0/(1.-rprime*r_ML_in_1*pquad)             # <<<<<<<<<<<<<<
 * 
 *                 t_ML_back_1=t_ML_back_1*p*tp*MSfac
 */
        __pyx_t_9 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_8 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rprime, __pyx_v_r_ML_in_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1439, __pyx_L1_error)
        }
        __pyx_v_MSfac = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":1441
 *                 MSfac=1.0/(1.-rprime*r_ML_in_1*pquad)
 * 
 *                 t_ML_back_1=t_ML_back_1*p*tp*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_in_1=r+t*tp*pquad*r_ML_in_1*MSfac
 * 
 */
        __pyx_v_t_ML_back_1 = __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t_ML_back_1, __pyx_v_p), __pyx_v_tp), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":1442
 * 
 *                 t_ML_back_1=t_ML_back_1*p*tp*MSfac
 *                 r_ML_in_1=r+t*tp*pquad*r_ML_in_1*MSfac             # <<<<<<<<<<<<<<
 * 
 *                 j+=1
 */
        __pyx_v_r_ML_in_1 = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_r_ML_in_1), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1444
 *                 r_ML_in_1=r+t*tp*pquad*r_ML_in_1*MSfac
 * 
 *                 j+=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_ML_back_1*=p
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1445
 * 
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             t_ML_back_1*=p
 * 
 */
      __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":1446
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_ML_back_1*=p             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_t_ML_back_1 = __Pyx_c_prod_double(__pyx_v_t_ML_back_1, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1449
 * 
 * 
 *             r_ML_back_1=rprime             # <<<<<<<<<<<<<<
 *             t_ML_in_1=t
 * 
 */
      __pyx_v_r_ML_back_1 = __pyx_v_rprime;

      /* "Pythonreflectivity.pyx":1450
 * 
 *             r_ML_back_1=rprime
 *             t_ML_in_1=t             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_t_ML_in_1 = __pyx_v_t;

      /* "Pythonreflectivity.pyx":1455
 * 
 * 
 *             j=MLLENGTH[i]-2             # <<<<<<<<<<<<<<
 *             while j>=0:
 *                 vzupper=vzlower
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 2);

      /* "Pythonreflectivity.pyx":1456
 * 
 *             j=MLLENGTH[i]-2
 *             while j>=0:             # <<<<<<<<<<<<<<
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j >= 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1457
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 *                 vzupper=vzlower             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzupper = __pyx_v_vzlower;

        /* "Pythonreflectivity.pyx":1458
 *             while j>=0:
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1459
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1460
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1460, __pyx_L1_error)
        __pyx_v_vzlower = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1461
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1461, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1465
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

        /* "Pythonreflectivity.pyx":1466
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 *                 MSfac=1.0/(1.-r*r_ML_back_1*pquad)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1466, __pyx_L1_error)
        __pyx_v_pquad = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1468
 *                 pquad=cquadr(p)
 * 
 *                 MSfac=1.0/(1.-r*r_ML_back_1*pquad)             # <<<<<<<<<<<<<<
 * 
 *                 t_ML_in_1*=t*p*MSfac
 */
        __pyx_t_8 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_r, __pyx_v_r_ML_back_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1468, __pyx_L1_error)
        }
        __pyx_v_MSfac = __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9);

        /* "Pythonreflectivity.pyx":1470
 *                 MSfac=1.0/(1.-r*r_ML_back_1*pquad)
 * 
 *                 t_ML_in_1*=t*p*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_back_1=rprime+t*tp*pquad*r_ML_back_1*MSfac
 *                 j-=1
 */
        __pyx_v_t_ML_in_1 = __Pyx_c_prod_double(__pyx_v_t_ML_in_1, __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_p), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1471
 * 
 *                 t_ML_in_1*=t*p*MSfac
 *                 r_ML_back_1=rprime+t*tp*pquad*r_ML_back_1*MSfac             # <<<<<<<<<<<<<<
 *                 j-=1
 * 
 */
        __pyx_v_r_ML_back_1 = __Pyx_c_sum_double(__pyx_v_rprime, __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_r_ML_back_1), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1472
 *                 t_ML_in_1*=t*p*MSfac
 *                 r_ML_back_1=rprime+t*tp*pquad*r_ML_back_1*MSfac
 *                 j-=1             # <<<<<<<<<<<<<<
 * 
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":1474
 *                 j-=1
 * 
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             t_ML_in_1*=p
 *             r_ML_back_1*=cquadr(p)
 */
      __pyx_v_p = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1475
 * 
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_ML_in_1*=p             # <<<<<<<<<<<<<<
 *             r_ML_back_1*=cquadr(p)
 * 
 */
      __pyx_v_t_ML_in_1 = __Pyx_c_prod_double(__pyx_v_t_ML_in_1, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1476
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_ML_in_1*=p
 *             r_ML_back_1*=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1476, __pyx_L1_error)
      __pyx_v_r_ML_back_1 = __Pyx_c_prod_double(__pyx_v_r_ML_back_1, __pyx_t_9);

      /* "Pythonreflectivity.pyx":1479
 * 
 * 
 *             Calculate_Multilayer(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_back_2), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_in_2), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1479, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1483
 * 
 * 
 *             rtot=r_ML_in_2+t_ML_back_2*t_ML_in_2*rtot/(1.-r_ML_back_2*rtot)             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 * 
 */
      __pyx_t_9 = __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t_ML_back_2, __pyx_v_t_ML_in_2), __pyx_v_rtot);
      __pyx_t_8 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__pyx_v_r_ML_back_2, __pyx_v_rtot));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1483, __pyx_L1_error)
      }
      __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r_ML_in_2, __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8));

      /* "Pythonreflectivity.pyx":1486
 *             #Now the next layer begins:
 * 
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":1487
 * 
 *             Lower=MLCOMP[i][0]
 *             vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)             # <<<<<<<<<<<<<<
 * 
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1487, __pyx_L1_error)
      __pyx_v_vzlower = __pyx_t_8;

      /* "Pythonreflectivity.pyx":1489
 *             vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)             # <<<<<<<<<<<<<<
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 */
      __pyx_v_vzupper = __pyx_v_vzlower;

      /* "Pythonreflectivity.pyx":1490
 * 
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":1491
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1492
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1493
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1494
 *                 vzlower=vzupper
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1495
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1495, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1496
 *                 Lower=MLCOMP[i][j]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1500
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1502
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *              #   print rtot, vzlower, vzupper
 *                 j+=1
 */
        __pyx_t_8 = __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1502, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9));

        /* "Pythonreflectivity.pyx":1504
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 *              #   print rtot, vzlower, vzupper
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1506
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1507
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1508
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1511
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1512
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1514
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_t_9 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1514, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1515
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1515, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1519
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_t_9 = __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
        __pyx_t_8 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1519, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8));

        /* "Pythonreflectivity.pyx":1508
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
        goto __pyx_L16;
      }

      /* "Pythonreflectivity.pyx":1522
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 */
      /*else*/ {
        __pyx_v_pquad = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1523
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1523, __pyx_L1_error)
        __pyx_v_vzupper = __pyx_t_8;

        /* "Pythonreflectivity.pyx":1524
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1524, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1528
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *           #  print rtot, vzlower, vzupper
 *         i=i+1
 */
        __pyx_t_8 = __Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
        __pyx_t_9 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1528, __pyx_L1_error)
        }
        __pyx_v_rtot = __Pyx_c_sum_double(__pyx_v_r, __Pyx_c_quot_double(__pyx_t_8, __pyx_t_9));
      }
      __pyx_L16:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":1530
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 *           #  print rtot, vzlower, vzupper
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 *     return rtot
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1532
 *         i=i+1
 * 
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":1325
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi_xmag_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1536
 * 
 * 
 * cdef void Mult2x2_rightside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

static void __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2]) {
  __pyx_t_double_complex __pyx_v_R11;
  __pyx_t_double_complex __pyx_v_R12;
  __pyx_t_double_complex __pyx_v_R21;
  __pyx_t_double_complex __pyx_v_R22;

  /* "Pythonreflectivity.pyx":1539
 * 
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 */
  __pyx_v_R11 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod_double((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1540
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 */
  __pyx_v_R12 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod_double((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1541
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (B[0])[0][0]=R11
 */
  __pyx_v_R21 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod_double((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1542
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     (B[0])[0][0]=R11
 *     (B[0])[0][1]=R12
 */
  __pyx_v_R22 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod_double((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1543
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (B[0])[0][0]=R11             # <<<<<<<<<<<<<<
 *     (B[0])[0][1]=R12
 *     (B[0])[1][0]=R21
 */
  (((__pyx_v_B[0])[0])[0]) = __pyx_v_R11;

  /* "Pythonreflectivity.pyx":1544
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (B[0])[0][0]=R11
 *     (B[0])[0][1]=R12             # <<<<<<<<<<<<<<
 *     (B[0])[1][0]=R21
 *     (B[0])[1][1]=R22
 */
  (((__pyx_v_B[0])[0])[1]) = __pyx_v_R12;

  /* "Pythonreflectivity.pyx":1545
 *     (B[0])[0][0]=R11
 *     (B[0])[0][1]=R12
 *     (B[0])[1][0]=R21             # <<<<<<<<<<<<<<
 *     (B[0])[1][1]=R22
 * 
 */
  (((__pyx_v_B[0])[1])[0]) = __pyx_v_R21;

  /* "Pythonreflectivity.pyx":1546
 *     (B[0])[0][1]=R12
 *     (B[0])[1][0]=R21
 *     (B[0])[1][1]=R22             # <<<<<<<<<<<<<<
 * 
 * 
 */
  (((__pyx_v_B[0])[1])[1]) = __pyx_v_R22;

  /* "Pythonreflectivity.pyx":1536
 * 
 * 
 * cdef void Mult2x2_rightside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

  /* function exit code */
}

/* "Pythonreflectivity.pyx":1549
 * 
 * 
 * cdef void Mult2x2_leftside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

static void __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2]) {
  __pyx_t_double_complex __pyx_v_R11;
  __pyx_t_double_complex __pyx_v_R12;
  __pyx_t_double_complex __pyx_v_R21;
  __pyx_t_double_complex __pyx_v_R22;

  /* "Pythonreflectivity.pyx":1552
 * 
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 */
  __pyx_v_R11 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod_double((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1553
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 */
  __pyx_v_R12 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod_double((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1554
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (A[0])[0][0]=R11
 */
  __pyx_v_R21 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod_double((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1555
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     (A[0])[0][0]=R11
 *     (A[0])[0][1]=R12
 */
  __pyx_v_R22 = __Pyx_c_sum_double(__Pyx_c_prod_double((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod_double((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1556
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (A[0])[0][0]=R11             # <<<<<<<<<<<<<<
 *     (A[0])[0][1]=R12
 *     (A[0])[1][0]=R21
 */
  (((__pyx_v_A[0])[0])[0]) = __pyx_v_R11;

  /* "Pythonreflectivity.pyx":1557
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (A[0])[0][0]=R11
 *     (A[0])[0][1]=R12             # <<<<<<<<<<<<<<
 *     (A[0])[1][0]=R21
 *     (A[0])[1][1]=R22
 */
  (((__pyx_v_A[0])[0])[1]) = __pyx_v_R12;

  /* "Pythonreflectivity.pyx":1558
 *     (A[0])[0][0]=R11
 *     (A[0])[0][1]=R12
 *     (A[0])[1][0]=R21             # <<<<<<<<<<<<<<
 *     (A[0])[1][1]=R22
 * 
 */
  (((__pyx_v_A[0])[1])[0]) = __pyx_v_R21;

  /* "Pythonreflectivity.pyx":1559
 *     (A[0])[0][1]=R12
 *     (A[0])[1][0]=R21
 *     (A[0])[1][1]=R22             # <<<<<<<<<<<<<<
 * 
 * cdef void Elimination_4x4(double complex (*A)[4][4], double complex (*B)[4]):
 */
  (((__pyx_v_A[0])[1])[1]) = __pyx_v_R22;

  /* "Pythonreflectivity.pyx":1549
 * 
 * 
 * cdef void Mult2x2_leftside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

  /* function exit code */
}

/* "Pythonreflectivity.pyx":1561
 *     (A[0])[1][1]=R22
 * 
 * cdef void Elimination_4x4(double complex (*A)[4][4], double complex (*B)[4]):             # <<<<<<<<<<<<<<
 *      # Calculates for matrix a and vector b the solution of the system of equations ax=b and stores the result in b.
 *     cdef double complex x, sum
 */

static void __pyx_f_18Pythonreflectivity_Elimination_4x4(__pyx_t_double_complex (*__pyx_v_A)[4][4], __pyx_t_double_complex (*__pyx_v_B)[4]) {
  __pyx_t_double_complex __pyx_v_x;
  __pyx_t_double_complex __pyx_v_sum;
  int __pyx_v_n;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_k;
  long __pyx_t_1;
  long __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  __pyx_t_double_complex __pyx_t_10;
  __pyx_t_double_complex __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1564
 *      # Calculates for matrix a and vector b the solution of the system of equations ax=b and stores the result in b.
 *     cdef double complex x, sum
 *     cdef int n=4             # <<<<<<<<<<<<<<
 *     cdef int i,j,k
 *     for i in range(n-1):
 */
  __pyx_v_n = 4;

  /* "Pythonreflectivity.pyx":1566
 *     cdef int n=4
 *     cdef int i,j,k
 *     for i in range(n-1):             # <<<<<<<<<<<<<<
 *         for k in range(i+1,n):
 *             x=(A[0])[k][i]/(A[0])[i][i]
 */
  __pyx_t_1 = (__pyx_v_n - 1);
  __pyx_t_2 = __pyx_t_1;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "Pythonreflectivity.pyx":1567
 *     cdef int i,j,k
 *     for i in range(n-1):
 *         for k in range(i+1,n):             # <<<<<<<<<<<<<<
 *             x=(A[0])[k][i]/(A[0])[i][i]
 *             for j in range(i+1,n):
 */
    __pyx_t_4 = __pyx_v_n;
    __pyx_t_5 = __pyx_t_4;
    for (__pyx_t_6 = (__pyx_v_i + 1); __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_k = __pyx_t_6;

      /* "Pythonreflectivity.pyx":1568
 *     for i in range(n-1):
 *         for k in range(i+1,n):
 *             x=(A[0])[k][i]/(A[0])[i][i]             # <<<<<<<<<<<<<<
 *             for j in range(i+1,n):
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x
 */
      if (unlikely(__Pyx_c_is_zero_double((((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_i])))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1568, __pyx_L1_error)
      }
      __pyx_v_x = __Pyx_c_quot_double((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_i]), (((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_i]));

      /* "Pythonreflectivity.pyx":1569
 *         for k in range(i+1,n):
 *             x=(A[0])[k][i]/(A[0])[i][i]
 *             for j in range(i+1,n):             # <<<<<<<<<<<<<<
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x
 */
      __pyx_t_7 = __pyx_v_n;
      __pyx_t_8 = __pyx_t_7;
      for (__pyx_t_9 = (__pyx_v_i + 1); __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_j = __pyx_t_9;

        /* "Pythonreflectivity.pyx":1570
 *             x=(A[0])[k][i]/(A[0])[i][i]
 *             for j in range(i+1,n):
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x             # <<<<<<<<<<<<<<
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x
 * 
 */
        (((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_j]) = __Pyx_c_diff_double((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_j]), __Pyx_c_prod_double((((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_j]), __pyx_v_x));
      }

      /* "Pythonreflectivity.pyx":1571
 *             for j in range(i+1,n):
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x             # <<<<<<<<<<<<<<
 * 
 *     (B[0])[n-1]=(B[0])[n-1]/(A[0])[n-1][n-1]
 */
      ((__pyx_v_B[0])[__pyx_v_k]) = __Pyx_c_diff_double(((__pyx_v_B[0])[__pyx_v_k]), __Pyx_c_prod_double(((__pyx_v_B[0])[__pyx_v_i]), __pyx_v_x));
    }
  }

  /* "Pythonreflectivity.pyx":1573
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x
 * 
 *     (B[0])[n-1]=(B[0])[n-1]/(A[0])[n-1][n-1]             # <<<<<<<<<<<<<<
 * 
 *     k=n-2
 */
  __pyx_t_10 = ((__pyx_v_B[0])[(__pyx_v_n - 1)]);
  __pyx_t_11 = (((__pyx_v_A[0])[(__pyx_v_n - 1)])[(__pyx_v_n - 1)]);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_t_11))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1573, __pyx_L1_error)
  }
  ((__pyx_v_B[0])[(__pyx_v_n - 1)]) = __Pyx_c_quot_double(__pyx_t_10, __pyx_t_11);

  /* "Pythonreflectivity.pyx":1575
 *     (B[0])[n-1]=(B[0])[n-1]/(A[0])[n-1][n-1]
 * 
 *     k=n-2             # <<<<<<<<<<<<<<
 *     while k>=0:
 *         sum = (B[0])[k]
 */
  __pyx_v_k = (__pyx_v_n - 2);

  /* "Pythonreflectivity.pyx":1576
 * 
 *     k=n-2
 *     while k>=0:             # <<<<<<<<<<<<<<
 *         sum = (B[0])[k]
 *         for j in range(k+1,n):
 */
  while (1) {
    __pyx_t_12 = (__pyx_v_k >= 0);
    if (!__pyx_t_12) break;

    /* "Pythonreflectivity.pyx":1577
 *     k=n-2
 *     while k>=0:
 *         sum = (B[0])[k]             # <<<<<<<<<<<<<<
 *         for j in range(k+1,n):
 *             sum=sum-(A[0])[k][j]*(B[0])[j]
 */
    __pyx_v_sum = ((__pyx_v_B[0])[__pyx_v_k]);

    /* "Pythonreflectivity.pyx":1578
 *     while k>=0:
 *         sum = (B[0])[k]
 *         for j in range(k+1,n):             # <<<<<<<<<<<<<<
 *             sum=sum-(A[0])[k][j]*(B[0])[j]
 * 
 */
    __pyx_t_3 = __pyx_v_n;
    __pyx_t_4 = __pyx_t_3;
    for (__pyx_t_5 = (__pyx_v_k + 1); __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_j = __pyx_t_5;

      /* "Pythonreflectivity.pyx":1579
 *         sum = (B[0])[k]
 *         for j in range(k+1,n):
 *             sum=sum-(A[0])[k][j]*(B[0])[j]             # <<<<<<<<<<<<<<
 * 
 *         (B[0])[k]=sum/(A[0])[k][k]
 */
      __pyx_v_sum = __Pyx_c_diff_double(__pyx_v_sum, __Pyx_c_prod_double((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_j]), ((__pyx_v_B[0])[__pyx_v_j])));
    }

    /* "Pythonreflectivity.pyx":1581
 *             sum=sum-(A[0])[k][j]*(B[0])[j]
 * 
 *         (B[0])[k]=sum/(A[0])[k][k]             # <<<<<<<<<<<<<<
 *         k=k-1
 * 
 */
    if (unlikely(__Pyx_c_is_zero_double((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_k])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1581, __pyx_L1_error)
    }
    ((__pyx_v_B[0])[__pyx_v_k]) = __Pyx_c_quot_double(__pyx_v_sum, (((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_k]));

    /* "Pythonreflectivity.pyx":1582
 * 
 *         (B[0])[k]=sum/(A[0])[k][k]
 *         k=k-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_k = (__pyx_v_k - 1);
  }

  /* "Pythonreflectivity.pyx":1561
 *     (A[0])[1][1]=R22
 * 
 * cdef void Elimination_4x4(double complex (*A)[4][4], double complex (*B)[4]):             # <<<<<<<<<<<<<<
 *      # Calculates for matrix a and vector b the solution of the system of equations ax=b and stores the result in b.
 *     cdef double complex x, sum
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Elimination_4x4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1585
 * 
 * 
 * cdef void Calculate_rt(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

static void __pyx_f_18Pythonreflectivity_Calculate_rt(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], __pyx_t_double_complex (*__pyx_v_r)[2][2], __pyx_t_double_complex (*__pyx_v_rprime)[2][2], __pyx_t_double_complex (*__pyx_v_t)[2][2], __pyx_t_double_complex (*__pyx_v_tprime)[2][2], int __pyx_v_Magnetic, __pyx_t_double_complex __pyx_v_vz1, __pyx_t_double_complex __pyx_v_vz2, __pyx_t_double_complex __pyx_v_vz3, __pyx_t_double_complex __pyx_v_vz4, double __pyx_v_sigma, double __pyx_v_k0) {
  __pyx_t_double_complex __pyx_v_J[2][4];
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_div;
  double __pyx_v_roughfac;
  double __pyx_t_1;
  int __pyx_t_2;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1590
 *     cdef double complex J[2][4]
 *     cdef double complex b,d, div;
 *     cdef double roughfac=-0.5*quadr(sigma*  k0)             # <<<<<<<<<<<<<<
 *   #  cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))
 *   #  cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_sigma * __pyx_v_k0)); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1590, __pyx_L1_error)
  __pyx_v_roughfac = (-0.5 * __pyx_t_1);

  /* "Pythonreflectivity.pyx":1594
 *   #  cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 * 
 *     if(Magnetic):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = (__pyx_v_Magnetic != 0);
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":1598
 * 
 * 
 *         b=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI1[0])[3])), ((__pyx_v_PSI1[0])[0]));

    /* "Pythonreflectivity.pyx":1599
 * 
 *         b=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[0]
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI1[0])[2])), __Pyx_c_prod_double(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1])));

    /* "Pythonreflectivity.pyx":1600
 *         b=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[0]
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1600, __pyx_L1_error)
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1601
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1601, __pyx_L1_error)
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1605
 * 
 * 
 *         b=(PHI2[0])[0]*(PSI2[0])[0]+(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PSI2[0])[0])), ((__pyx_v_PSI2[0])[3]));

    /* "Pythonreflectivity.pyx":1606
 * 
 *         b=(PHI2[0])[0]*(PSI2[0])[0]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2])), __Pyx_c_prod_double(((__pyx_v_PSI2[0])[1]), ((__pyx_v_PHI2[0])[1])));

    /* "Pythonreflectivity.pyx":1607
 *         b=(PHI2[0])[0]*(PSI2[0])[0]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L1_error)
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1608
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1608, __pyx_L1_error)
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1611
 * 
 * 
 *         b=(PHI2[0])[0]*(PSI1[0])[0]+(PSI1[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PSI1[0])[0])), ((__pyx_v_PSI1[0])[3]));

    /* "Pythonreflectivity.pyx":1612
 * 
 *         b=(PHI2[0])[0]*(PSI1[0])[0]+(PSI1[0])[3]
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]             # <<<<<<<<<<<<<<
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PSI1[0])[1])), __Pyx_c_prod_double(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI1[0])[2])));

    /* "Pythonreflectivity.pyx":1613
 *         b=(PHI2[0])[0]*(PSI1[0])[0]+(PSI1[0])[3]
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))             # <<<<<<<<<<<<<<
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1613, __pyx_L1_error)
    ((__pyx_v_J[0])[1]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1614
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))             # <<<<<<<<<<<<<<
 * 
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1614, __pyx_L1_error)
    ((__pyx_v_J[0])[3]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1616
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI2[0])[3])), ((__pyx_v_PSI2[0])[0]));

    /* "Pythonreflectivity.pyx":1617
 * 
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]             # <<<<<<<<<<<<<<
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[1]), ((__pyx_v_PSI2[0])[1])), __Pyx_c_prod_double(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI2[0])[2])));

    /* "Pythonreflectivity.pyx":1618
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))             # <<<<<<<<<<<<<<
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz2, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1618, __pyx_L1_error)
    ((__pyx_v_J[1])[0]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1619
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))             # <<<<<<<<<<<<<<
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz2, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1619, __pyx_L1_error)
    ((__pyx_v_J[1])[2]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1621
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])             # <<<<<<<<<<<<<<
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 */
    __pyx_v_div = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[0])), __Pyx_c_prod_double(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[0])));

    /* "Pythonreflectivity.pyx":1623
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 */
    __pyx_t_3 = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[2])), __Pyx_c_prod_double(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[2])));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1623, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_3, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1624
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 */
    __pyx_t_3 = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[3])), __Pyx_c_prod_double(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[3])));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1624, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[0])[1]) = __Pyx_c_quot_double(__pyx_t_3, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1625
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 * 
 */
    __pyx_t_3 = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[2])), __Pyx_c_prod_double(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[2])));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1625, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[1])[0]) = __Pyx_c_quot_double(__pyx_t_3, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1626
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[3])), __Pyx_c_prod_double(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[3])));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1626, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_3, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1630
 * 
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1631
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[0])[1]));

    /* "Pythonreflectivity.pyx":1632
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[1])[0]));

    /* "Pythonreflectivity.pyx":1633
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         (tprime[0])[0][0]=-J[1][1]/div
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1635
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         (tprime[0])[0][0]=-J[1][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=J[0][1]/div
 *         (tprime[0])[1][0]=J[1][0]/div
 */
    __pyx_t_3 = __Pyx_c_neg_double(((__pyx_v_J[1])[1]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1635, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_3, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1636
 * 
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=J[0][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1636, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[0])[1]) = __Pyx_c_quot_double(((__pyx_v_J[0])[1]), __pyx_v_div);

    /* "Pythonreflectivity.pyx":1637
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=J[0][1]/div
 *         (tprime[0])[1][0]=J[1][0]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1637, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[1])[0]) = __Pyx_c_quot_double(((__pyx_v_J[1])[0]), __pyx_v_div);

    /* "Pythonreflectivity.pyx":1638
 *         (tprime[0])[0][1]=J[0][1]/div
 *         (tprime[0])[1][0]=J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div             # <<<<<<<<<<<<<<
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 */
    __pyx_t_3 = __Pyx_c_neg_double(((__pyx_v_J[0])[0]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1638, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_3, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1640
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":1641
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[1])));

    /* "Pythonreflectivity.pyx":1642
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":1643
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1])));

    /* "Pythonreflectivity.pyx":1594
 *   #  cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 * 
 *     if(Magnetic):             # <<<<<<<<<<<<<<
 * 
 * 
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":1648
 *     else:
 * 
 *         b=(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 */
  /*else*/ {
    __pyx_v_b = ((__pyx_v_PSI1[0])[0]);

    /* "Pythonreflectivity.pyx":1649
 * 
 *         b=(PSI1[0])[0]
 *         d=(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_d = __Pyx_c_prod_double(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":1651
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1651, __pyx_L1_error)
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1652
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1652, __pyx_L1_error)
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1655
 * 
 * 
 *         b=(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = ((__pyx_v_PSI2[0])[3]);

    /* "Pythonreflectivity.pyx":1656
 * 
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_prod_double(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2]));

    /* "Pythonreflectivity.pyx":1657
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1657, __pyx_L1_error)
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1658
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1658, __pyx_L1_error)
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_3)));

    /* "Pythonreflectivity.pyx":1661
 * 
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 */
    __pyx_t_3 = __Pyx_c_neg_double(((__pyx_v_J[0])[2]));
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[0])[0])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1661, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_3, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1662
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 */
    (((__pyx_v_r[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1663
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 * 
 */
    (((__pyx_v_r[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1664
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __Pyx_c_neg_double(((__pyx_v_J[1])[3]));
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[1])[1])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1664, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_3, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1667
 * 
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1668
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1669
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1670
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1])), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1672
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 */
    __pyx_t_3 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[0])[0])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1672, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_3, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1673
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 */
    (((__pyx_v_tprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1674
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 * 
 */
    (((__pyx_v_tprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1675
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[1])[1])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1675, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_3, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1682
 * #        (rprime[0])[1][0]=0
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0]));

    /* "Pythonreflectivity.pyx":1683
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1684
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1685
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1]));
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":1585
 * 
 * 
 * cdef void Calculate_rt(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Calculate_rt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1687
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):             # <<<<<<<<<<<<<<
 *     return sqrt(  cquadr(res-D21)/4.+cquadr(D31)*eyy  )
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_rootfunc(__pyx_t_double_complex __pyx_v_res, __pyx_t_double_complex __pyx_v_D21, __pyx_t_double_complex __pyx_v_D31, __pyx_t_double_complex __pyx_v_eyy) {
  __pyx_t_double_complex __pyx_r;
  __pyx_t_double_complex __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1688
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):
 *     return sqrt(  cquadr(res-D21)/4.+cquadr(D31)*eyy  )             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_res, __pyx_v_D21)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1688, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_double_complex_from_parts(4., 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_t_2))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1688, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_D31); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1688, __pyx_L1_error)
  __pyx_r = sqrt(__Pyx_c_sum_double(__Pyx_c_quot_double(__pyx_t_1, __pyx_t_2), __Pyx_c_prod_double(__pyx_t_3, __pyx_v_eyy)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":1687
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):             # <<<<<<<<<<<<<<
 *     return sqrt(  cquadr(res-D21)/4.+cquadr(D31)*eyy  )
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.rootfunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1691
 * 
 * 
 * cdef void PHI_to_PSI(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

static void __pyx_f_18Pythonreflectivity_PHI_to_PSI(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], int __pyx_v_previously_magnetic) {
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1693
 * cdef void PHI_to_PSI(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):
 *     cdef double complex b,d
 *     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *         b=2*((PHI1[0])[3]*(PHI2[0])[0]-1)
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])
 */
  __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1694
 *     cdef double complex b,d
 *     if(previously_magnetic):
 *         b=2*((PHI1[0])[3]*(PHI2[0])[0]-1)             # <<<<<<<<<<<<<<
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])
 * 
 */
    __pyx_v_b = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PHI2[0])[0])), __pyx_t_double_complex_from_parts(1, 0)));

    /* "Pythonreflectivity.pyx":1695
 *     if(previously_magnetic):
 *         b=2*((PHI1[0])[3]*(PHI2[0])[0]-1)
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])             # <<<<<<<<<<<<<<
 * 
 *         (PSI1[0])[0]=-1.0/b
 */
    __pyx_v_d = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PHI2[0])[1])), __Pyx_c_prod_double(((__pyx_v_PHI1[0])[1]), ((__pyx_v_PHI2[0])[2]))));

    /* "Pythonreflectivity.pyx":1697
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])
 * 
 *         (PSI1[0])[0]=-1.0/b             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d
 *         (PSI1[0])[2]=(PHI2[0])[1]/d
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(-1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1697, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[0]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":1698
 * 
 *         (PSI1[0])[0]=-1.0/b
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=(PHI2[0])[1]/d
 *         (PSI1[0])[3]=(PHI2[0])[0]/b
 */
    __pyx_t_2 = __Pyx_c_neg_double(((__pyx_v_PHI2[0])[2]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1698, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":1699
 *         (PSI1[0])[0]=-1.0/b
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d
 *         (PSI1[0])[2]=(PHI2[0])[1]/d             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=(PHI2[0])[0]/b
 * 
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1699, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[2]) = __Pyx_c_quot_double(((__pyx_v_PHI2[0])[1]), __pyx_v_d);

    /* "Pythonreflectivity.pyx":1700
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d
 *         (PSI1[0])[2]=(PHI2[0])[1]/d
 *         (PSI1[0])[3]=(PHI2[0])[0]/b             # <<<<<<<<<<<<<<
 * 
 *         (PSI2[0])[0]=(PHI1[0])[3]/b
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1700, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[3]) = __Pyx_c_quot_double(((__pyx_v_PHI2[0])[0]), __pyx_v_b);

    /* "Pythonreflectivity.pyx":1702
 *         (PSI1[0])[3]=(PHI2[0])[0]/b
 * 
 *         (PSI2[0])[0]=(PHI1[0])[3]/b             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=(PHI1[0])[2]/d
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1702, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[0]) = __Pyx_c_quot_double(((__pyx_v_PHI1[0])[3]), __pyx_v_b);

    /* "Pythonreflectivity.pyx":1703
 * 
 *         (PSI2[0])[0]=(PHI1[0])[3]/b
 *         (PSI2[0])[1]=(PHI1[0])[2]/d             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d
 *         (PSI2[0])[3]=-1.0/b
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1703, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[1]) = __Pyx_c_quot_double(((__pyx_v_PHI1[0])[2]), __pyx_v_d);

    /* "Pythonreflectivity.pyx":1704
 *         (PSI2[0])[0]=(PHI1[0])[3]/b
 *         (PSI2[0])[1]=(PHI1[0])[2]/d
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=-1.0/b
 *     else:
 */
    __pyx_t_2 = __Pyx_c_neg_double(((__pyx_v_PHI1[0])[1]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1704, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":1705
 *         (PSI2[0])[1]=(PHI1[0])[2]/d
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d
 *         (PSI2[0])[3]=-1.0/b             # <<<<<<<<<<<<<<
 *     else:
 *         (PSI1[0])[0]=0.5
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(-1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1705, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[3]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":1693
 * cdef void PHI_to_PSI(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):
 *     cdef double complex b,d
 *     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *         b=2*((PHI1[0])[3]*(PHI2[0])[0]-1)
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":1707
 *         (PSI2[0])[3]=-1.0/b
 *     else:
 *         (PSI1[0])[0]=0.5             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 */
  /*else*/ {
    ((__pyx_v_PSI1[0])[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":1708
 *     else:
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_PHI1[0])[1])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1708, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot_double(__pyx_t_2, ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":1709
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 */
    ((__pyx_v_PSI1[0])[2]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1710
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 */
    ((__pyx_v_PSI1[0])[3]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1711
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_PHI2[0])[2])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1711, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot_double(__pyx_t_2, ((__pyx_v_PHI2[0])[2]));

    /* "Pythonreflectivity.pyx":1712
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0
 */
    ((__pyx_v_PSI2[0])[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":1713
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[0]=0
 * 
 */
    ((__pyx_v_PSI2[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1714
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_PSI2[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":1691
 * 
 * 
 * cdef void PHI_to_PSI(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.PHI_to_PSI", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1717
 * 
 * 
 * cdef void MagneticPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)
 */

static void __pyx_f_18Pythonreflectivity_MagneticPhi(__pyx_t_double_complex __pyx_v_epsxx, __pyx_t_double_complex __pyx_v_epsyy, __pyx_t_double_complex __pyx_v_epszz, __pyx_t_double_complex __pyx_v_epsg, __pyx_t_double_complex *__pyx_v_vz3, __pyx_t_double_complex *__pyx_v_vz4, __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], double __pyx_v_vy, double __pyx_v_vyvy) {
  __pyx_t_double_complex __pyx_v_D34;
  __pyx_t_double_complex __pyx_v_D21;
  __pyx_t_double_complex __pyx_v_D31;
  __pyx_t_double_complex __pyx_v_exzexz;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_root;
  __pyx_t_double_complex __pyx_t_1;
  double __pyx_t_2;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1719
 * cdef void MagneticPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)             # <<<<<<<<<<<<<<
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy+exzexz/epszz
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_epsg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1719, __pyx_L1_error)
  __pyx_v_exzexz = __pyx_t_1;

  /* "Pythonreflectivity.pyx":1720
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)
 *     D34=1.-vyvy/epszz             # <<<<<<<<<<<<<<
 *     D21=epsxx-vyvy+exzexz/epszz
 *     D31=-vy*epsg/epszz
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1720, __pyx_L1_error)
  }
  __pyx_v_D34 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot_double(__pyx_t_1, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":1721
 *     exzexz=cquadr(epsg)
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy+exzexz/epszz             # <<<<<<<<<<<<<<
 *     D31=-vy*epsg/epszz
 * 
 */
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1721, __pyx_L1_error)
  }
  __pyx_v_D21 = __Pyx_c_sum_double(__Pyx_c_diff_double(__pyx_v_epsxx, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0)), __Pyx_c_quot_double(__pyx_v_exzexz, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":1722
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy+exzexz/epszz
 *     D31=-vy*epsg/epszz             # <<<<<<<<<<<<<<
 * 
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)
 */
  __pyx_t_1 = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-__pyx_v_vy), 0), __pyx_v_epsg);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1722, __pyx_L1_error)
  }
  __pyx_v_D31 = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_epszz);

  /* "Pythonreflectivity.pyx":1724
 *     D31=-vy*epsg/epszz
 * 
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)             # <<<<<<<<<<<<<<
 *     d=epsyy*epsxx-vyvy*(epsxx*epsyy/epszz+epsyy)+(exzexz+quadr(vyvy))*epsyy/epszz
 *     root=sqrt(b*b-4*d)
 */
  __pyx_t_1 = __Pyx_c_neg_double(__pyx_v_exzexz);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1724, __pyx_L1_error)
  }
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1724, __pyx_L1_error)
  }
  __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_diff_double(__Pyx_c_diff_double(__Pyx_c_quot_double(__pyx_t_1, __pyx_v_epszz), __pyx_v_epsyy), __pyx_v_epsxx), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0), __Pyx_c_sum_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_quot_double(__pyx_v_epsyy, __pyx_v_epszz))));

  /* "Pythonreflectivity.pyx":1725
 * 
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)
 *     d=epsyy*epsxx-vyvy*(epsxx*epsyy/epszz+epsyy)+(exzexz+quadr(vyvy))*epsyy/epszz             # <<<<<<<<<<<<<<
 *     root=sqrt(b*b-4*d)
 * 
 */
  __pyx_t_1 = __Pyx_c_prod_double(__pyx_v_epsxx, __pyx_v_epsyy);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1725, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vyvy); if (unlikely(__pyx_t_2 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1725, __pyx_L1_error)
  __pyx_t_3 = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_exzexz, __pyx_t_double_complex_from_parts(__pyx_t_2, 0)), __pyx_v_epsyy);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1725, __pyx_L1_error)
  }
  __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_epsyy, __pyx_v_epsxx), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0), __Pyx_c_sum_double(__Pyx_c_quot_double(__pyx_t_1, __pyx_v_epszz), __pyx_v_epsyy))), __Pyx_c_quot_double(__pyx_t_3, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":1726
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)
 *     d=epsyy*epsxx-vyvy*(epsxx*epsyy/epszz+epsyy)+(exzexz+quadr(vyvy))*epsyy/epszz
 *     root=sqrt(b*b-4*d)             # <<<<<<<<<<<<<<
 * 
 *     vz3[0]=sqrt((-b-root)/2)
 */
  __pyx_v_root = sqrt(__Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_b, __pyx_v_b), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(4, 0), __pyx_v_d)));

  /* "Pythonreflectivity.pyx":1728
 *     root=sqrt(b*b-4*d)
 * 
 *     vz3[0]=sqrt((-b-root)/2)             # <<<<<<<<<<<<<<
 *     vz4[0]=sqrt((-b+root)/2)
 * 
 */
  __pyx_t_3 = __Pyx_c_diff_double(__Pyx_c_neg_double(__pyx_v_b), __pyx_v_root);
  __pyx_t_1 = __pyx_t_double_complex_from_parts(2, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_t_1))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1728, __pyx_L1_error)
  }
  (__pyx_v_vz3[0]) = sqrt(__Pyx_c_quot_double(__pyx_t_3, __pyx_t_1));

  /* "Pythonreflectivity.pyx":1729
 * 
 *     vz3[0]=sqrt((-b-root)/2)
 *     vz4[0]=sqrt((-b+root)/2)             # <<<<<<<<<<<<<<
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 */
  __pyx_t_1 = __Pyx_c_sum_double(__Pyx_c_neg_double(__pyx_v_b), __pyx_v_root);
  __pyx_t_3 = __pyx_t_double_complex_from_parts(2, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_t_3))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1729, __pyx_L1_error)
  }
  (__pyx_v_vz4[0]) = sqrt(__Pyx_c_quot_double(__pyx_t_1, __pyx_t_3));

  /* "Pythonreflectivity.pyx":1731
 *     vz4[0]=sqrt((-b+root)/2)
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31
 */
  ((__pyx_v_PHI1[0])[0]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1732
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]             # <<<<<<<<<<<<<<
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy
 */
  ((__pyx_v_PHI1[0])[1]) = (__pyx_v_vz3[0]);

  /* "Pythonreflectivity.pyx":1733
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31             # <<<<<<<<<<<<<<
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy
 * 
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_cquadr((__pyx_v_vz3[0])); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1733, __pyx_L1_error)
  __pyx_t_1 = __Pyx_c_neg_double(__Pyx_c_diff_double(__pyx_t_3, __pyx_v_D21));
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_D31))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1733, __pyx_L1_error)
  }
  ((__pyx_v_PHI1[0])[3]) = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_D31);

  /* "Pythonreflectivity.pyx":1734
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy             # <<<<<<<<<<<<<<
 * 
 *     (PHI2[0])[3]=1.
 */
  __pyx_t_1 = __Pyx_c_prod_double(((__pyx_v_PHI1[0])[3]), (__pyx_v_vz3[0]));
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epsyy))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1734, __pyx_L1_error)
  }
  ((__pyx_v_PHI1[0])[2]) = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":1736
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy
 * 
 *     (PHI2[0])[3]=1.             # <<<<<<<<<<<<<<
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31
 */
  ((__pyx_v_PHI2[0])[3]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1737
 * 
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy             # <<<<<<<<<<<<<<
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31
 *     (PHI2[0])[1]=(PHI2[0])[0]*vz4[0]
 */
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epsyy))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1737, __pyx_L1_error)
  }
  ((__pyx_v_PHI2[0])[2]) = __Pyx_c_quot_double((__pyx_v_vz4[0]), __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":1738
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31             # <<<<<<<<<<<<<<
 *     (PHI2[0])[1]=(PHI2[0])[0]*vz4[0]
 * 
 */
  __pyx_t_1 = __Pyx_c_diff_double(__Pyx_c_prod_double((__pyx_v_vz4[0]), ((__pyx_v_PHI2[0])[2])), __pyx_v_D34);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_D31))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1738, __pyx_L1_error)
  }
  ((__pyx_v_PHI2[0])[0]) = __Pyx_c_quot_double(__pyx_t_1, __pyx_v_D31);

  /* "Pythonreflectivity.pyx":1739
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31
 *     (PHI2[0])[1]=(PHI2[0])[0]*vz4[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_PHI2[0])[1]) = __Pyx_c_prod_double(((__pyx_v_PHI2[0])[0]), (__pyx_v_vz4[0]));

  /* "Pythonreflectivity.pyx":1717
 * 
 * 
 * cdef void MagneticPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.MagneticPhi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1742
 * 
 * 
 * cdef void NormalPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vyvy):             # <<<<<<<<<<<<<<
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)
 */

static void __pyx_f_18Pythonreflectivity_NormalPhi(__pyx_t_double_complex __pyx_v_epsxx, __pyx_t_double_complex __pyx_v_epsyy, __pyx_t_double_complex __pyx_v_epszz, __pyx_t_double_complex *__pyx_v_vz3, __pyx_t_double_complex *__pyx_v_vz4, __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], double __pyx_v_vyvy) {
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1744
 * cdef void NormalPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vyvy):
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)             # <<<<<<<<<<<<<<
 *     vz4[0]=CalculateVZpi(vyvy, epsyy, epszz)
 *  #   print "2"
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, __pyx_v_epsxx); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1744, __pyx_L1_error)
  (__pyx_v_vz3[0]) = __pyx_t_1;

  /* "Pythonreflectivity.pyx":1745
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)
 *     vz4[0]=CalculateVZpi(vyvy, epsyy, epszz)             # <<<<<<<<<<<<<<
 *  #   print "2"
 *     (PHI1[0])[0]=1. #Eigenvectors
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, __pyx_v_epsyy, __pyx_v_epszz); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1745, __pyx_L1_error)
  (__pyx_v_vz4[0]) = __pyx_t_1;

  /* "Pythonreflectivity.pyx":1747
 *     vz4[0]=CalculateVZpi(vyvy, epsyy, epszz)
 *  #   print "2"
 *     (PHI1[0])[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=0
 */
  ((__pyx_v_PHI1[0])[0]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1748
 *  #   print "2"
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]             # <<<<<<<<<<<<<<
 *     (PHI1[0])[2]=0
 *     (PHI1[0])[3]=0
 */
  ((__pyx_v_PHI1[0])[1]) = (__pyx_v_vz3[0]);

  /* "Pythonreflectivity.pyx":1749
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=0             # <<<<<<<<<<<<<<
 *     (PHI1[0])[3]=0
 *     (PHI2[0])[3]=1.
 */
  ((__pyx_v_PHI1[0])[2]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1750
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=0
 *     (PHI1[0])[3]=0             # <<<<<<<<<<<<<<
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy
 */
  ((__pyx_v_PHI1[0])[3]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1751
 *     (PHI1[0])[2]=0
 *     (PHI1[0])[3]=0
 *     (PHI2[0])[3]=1.             # <<<<<<<<<<<<<<
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=0
 */
  ((__pyx_v_PHI2[0])[3]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1752
 *     (PHI1[0])[3]=0
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy             # <<<<<<<<<<<<<<
 *     (PHI2[0])[0]=0
 *     (PHI2[0])[1]=0
 */
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epsyy))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1752, __pyx_L1_error)
  }
  ((__pyx_v_PHI2[0])[2]) = __Pyx_c_quot_double((__pyx_v_vz4[0]), __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":1753
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=0             # <<<<<<<<<<<<<<
 *     (PHI2[0])[1]=0
 * 
 */
  ((__pyx_v_PHI2[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1754
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=0
 *     (PHI2[0])[1]=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_PHI2[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1742
 * 
 * 
 * cdef void NormalPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vyvy):             # <<<<<<<<<<<<<<
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.NormalPhi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1757
 * 
 * 
 * cdef void Calculate_ANXBN(double complex (*A)[2][2], double complex (*B)[2][2], double complex (*X)[2][2], double N):             # <<<<<<<<<<<<<<
 *     cdef double expite;
 *     cdef int i,j;
 */

static void __pyx_f_18Pythonreflectivity_Calculate_ANXBN(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2], __pyx_t_double_complex (*__pyx_v_X)[2][2], double __pyx_v_N) {
  double __pyx_v_expite;
  int __pyx_v_i;
  int __pyx_v_j;
  __pyx_t_double_complex __pyx_v_resA[2][2];
  __pyx_t_double_complex __pyx_v_resB[2][2];
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1762
 *     cdef double complex  resA[2][2];
 *     cdef double complex  resB[2][2];
 *     expite=N;             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_expite = __pyx_v_N;

  /* "Pythonreflectivity.pyx":1765
 * 
 * 
 *     for i in range(2):             # <<<<<<<<<<<<<<
 *         for j in range(2):
 *             if(i==j):
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "Pythonreflectivity.pyx":1766
 * 
 *     for i in range(2):
 *         for j in range(2):             # <<<<<<<<<<<<<<
 *             if(i==j):
 *                 resA[i][j]=1;
 */
    for (__pyx_t_2 = 0; __pyx_t_2 < 2; __pyx_t_2+=1) {
      __pyx_v_j = __pyx_t_2;

      /* "Pythonreflectivity.pyx":1767
 *     for i in range(2):
 *         for j in range(2):
 *             if(i==j):             # <<<<<<<<<<<<<<
 *                 resA[i][j]=1;
 *                 resB[i][j]=1;
 */
      __pyx_t_3 = (__pyx_v_i == __pyx_v_j);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":1768
 *         for j in range(2):
 *             if(i==j):
 *                 resA[i][j]=1;             # <<<<<<<<<<<<<<
 *                 resB[i][j]=1;
 *             else:
 */
        ((__pyx_v_resA[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":1769
 *             if(i==j):
 *                 resA[i][j]=1;
 *                 resB[i][j]=1;             # <<<<<<<<<<<<<<
 *             else:
 *                 resA[i][j]=0;
 */
        ((__pyx_v_resB[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":1767
 *     for i in range(2):
 *         for j in range(2):
 *             if(i==j):             # <<<<<<<<<<<<<<
 *                 resA[i][j]=1;
 *                 resB[i][j]=1;
 */
        goto __pyx_L7;
      }

      /* "Pythonreflectivity.pyx":1771
 *                 resB[i][j]=1;
 *             else:
 *                 resA[i][j]=0;             # <<<<<<<<<<<<<<
 *                 resB[i][j]=0;
 * 
 */
      /*else*/ {
        ((__pyx_v_resA[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":1772
 *             else:
 *                 resA[i][j]=0;
 *                 resB[i][j]=0;             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_resB[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(0, 0);
      }
      __pyx_L7:;
    }
  }

  /* "Pythonreflectivity.pyx":1777
 * 
 * 
 *     while(expite):             # <<<<<<<<<<<<<<
 *         if (expite%2):
 *             Mult2x2_leftside(&resA, A);
 */
  while (1) {
    __pyx_t_3 = (__pyx_v_expite != 0);
    if (!__pyx_t_3) break;

    /* "Pythonreflectivity.pyx":1778
 * 
 *     while(expite):
 *         if (expite%2):             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&resA, A);
 *             Mult2x2_leftside(&resB, B);
 */
    __pyx_t_3 = (__Pyx_mod_double(__pyx_v_expite, 2.0) != 0);
    if (__pyx_t_3) {

      /* "Pythonreflectivity.pyx":1779
 *     while(expite):
 *         if (expite%2):
 *             Mult2x2_leftside(&resA, A);             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&resB, B);
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_resA), __pyx_v_A); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1779, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1780
 *         if (expite%2):
 *             Mult2x2_leftside(&resA, A);
 *             Mult2x2_leftside(&resB, B);             # <<<<<<<<<<<<<<
 * 
 *         expite = expite/2
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_resB), __pyx_v_B); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1780, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1778
 * 
 *     while(expite):
 *         if (expite%2):             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&resA, A);
 *             Mult2x2_leftside(&resB, B);
 */
    }

    /* "Pythonreflectivity.pyx":1782
 *             Mult2x2_leftside(&resB, B);
 * 
 *         expite = expite/2             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(A, A);
 *         Mult2x2_leftside(B, B);
 */
    __pyx_v_expite = (__pyx_v_expite / 2.0);

    /* "Pythonreflectivity.pyx":1783
 * 
 *         expite = expite/2
 *         Mult2x2_leftside(A, A);             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(B, B);
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_A, __pyx_v_A); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1783, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":1784
 *         expite = expite/2
 *         Mult2x2_leftside(A, A);
 *         Mult2x2_leftside(B, B);             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_B, __pyx_v_B); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1784, __pyx_L1_error)
  }

  /* "Pythonreflectivity.pyx":1787
 * 
 * 
 *     for i in range(2):             # <<<<<<<<<<<<<<
 *         for j in range(2):
 *             (A[0])[i][j]=resA[i][j];
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "Pythonreflectivity.pyx":1788
 * 
 *     for i in range(2):
 *         for j in range(2):             # <<<<<<<<<<<<<<
 *             (A[0])[i][j]=resA[i][j];
 *             (B[0])[i][j]=resB[i][j];
 */
    for (__pyx_t_2 = 0; __pyx_t_2 < 2; __pyx_t_2+=1) {
      __pyx_v_j = __pyx_t_2;

      /* "Pythonreflectivity.pyx":1789
 *     for i in range(2):
 *         for j in range(2):
 *             (A[0])[i][j]=resA[i][j];             # <<<<<<<<<<<<<<
 *             (B[0])[i][j]=resB[i][j];
 * 
 */
      (((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_j]) = ((__pyx_v_resA[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1790
 *         for j in range(2):
 *             (A[0])[i][j]=resA[i][j];
 *             (B[0])[i][j]=resB[i][j];             # <<<<<<<<<<<<<<
 * 
 * 
 */
      (((__pyx_v_B[0])[__pyx_v_i])[__pyx_v_j]) = ((__pyx_v_resB[__pyx_v_i])[__pyx_v_j]);
    }
  }

  /* "Pythonreflectivity.pyx":1793
 * 
 * 
 *     Mult2x2_leftside(X, B)             # <<<<<<<<<<<<<<
 *     Mult2x2_rightside(A, X)
 * 
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_X, __pyx_v_B); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1793, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":1794
 * 
 *     Mult2x2_leftside(X, B)
 *     Mult2x2_rightside(A, X)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_A, __pyx_v_X); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1794, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":1757
 * 
 * 
 * cdef void Calculate_ANXBN(double complex (*A)[2][2], double complex (*B)[2][2], double complex (*X)[2][2], double N):             # <<<<<<<<<<<<<<
 *     cdef double expite;
 *     cdef int i,j;
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Calculate_ANXBN", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1799
 * 
 * 
 * cdef void Calculate_Multilayer_equation(double complex  (*A)[2][2], double complex  (*B)[2][2], double complex (*X)[2][2], double complex  (*result)[2][2], double N):             # <<<<<<<<<<<<<<
 *     # This function calculates efficiently
 *     # X + AXB + A^2 X B^2 + ... + A^(N-1) X B^(N-1)
 */

static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2], __pyx_t_double_complex (*__pyx_v_X)[2][2], __pyx_t_double_complex (*__pyx_v_result)[2][2], double __pyx_v_N) {
  __pyx_t_double_complex __pyx_v_EliB[4];
  __pyx_t_double_complex __pyx_v_Mat[4][4];
  long __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":1809
 * 
 * 
 *     Mat[0][0]=1-(A[0])[0][0]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];
 */
  ((__pyx_v_Mat[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[0])));

  /* "Pythonreflectivity.pyx":1810
 * 
 *     Mat[0][0]=1-(A[0])[0][0]*(B[0])[0][0];
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];
 */
  ((__pyx_v_Mat[0])[1]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[0])[0])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1811
 *     Mat[0][0]=1-(A[0])[0][0]*(B[0])[0][0];
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];
 * 
 */
  ((__pyx_v_Mat[0])[2]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[0])[0]));

  /* "Pythonreflectivity.pyx":1812
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 * 
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[0])[3]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1814
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];
 * 
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[1])[0]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[0])[0])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1815
 * 
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];
 */
  ((__pyx_v_Mat[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1816
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];
 * 
 */
  ((__pyx_v_Mat[1])[2]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1817
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 * 
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];
 */
  ((__pyx_v_Mat[1])[3]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[1])[1]));

  /* "Pythonreflectivity.pyx":1819
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];
 * 
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];
 */
  ((__pyx_v_Mat[2])[0]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[0])[0]));

  /* "Pythonreflectivity.pyx":1820
 * 
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];
 */
  ((__pyx_v_Mat[2])[1]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1821
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];
 * 
 */
  ((__pyx_v_Mat[2])[2]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[0])[0])));

  /* "Pythonreflectivity.pyx":1822
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 * 
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[2])[3]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[1])[1])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1824
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];
 * 
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[3])[0]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1825
 * 
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];
 *     Mat[3][3]=1-(A[0])[1][1]*(B[0])[1][1];
 */
  ((__pyx_v_Mat[3])[1]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[1])[1]));

  /* "Pythonreflectivity.pyx":1826
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[3][3]=1-(A[0])[1][1]*(B[0])[1][1];
 * 
 */
  ((__pyx_v_Mat[3])[2]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_A[0])[1])[1])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1827
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];
 *     Mat[3][3]=1-(A[0])[1][1]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_Mat[3])[3]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1831
 * 
 * 
 *     EliB[0]=(X[0])[0][0];             # <<<<<<<<<<<<<<
 *     EliB[1]=(X[0])[0][1];
 *     EliB[2]=(X[0])[1][0];
 */
  (__pyx_v_EliB[0]) = (((__pyx_v_X[0])[0])[0]);

  /* "Pythonreflectivity.pyx":1832
 * 
 *     EliB[0]=(X[0])[0][0];
 *     EliB[1]=(X[0])[0][1];             # <<<<<<<<<<<<<<
 *     EliB[2]=(X[0])[1][0];
 *     EliB[3]=(X[0])[1][1];
 */
  (__pyx_v_EliB[1]) = (((__pyx_v_X[0])[0])[1]);

  /* "Pythonreflectivity.pyx":1833
 *     EliB[0]=(X[0])[0][0];
 *     EliB[1]=(X[0])[0][1];
 *     EliB[2]=(X[0])[1][0];             # <<<<<<<<<<<<<<
 *     EliB[3]=(X[0])[1][1];
 *     Calculate_ANXBN(A, B, X, N);
 */
  (__pyx_v_EliB[2]) = (((__pyx_v_X[0])[1])[0]);

  /* "Pythonreflectivity.pyx":1834
 *     EliB[1]=(X[0])[0][1];
 *     EliB[2]=(X[0])[1][0];
 *     EliB[3]=(X[0])[1][1];             # <<<<<<<<<<<<<<
 *     Calculate_ANXBN(A, B, X, N);
 * 
 */
  (__pyx_v_EliB[3]) = (((__pyx_v_X[0])[1])[1]);

  /* "Pythonreflectivity.pyx":1835
 *     EliB[2]=(X[0])[1][0];
 *     EliB[3]=(X[0])[1][1];
 *     Calculate_ANXBN(A, B, X, N);             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_18Pythonreflectivity_Calculate_ANXBN(__pyx_v_A, __pyx_v_B, __pyx_v_X, __pyx_v_N); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":1840
 * 
 * 
 *     EliB[0]-=(X[0])[0][0];             # <<<<<<<<<<<<<<
 *     EliB[1]-=(X[0])[0][1];
 *     EliB[2]-=(X[0])[1][0];
 */
  __pyx_t_1 = 0;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff_double((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[0])[0]));

  /* "Pythonreflectivity.pyx":1841
 * 
 *     EliB[0]-=(X[0])[0][0];
 *     EliB[1]-=(X[0])[0][1];             # <<<<<<<<<<<<<<
 *     EliB[2]-=(X[0])[1][0];
 *     EliB[3]-=(X[0])[1][1];
 */
  __pyx_t_1 = 1;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff_double((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1842
 *     EliB[0]-=(X[0])[0][0];
 *     EliB[1]-=(X[0])[0][1];
 *     EliB[2]-=(X[0])[1][0];             # <<<<<<<<<<<<<<
 *     EliB[3]-=(X[0])[1][1];
 *    # printf("EliB: \n");
 */
  __pyx_t_1 = 2;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff_double((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1843
 *     EliB[1]-=(X[0])[0][1];
 *     EliB[2]-=(X[0])[1][0];
 *     EliB[3]-=(X[0])[1][1];             # <<<<<<<<<<<<<<
 *    # printf("EliB: \n");
 * #    PrintComplex((*X)[0][0]);
 */
  __pyx_t_1 = 3;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff_double((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[1])[1]));

  /* "Pythonreflectivity.pyx":1849
 * #    PrintComplex((*X)[1][0]);
 * #    PrintComplex((*X)[1][1]);
 *     Elimination_4x4(&Mat, &EliB);             # <<<<<<<<<<<<<<
 *     (result[0])[0][0]=EliB[0];
 *     (result[0])[0][1]=EliB[1];
 */
  __pyx_f_18Pythonreflectivity_Elimination_4x4((&__pyx_v_Mat), (&__pyx_v_EliB)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1849, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":1850
 * #    PrintComplex((*X)[1][1]);
 *     Elimination_4x4(&Mat, &EliB);
 *     (result[0])[0][0]=EliB[0];             # <<<<<<<<<<<<<<
 *     (result[0])[0][1]=EliB[1];
 *     (result[0])[1][0]=EliB[2];
 */
  (((__pyx_v_result[0])[0])[0]) = (__pyx_v_EliB[0]);

  /* "Pythonreflectivity.pyx":1851
 *     Elimination_4x4(&Mat, &EliB);
 *     (result[0])[0][0]=EliB[0];
 *     (result[0])[0][1]=EliB[1];             # <<<<<<<<<<<<<<
 *     (result[0])[1][0]=EliB[2];
 *     (result[0])[1][1]=EliB[3];
 */
  (((__pyx_v_result[0])[0])[1]) = (__pyx_v_EliB[1]);

  /* "Pythonreflectivity.pyx":1852
 *     (result[0])[0][0]=EliB[0];
 *     (result[0])[0][1]=EliB[1];
 *     (result[0])[1][0]=EliB[2];             # <<<<<<<<<<<<<<
 *     (result[0])[1][1]=EliB[3];
 * 
 */
  (((__pyx_v_result[0])[1])[0]) = (__pyx_v_EliB[2]);

  /* "Pythonreflectivity.pyx":1853
 *     (result[0])[0][1]=EliB[1];
 *     (result[0])[1][0]=EliB[2];
 *     (result[0])[1][1]=EliB[3];             # <<<<<<<<<<<<<<
 * 
 * 
 */
  (((__pyx_v_result[0])[1])[1]) = (__pyx_v_EliB[3]);

  /* "Pythonreflectivity.pyx":1799
 * 
 * 
 * cdef void Calculate_Multilayer_equation(double complex  (*A)[2][2], double complex  (*B)[2][2], double complex (*X)[2][2], double complex  (*result)[2][2], double N):             # <<<<<<<<<<<<<<
 *     # This function calculates efficiently
 *     # X + AXB + A^2 X B^2 + ... + A^(N-1) X B^(N-1)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Calculate_Multilayer_equation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":1858
 * 
 * 
 * cdef void Paratt_magnetic_y(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  double __pyx_t_10;
  long __pyx_t_11;
  long __pyx_t_12;
  long __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_y", 1);

  /* "Pythonreflectivity.pyx":1861
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":1862
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1862, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1862, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":1861
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":1864
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1864, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":1865
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1867
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1868
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1868, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":1869
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1870
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1871
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":1872
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1873
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":1876
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":1898
 * 
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1899
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *   #  cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1903
 *   #  cdef double complex test=LR[MLCOMP[0][0]].ey
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":1904
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":1906
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1907
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==2): # magnetic
 * 
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":1908
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1910
 *         if(LR[Upper].magdir==2): # magnetic
 * 
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1910, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1912
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)             # <<<<<<<<<<<<<<
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 */
      __pyx_v_b = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(__Pyx_c_prod_double((__pyx_v_PHI1[3]), (__pyx_v_PHI2[0])), __pyx_t_double_complex_from_parts(1, 0)));

      /* "Pythonreflectivity.pyx":1913
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])             # <<<<<<<<<<<<<<
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 */
      __pyx_v_d = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(__Pyx_c_prod_double((__pyx_v_PHI1[2]), (__pyx_v_PHI2[1])), __Pyx_c_prod_double((__pyx_v_PHI1[1]), (__pyx_v_PHI2[2]))));

      /* "Pythonreflectivity.pyx":1915
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors             # <<<<<<<<<<<<<<
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1915, __pyx_L1_error)
      }
      (__pyx_v_PSI1[0]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_b);

      /* "Pythonreflectivity.pyx":1916
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d             # <<<<<<<<<<<<<<
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b
 */
      __pyx_t_8 = __Pyx_c_neg_double((__pyx_v_PHI2[2]));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1916, __pyx_L1_error)
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_d);

      /* "Pythonreflectivity.pyx":1917
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d             # <<<<<<<<<<<<<<
 *             PSI1[3]=PHI2[0]/b
 * 
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1917, __pyx_L1_error)
      }
      (__pyx_v_PSI1[2]) = __Pyx_c_quot_double((__pyx_v_PHI2[1]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":1918
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b             # <<<<<<<<<<<<<<
 * 
 *             PSI2[0]=PHI1[3]/b
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1918, __pyx_L1_error)
      }
      (__pyx_v_PSI1[3]) = __Pyx_c_quot_double((__pyx_v_PHI2[0]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":1920
 *             PSI1[3]=PHI2[0]/b
 * 
 *             PSI2[0]=PHI1[3]/b             # <<<<<<<<<<<<<<
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1920, __pyx_L1_error)
      }
      (__pyx_v_PSI2[0]) = __Pyx_c_quot_double((__pyx_v_PHI1[3]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":1921
 * 
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d             # <<<<<<<<<<<<<<
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1921, __pyx_L1_error)
      }
      (__pyx_v_PSI2[1]) = __Pyx_c_quot_double((__pyx_v_PHI1[2]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":1922
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d             # <<<<<<<<<<<<<<
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 */
      __pyx_t_8 = __Pyx_c_neg_double((__pyx_v_PHI1[1]));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1922, __pyx_L1_error)
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_d);

      /* "Pythonreflectivity.pyx":1923
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b             # <<<<<<<<<<<<<<
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1923, __pyx_L1_error)
      }
      (__pyx_v_PSI2[3]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_b);

      /* "Pythonreflectivity.pyx":1924
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1925
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1926
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1927
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1928
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1929
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1930
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1931
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1933
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1933, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1908
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      goto __pyx_L5;
    }

    /* "Pythonreflectivity.pyx":1936
 *         else: # Not magnetic
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1936, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1939
 * 
 * 
 *             PSI1[0]=0.5             # <<<<<<<<<<<<<<
 *             PSI1[1]=0.5/vz1
 *             PSI1[2]=0
 */
      (__pyx_v_PSI1[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":1940
 * 
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz1             # <<<<<<<<<<<<<<
 *             PSI1[2]=0
 *             PSI1[3]=0
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_vz1))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1940, __pyx_L1_error)
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_vz1);

      /* "Pythonreflectivity.pyx":1941
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz1
 *             PSI1[2]=0             # <<<<<<<<<<<<<<
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 */
      (__pyx_v_PSI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1942
 *             PSI1[1]=0.5/vz1
 *             PSI1[2]=0
 *             PSI1[3]=0             # <<<<<<<<<<<<<<
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 */
      (__pyx_v_PSI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1943
 *             PSI1[2]=0
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]             # <<<<<<<<<<<<<<
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero_double((__pyx_v_PHI2[2])))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1943, __pyx_L1_error)
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot_double(__pyx_t_8, (__pyx_v_PHI2[2]));

      /* "Pythonreflectivity.pyx":1944
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5             # <<<<<<<<<<<<<<
 *             PSI2[1]=0
 *             PSI2[0]=0
 */
      (__pyx_v_PSI2[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":1945
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 *             PSI2[1]=0             # <<<<<<<<<<<<<<
 *             PSI2[0]=0
 *         #Vacuum:
 */
      (__pyx_v_PSI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1946
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 *             PSI2[0]=0             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      (__pyx_v_PSI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1948
 *             PSI2[0]=0
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1949
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1950
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1951
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1952
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1953
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1954
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1955
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1956
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     else:
 *         Lower=MLCOMP[0][0]
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1956, __pyx_L1_error)
    }
    __pyx_L5:;

    /* "Pythonreflectivity.pyx":1906
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":1958
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 */
  /*else*/ {
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":1959
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":1960
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 2) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2));
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1961
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Lower]).magdir == 2);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1963
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1963, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1964
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":1961
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L7;
      }

      /* "Pythonreflectivity.pyx":1967
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1967, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1968
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":1969
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==2):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1969, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1971
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1973
 *             if(LR[Upper].magdir==2):
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1973, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1975
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":1971
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":1978
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1978, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":1980
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":1982
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":1983
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":1987
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime,1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1987, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":1960
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 */
      goto __pyx_L6;
    }

    /* "Pythonreflectivity.pyx":1995
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
    /*else*/ {
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1995, __pyx_L1_error)
      __pyx_v_vz1 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":1996
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1996, __pyx_L1_error)
      __pyx_v_vz2 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":1997
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1997, __pyx_L1_error)
      __pyx_v_vz3 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":1998
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1998, __pyx_L1_error)
      __pyx_v_vz4 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":1999
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2000
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2001
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2002
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2003
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2004
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero_double((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2004, __pyx_L1_error)
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":2005
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2006
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2008
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2009
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *          #   print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2014
 *          #   print k0, "1", LR[1].Thickness, vz3, vz4
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2014, __pyx_L1_error)
      }
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2014, __pyx_L1_error)
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2014, __pyx_L1_error)
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_3), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_t_10, 0))));

      /* "Pythonreflectivity.pyx":2015
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2016
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2017
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2017, __pyx_L1_error)
      }
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2017, __pyx_L1_error)
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2017, __pyx_L1_error)
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_10), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_t_3, 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":2021
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":2022
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":2024
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2026
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2027
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2029
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2029, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2031
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2032
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":2034
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2037
 *                   #  print "hallo"
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2037, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2038
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2038, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2039
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":2034
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
          goto __pyx_L13;
        }

        /* "Pythonreflectivity.pyx":2043
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2043, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2045
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2046
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2046, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":2045
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L14;
          }

          /* "Pythonreflectivity.pyx":2049
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2049, __pyx_L1_error)
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":2050
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;

        /* "Pythonreflectivity.pyx":2031
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
        goto __pyx_L12;
      }

      /* "Pythonreflectivity.pyx":2053
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
      /*else*/ {
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2054
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2055
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2056
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2057
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2058
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2059
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2060
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2061
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2062
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2062, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2061
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L15;
        }

        /* "Pythonreflectivity.pyx":2065
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2065, __pyx_L1_error)
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":2068
 * 
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2068, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2070
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2070, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2072
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2072, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2074
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2074, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2076
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":2077
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":2078
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":2079
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * #                Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":2098
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2099
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2100
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2098
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      }

      /* "Pythonreflectivity.pyx":2024
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
      goto __pyx_L11;
    }

    /* "Pythonreflectivity.pyx":2107
 *         else: #A Multilayer
 *           #  print "1"
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2107, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2109
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":2110
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(LR[Upper].magdir==2):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2111
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==2):
 *                 ML_is_diagonal=0
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2112
 *             vz1=vz3
 *             vz2=vz4
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2113
 *             vz2=vz4
 *             if(LR[Upper].magdir==2):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":2115
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2115, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2117
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 * 
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2117, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2118
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":2112
 *             vz1=vz3
 *             vz2=vz4
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
        goto __pyx_L17;
      }

      /* "Pythonreflectivity.pyx":2122
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2122, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2124
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2125
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2125, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2124
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L18;
        }

        /* "Pythonreflectivity.pyx":2128
 *                 else:
 *                #     print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *          #   print "3"
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2128, __pyx_L1_error)
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":2129
 *                #     print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *          #   print "3"
 * #            print "t BA"
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":2141
 * #            print p[0][0]
 * #            print p[1][1]
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)
 * #            print "r_ML_in_1 ", 0
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2141, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2142
 * #            print p[1][1]
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)             # <<<<<<<<<<<<<<
 * #            print "r_ML_in_1 ", 0
 * #            print r_ML_in_1[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2142, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2150
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2151
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             j=1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2153
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":2154
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2155
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        __pyx_t_11 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2155, __pyx_L1_error)
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_11, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":2156
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":2157
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":2158
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2158, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2161
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2163
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2163, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2164
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2166
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2166, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2167
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":2161
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L21;
        }

        /* "Pythonreflectivity.pyx":2170
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2170, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2172
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2173
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2173, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":2172
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L22;
          }

          /* "Pythonreflectivity.pyx":2176
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * #                if(j==1):
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2176, __pyx_L1_error)
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":2177
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * #                if(j==1):
 * #                    print "t CB"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":2186
 * #                print t[1][0]
 * #                print t[1][1]
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2186, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2188
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2188, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2190
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2190, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2192
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2192, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2195
 * 
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":2196
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":2197
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * #                print "r_ML_in_1 ", j
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":2198
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * #                print "r_ML_in_1 ", j
 * #                print r_ML_in_1[0][0]
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":2216
 *               #  print p[0][0]
 *             #    print p[1][1]
 *                 Mult2x2_leftside(&t_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2216, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2217
 *             #    print p[1][1]
 *                 Mult2x2_leftside(&t_ML_in_1, &p)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2217, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2219
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2219, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2220
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2220, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2223
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *            #     if(j==1):
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2224
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *            #     if(j==1):
 *             #        print "p C components"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2229
 *             #        print Upper, LR[Upper].Thickness, vz3, vz4
 * 
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":2233
 * 
 * 
 *             if(ML_is_diagonal):             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 */
      __pyx_t_1 = (__pyx_v_ML_is_diagonal != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2234
 * 
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 * #                print "diagonal"
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod_double(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2234, __pyx_L1_error)
        __pyx_t_9 = __Pyx_c_prod_double(((__pyx_v_r_ML_in_1[0])[0]), __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_t_8));
        __pyx_t_8 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 2234, __pyx_L1_error)
        }
        ((__pyx_v_r_ML_in_2[0])[0]) = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":2235
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])             # <<<<<<<<<<<<<<
 * #                print "diagonal"
 * #                print t_ML_in_1[0][0]
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod_double(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2235, __pyx_L1_error)
        __pyx_t_9 = __Pyx_c_prod_double(((__pyx_v_r_ML_in_1[1])[1]), __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_t_8));
        __pyx_t_8 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 2235, __pyx_L1_error)
        }
        ((__pyx_v_r_ML_in_2[1])[1]) = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":2241
 * #                print t_ML_back_1[0][0]
 * #                print t_ML_back_1[1][1]
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2241, __pyx_L1_error)
        ((__pyx_v_t_ML_in_1[0])[0]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":2242
 * #                print t_ML_back_1[1][1]
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2242, __pyx_L1_error)
        ((__pyx_v_t_ML_in_1[1])[1]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":2243
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 * 
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2243, __pyx_L1_error)
        ((__pyx_v_t_ML_back_1[0])[0]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":2244
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2244, __pyx_L1_error)
        ((__pyx_v_t_ML_back_1[1])[1]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":2233
 * 
 * 
 *             if(ML_is_diagonal):             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 */
        goto __pyx_L23;
      }

      /* "Pythonreflectivity.pyx":2248
 *             else:
 * 
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             ML_is_diagonal=1
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_in_1), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2248, __pyx_L1_error)
      }
      __pyx_L23:;

      /* "Pythonreflectivity.pyx":2250
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)
 * 
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":2254
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_1), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2254, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2255
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2255, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2259
 * 
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":2260
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":2261
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":2262
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":2265
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":2267
 *             j=1
 *          #   print "9"
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2268
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":2269
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":2270
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":2271
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2271, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2273
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2275
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2275, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2278
 * 
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2278, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2279
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":2273
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L26;
        }

        /* "Pythonreflectivity.pyx":2282
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2282, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2284
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2285
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2285, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":2284
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L27;
          }

          /* "Pythonreflectivity.pyx":2288
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *               #  print "11"
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2288, __pyx_L1_error)
          }
          __pyx_L27:;

          /* "Pythonreflectivity.pyx":2289
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":2291
 *                     previously_magnetic=0
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2291, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2292
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2292, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2293
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2293, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2294
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2294, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2295
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":2296
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":2297
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":2298
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":2301
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2302
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *             vz1=vz3
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2303
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":2304
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2305
 *                 j=j+1
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2306
 *             vz1=vz3
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
      __pyx_t_1 = (__pyx_v_i == (__pyx_v_NLAYERS - 1));
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2307
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2307, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2311
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2312
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2313
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2314
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2315
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2316
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2317
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2318
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2319
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2320
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2320, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2319
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L29;
        }

        /* "Pythonreflectivity.pyx":2322
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 *             else:
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2322, __pyx_L1_error)
        }
        __pyx_L29:;

        /* "Pythonreflectivity.pyx":2306
 *             vz1=vz3
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
        goto __pyx_L28;
      }

      /* "Pythonreflectivity.pyx":2325
 *               #  print "14"
 *             else:
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
      /*else*/ {
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":2326
 *             else:
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2326, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2328
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2330
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2330, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2332
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2332, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2333
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":2328
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L30;
        }

        /* "Pythonreflectivity.pyx":2336
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2336, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2338
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2339
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2339, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":2338
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L31;
          }

          /* "Pythonreflectivity.pyx":2342
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "16"
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2342, __pyx_L1_error)
          }
          __pyx_L31:;

          /* "Pythonreflectivity.pyx":2343
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "16"
 *          #   print "17"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L30:;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":2346
 *              #   print "16"
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2346, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2347
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2347, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2348
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2348, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2349
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2349, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2350
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":2351
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":2352
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":2353
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":2355
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *           #  print "18"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2356
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *           #  print "18"
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":2358
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *           #  print "18"
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1858
 * 
 * 
 * cdef void Paratt_magnetic_y(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_y", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":2361
 * 
 * 
 * cdef void Invert2x2(double complex (*M)[2][2]):             # <<<<<<<<<<<<<<
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]
 */

static void __pyx_f_18Pythonreflectivity_Invert2x2(__pyx_t_double_complex (*__pyx_v_M)[2][2]) {
  __pyx_t_double_complex __pyx_v_dconj;
  __pyx_t_double_complex __pyx_v_safe;
  __pyx_t_double_complex __pyx_t_1;
  double __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":2362
 * 
 * cdef void Invert2x2(double complex (*M)[2][2]):
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )             # <<<<<<<<<<<<<<
 *     cdef double complex safe=(M[0])[0][0]
 *     dconj=dconj/cabsquadr(dconj)
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cconj(__Pyx_c_diff_double(__Pyx_c_prod_double((((__pyx_v_M[0])[0])[0]), (((__pyx_v_M[0])[1])[1])), __Pyx_c_prod_double((((__pyx_v_M[0])[0])[1]), (((__pyx_v_M[0])[1])[0])))); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2362, __pyx_L1_error)
  __pyx_v_dconj = __pyx_t_1;

  /* "Pythonreflectivity.pyx":2363
 * cdef void Invert2x2(double complex (*M)[2][2]):
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]             # <<<<<<<<<<<<<<
 *     dconj=dconj/cabsquadr(dconj)
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 */
  __pyx_v_safe = (((__pyx_v_M[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2364
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]
 *     dconj=dconj/cabsquadr(dconj)             # <<<<<<<<<<<<<<
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 */
  __pyx_t_2 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_dconj); if (unlikely(__pyx_t_2 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2364, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_t_2, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_t_1))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 2364, __pyx_L1_error)
  }
  __pyx_v_dconj = __Pyx_c_quot_double(__pyx_v_dconj, __pyx_t_1);

  /* "Pythonreflectivity.pyx":2365
 *     cdef double complex safe=(M[0])[0][0]
 *     dconj=dconj/cabsquadr(dconj)
 *     (M[0])[0][0]=(M[0])[1][1]*dconj             # <<<<<<<<<<<<<<
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj
 */
  (((__pyx_v_M[0])[0])[0]) = __Pyx_c_prod_double((((__pyx_v_M[0])[1])[1]), __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2366
 *     dconj=dconj/cabsquadr(dconj)
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj             # <<<<<<<<<<<<<<
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj
 *     (M[0])[1][1]=safe*dconj
 */
  (((__pyx_v_M[0])[0])[1]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_M[0])[0])[1])), __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2367
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj             # <<<<<<<<<<<<<<
 *     (M[0])[1][1]=safe*dconj
 * 
 */
  (((__pyx_v_M[0])[1])[0]) = __Pyx_c_prod_double(__Pyx_c_neg_double((((__pyx_v_M[0])[1])[0])), __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2368
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj
 *     (M[0])[1][1]=safe*dconj             # <<<<<<<<<<<<<<
 * 
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):
 */
  (((__pyx_v_M[0])[1])[1]) = __Pyx_c_prod_double(__pyx_v_safe, __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2361
 * 
 * 
 * cdef void Invert2x2(double complex (*M)[2][2]):             # <<<<<<<<<<<<<<
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Invert2x2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":2370
 *     (M[0])[1][1]=safe*dconj
 * 
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]
 */

static void __pyx_f_18Pythonreflectivity_FillC0(__pyx_t_double_complex (*__pyx_v_C0)[2][2], __pyx_t_double_complex (*__pyx_v_rprime)[2][2], __pyx_t_double_complex (*__pyx_v_rtot)[2][2], __pyx_t_double_complex (*__pyx_v_p)[2][2]) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":2372
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]             # <<<<<<<<<<<<<<
 *     (C0[0])[0][1]=0
 *     (C0[0])[1][0]=0
 */
  (((__pyx_v_C0[0])[0])[0]) = (((__pyx_v_p[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2373
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]
 *     (C0[0])[0][1]=0             # <<<<<<<<<<<<<<
 *     (C0[0])[1][0]=0
 *     (C0[0])[1][1]=(p[0])[1][1]
 */
  (((__pyx_v_C0[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2374
 *     (C0[0])[0][0]=(p[0])[0][0]
 *     (C0[0])[0][1]=0
 *     (C0[0])[1][0]=0             # <<<<<<<<<<<<<<
 *     (C0[0])[1][1]=(p[0])[1][1]
 * 
 */
  (((__pyx_v_C0[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2375
 *     (C0[0])[0][1]=0
 *     (C0[0])[1][0]=0
 *     (C0[0])[1][1]=(p[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     Mult2x2_rightside(rtot, C0)
 */
  (((__pyx_v_C0[0])[1])[1]) = (((__pyx_v_p[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2377
 *     (C0[0])[1][1]=(p[0])[1][1]
 * 
 *     Mult2x2_rightside(rtot, C0)             # <<<<<<<<<<<<<<
 *     Mult2x2_rightside(p,C0)
 *     Mult2x2_rightside(rprime,C0)
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_rtot, __pyx_v_C0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2377, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":2378
 * 
 *     Mult2x2_rightside(rtot, C0)
 *     Mult2x2_rightside(p,C0)             # <<<<<<<<<<<<<<
 *     Mult2x2_rightside(rprime,C0)
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_p, __pyx_v_C0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2378, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":2379
 *     Mult2x2_rightside(rtot, C0)
 *     Mult2x2_rightside(p,C0)
 *     Mult2x2_rightside(rprime,C0)             # <<<<<<<<<<<<<<
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_rprime, __pyx_v_C0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2379, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":2380
 *     Mult2x2_rightside(p,C0)
 *     Mult2x2_rightside(rprime,C0)
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]             # <<<<<<<<<<<<<<
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 */
  (((__pyx_v_C0[0])[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), (((__pyx_v_C0[0])[0])[0]));

  /* "Pythonreflectivity.pyx":2381
 *     Mult2x2_rightside(rprime,C0)
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 *     (C0[0])[0][1]=-(C0[0])[0][1]             # <<<<<<<<<<<<<<
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]
 */
  (((__pyx_v_C0[0])[0])[1]) = __Pyx_c_neg_double((((__pyx_v_C0[0])[0])[1]));

  /* "Pythonreflectivity.pyx":2382
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 *     (C0[0])[1][0]=-(C0[0])[1][0]             # <<<<<<<<<<<<<<
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]
 *     Invert2x2(C0)
 */
  (((__pyx_v_C0[0])[1])[0]) = __Pyx_c_neg_double((((__pyx_v_C0[0])[1])[0]));

  /* "Pythonreflectivity.pyx":2383
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]             # <<<<<<<<<<<<<<
 *     Invert2x2(C0)
 * 
 */
  (((__pyx_v_C0[0])[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), (((__pyx_v_C0[0])[1])[1]));

  /* "Pythonreflectivity.pyx":2384
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]
 *     Invert2x2(C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_18Pythonreflectivity_Invert2x2(__pyx_v_C0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2384, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":2370
 *     (M[0])[1][1]=safe*dconj
 * 
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.FillC0", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":2387
 * 
 * 
 * cdef void Calculate_Multilayer_with_Matrices(double complex (*t_comp1_up)[2][2], double complex (*t_comp2_up)[2][2], double complex (*t_comp1_do)[2][2], double complex (*t_comp2_do)[2][2], double complex (*r_ML_in1)[2][2], double complex (*r_ML_in2)[2][2], double complex (*r_ML_ba1)[2][2], double complex (*r_ML_ba2)[2][2], double N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex MLfac1[2][2]
 */

static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices(__pyx_t_double_complex (*__pyx_v_t_comp1_up)[2][2], __pyx_t_double_complex (*__pyx_v_t_comp2_up)[2][2], __pyx_t_double_complex (*__pyx_v_t_comp1_do)[2][2], __pyx_t_double_complex (*__pyx_v_t_comp2_do)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_in1)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_in2)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_ba1)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_ba2)[2][2], double __pyx_v_N) {
  __pyx_t_double_complex __pyx_v_MLfac1[2][2];
  __pyx_t_double_complex __pyx_v_MLfac2[2][2];
  __pyx_t_double_complex __pyx_v_safe[2][2];
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":2393
 *     cdef double complex safe[2][2]
 * 
 *     if(N==0):             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[0][0]=0
 *         (r_ML_in2[0])[0][1]=0
 */
  __pyx_t_1 = (__pyx_v_N == 0.0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":2394
 * 
 *     if(N==0):
 *         (r_ML_in2[0])[0][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[0][1]=0
 *         (r_ML_in2[0])[1][0]=0
 */
    (((__pyx_v_r_ML_in2[0])[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2395
 *     if(N==0):
 *         (r_ML_in2[0])[0][0]=0
 *         (r_ML_in2[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[1][0]=0
 *         (r_ML_in2[0])[1][1]=0
 */
    (((__pyx_v_r_ML_in2[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2396
 *         (r_ML_in2[0])[0][0]=0
 *         (r_ML_in2[0])[0][1]=0
 *         (r_ML_in2[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[1][1]=0
 * 
 */
    (((__pyx_v_r_ML_in2[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2397
 *         (r_ML_in2[0])[0][1]=0
 *         (r_ML_in2[0])[1][0]=0
 *         (r_ML_in2[0])[1][1]=0             # <<<<<<<<<<<<<<
 * 
 *         (r_ML_ba2[0])[0][0]=0
 */
    (((__pyx_v_r_ML_in2[0])[1])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2399
 *         (r_ML_in2[0])[1][1]=0
 * 
 *         (r_ML_ba2[0])[0][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_ba2[0])[0][1]=0
 *         (r_ML_ba2[0])[1][0]=0
 */
    (((__pyx_v_r_ML_ba2[0])[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2400
 * 
 *         (r_ML_ba2[0])[0][0]=0
 *         (r_ML_ba2[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (r_ML_ba2[0])[1][0]=0
 *         (r_ML_ba2[0])[1][1]=0
 */
    (((__pyx_v_r_ML_ba2[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2401
 *         (r_ML_ba2[0])[0][0]=0
 *         (r_ML_ba2[0])[0][1]=0
 *         (r_ML_ba2[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_ba2[0])[1][1]=0
 * 
 */
    (((__pyx_v_r_ML_ba2[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2402
 *         (r_ML_ba2[0])[0][1]=0
 *         (r_ML_ba2[0])[1][0]=0
 *         (r_ML_ba2[0])[1][1]=0             # <<<<<<<<<<<<<<
 * 
 *         (t_comp2_up[0])[0][0]=1
 */
    (((__pyx_v_r_ML_ba2[0])[1])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2404
 *         (r_ML_ba2[0])[1][1]=0
 * 
 *         (t_comp2_up[0])[0][0]=1             # <<<<<<<<<<<<<<
 *         (t_comp2_up[0])[0][1]=0
 *         (t_comp2_up[0])[1][0]=0
 */
    (((__pyx_v_t_comp2_up[0])[0])[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2405
 * 
 *         (t_comp2_up[0])[0][0]=1
 *         (t_comp2_up[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_up[0])[1][0]=0
 *         (t_comp2_up[0])[1][1]=1
 */
    (((__pyx_v_t_comp2_up[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2406
 *         (t_comp2_up[0])[0][0]=1
 *         (t_comp2_up[0])[0][1]=0
 *         (t_comp2_up[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_up[0])[1][1]=1
 * 
 */
    (((__pyx_v_t_comp2_up[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2407
 *         (t_comp2_up[0])[0][1]=0
 *         (t_comp2_up[0])[1][0]=0
 *         (t_comp2_up[0])[1][1]=1             # <<<<<<<<<<<<<<
 * 
 *         (t_comp2_do[0])[0][0]=1
 */
    (((__pyx_v_t_comp2_up[0])[1])[1]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2409
 *         (t_comp2_up[0])[1][1]=1
 * 
 *         (t_comp2_do[0])[0][0]=1             # <<<<<<<<<<<<<<
 *         (t_comp2_do[0])[0][1]=0
 *         (t_comp2_do[0])[1][0]=0
 */
    (((__pyx_v_t_comp2_do[0])[0])[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2410
 * 
 *         (t_comp2_do[0])[0][0]=1
 *         (t_comp2_do[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_do[0])[1][0]=0
 *         (t_comp2_do[0])[1][1]=1
 */
    (((__pyx_v_t_comp2_do[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2411
 *         (t_comp2_do[0])[0][0]=1
 *         (t_comp2_do[0])[0][1]=0
 *         (t_comp2_do[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_do[0])[1][1]=1
 *         return
 */
    (((__pyx_v_t_comp2_do[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2412
 *         (t_comp2_do[0])[0][1]=0
 *         (t_comp2_do[0])[1][0]=0
 *         (t_comp2_do[0])[1][1]=1             # <<<<<<<<<<<<<<
 *         return
 * 
 */
    (((__pyx_v_t_comp2_do[0])[1])[1]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2413
 *         (t_comp2_do[0])[1][0]=0
 *         (t_comp2_do[0])[1][1]=1
 *         return             # <<<<<<<<<<<<<<
 * 
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]
 */
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":2393
 *     cdef double complex safe[2][2]
 * 
 *     if(N==0):             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[0][0]=0
 *         (r_ML_in2[0])[0][1]=0
 */
  }

  /* "Pythonreflectivity.pyx":2415
 *         return
 * 
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]             # <<<<<<<<<<<<<<
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]
 */
  (((__pyx_v_r_ML_in2[0])[0])[0]) = (((__pyx_v_r_ML_in1[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2416
 * 
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]             # <<<<<<<<<<<<<<
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]
 */
  (((__pyx_v_r_ML_in2[0])[0])[1]) = (((__pyx_v_r_ML_in1[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2417
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]             # <<<<<<<<<<<<<<
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]
 * 
 */
  (((__pyx_v_r_ML_in2[0])[1])[0]) = (((__pyx_v_r_ML_in1[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2418
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]
 */
  (((__pyx_v_r_ML_in2[0])[1])[1]) = (((__pyx_v_r_ML_in1[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2420
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]
 * 
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]
 */
  (((__pyx_v_r_ML_ba2[0])[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2421
 * 
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]
 */
  (((__pyx_v_r_ML_ba2[0])[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2422
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]
 * 
 */
  (((__pyx_v_r_ML_ba2[0])[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2423
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]
 */
  (((__pyx_v_r_ML_ba2[0])[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2425
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]
 * 
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]
 */
  (((__pyx_v_t_comp2_up[0])[0])[0]) = (((__pyx_v_t_comp1_up[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2426
 * 
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]             # <<<<<<<<<<<<<<
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]
 */
  (((__pyx_v_t_comp2_up[0])[0])[1]) = (((__pyx_v_t_comp1_up[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2427
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]
 * 
 */
  (((__pyx_v_t_comp2_up[0])[1])[0]) = (((__pyx_v_t_comp1_up[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2428
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]
 */
  (((__pyx_v_t_comp2_up[0])[1])[1]) = (((__pyx_v_t_comp1_up[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2430
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]
 * 
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]
 */
  (((__pyx_v_t_comp2_do[0])[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2431
 * 
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]
 */
  (((__pyx_v_t_comp2_do[0])[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2432
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]
 * 
 */
  (((__pyx_v_t_comp2_do[0])[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2433
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     N=N-1
 */
  (((__pyx_v_t_comp2_do[0])[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2435
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]
 * 
 *     N=N-1             # <<<<<<<<<<<<<<
 *   #  print N
 *     while(N):
 */
  __pyx_v_N = (__pyx_v_N - 1.0);

  /* "Pythonreflectivity.pyx":2437
 *     N=N-1
 *   #  print N
 *     while(N):             # <<<<<<<<<<<<<<
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_N != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":2438
 *   #  print N
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure             # <<<<<<<<<<<<<<
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 */
    __pyx_t_1 = (__Pyx_mod_double(__pyx_v_N, 2.0) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2440
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 */
      ((__pyx_v_MLfac1[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2441
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 */
      ((__pyx_v_MLfac1[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2442
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 */
      ((__pyx_v_MLfac1[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2443
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 */
      ((__pyx_v_MLfac1[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2444
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)             # <<<<<<<<<<<<<<
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 *             MLfac1[0][1]=-MLfac1[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in2, (&__pyx_v_MLfac1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2444, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2445
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 *             MLfac1[0][0]=1.-MLfac1[0][0]             # <<<<<<<<<<<<<<
 *             MLfac1[0][1]=-MLfac1[0][1]
 *             MLfac1[1][0]=-MLfac1[1][0]
 */
      ((__pyx_v_MLfac1[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[0])[0]));

      /* "Pythonreflectivity.pyx":2446
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 *             MLfac1[0][1]=-MLfac1[0][1]             # <<<<<<<<<<<<<<
 *             MLfac1[1][0]=-MLfac1[1][0]
 *             MLfac1[1][1]=1.-MLfac1[1][1]
 */
      ((__pyx_v_MLfac1[0])[1]) = __Pyx_c_neg_double(((__pyx_v_MLfac1[0])[1]));

      /* "Pythonreflectivity.pyx":2447
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 *             MLfac1[0][1]=-MLfac1[0][1]
 *             MLfac1[1][0]=-MLfac1[1][0]             # <<<<<<<<<<<<<<
 *             MLfac1[1][1]=1.-MLfac1[1][1]
 *             Invert2x2(&MLfac1)
 */
      ((__pyx_v_MLfac1[1])[0]) = __Pyx_c_neg_double(((__pyx_v_MLfac1[1])[0]));

      /* "Pythonreflectivity.pyx":2448
 *             MLfac1[0][1]=-MLfac1[0][1]
 *             MLfac1[1][0]=-MLfac1[1][0]
 *             MLfac1[1][1]=1.-MLfac1[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&MLfac1)
 * 
 */
      ((__pyx_v_MLfac1[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[1])[1]));

      /* "Pythonreflectivity.pyx":2449
 *             MLfac1[1][0]=-MLfac1[1][0]
 *             MLfac1[1][1]=1.-MLfac1[1][1]
 *             Invert2x2(&MLfac1)             # <<<<<<<<<<<<<<
 * 
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2449, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2451
 *             Invert2x2(&MLfac1)
 * 
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 */
      ((__pyx_v_MLfac2[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2452
 * 
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 */
      ((__pyx_v_MLfac2[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2453
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 */
      ((__pyx_v_MLfac2[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2454
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 */
      ((__pyx_v_MLfac2[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2455
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)             # <<<<<<<<<<<<<<
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 *             MLfac2[0][1]=-MLfac2[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_MLfac2), __pyx_v_r_ML_in2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2455, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2456
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 *             MLfac2[0][0]=1.-MLfac2[0][0]             # <<<<<<<<<<<<<<
 *             MLfac2[0][1]=-MLfac2[0][1]
 *             MLfac2[1][0]=-MLfac2[1][0]
 */
      ((__pyx_v_MLfac2[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[0])[0]));

      /* "Pythonreflectivity.pyx":2457
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 *             MLfac2[0][1]=-MLfac2[0][1]             # <<<<<<<<<<<<<<
 *             MLfac2[1][0]=-MLfac2[1][0]
 *             MLfac2[1][1]=1.-MLfac2[1][1]
 */
      ((__pyx_v_MLfac2[0])[1]) = __Pyx_c_neg_double(((__pyx_v_MLfac2[0])[1]));

      /* "Pythonreflectivity.pyx":2458
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 *             MLfac2[0][1]=-MLfac2[0][1]
 *             MLfac2[1][0]=-MLfac2[1][0]             # <<<<<<<<<<<<<<
 *             MLfac2[1][1]=1.-MLfac2[1][1]
 *             Invert2x2(&MLfac2)
 */
      ((__pyx_v_MLfac2[1])[0]) = __Pyx_c_neg_double(((__pyx_v_MLfac2[1])[0]));

      /* "Pythonreflectivity.pyx":2459
 *             MLfac2[0][1]=-MLfac2[0][1]
 *             MLfac2[1][0]=-MLfac2[1][0]
 *             MLfac2[1][1]=1.-MLfac2[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&MLfac2)
 * 
 */
      ((__pyx_v_MLfac2[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[1])[1]));

      /* "Pythonreflectivity.pyx":2460
 *             MLfac2[1][0]=-MLfac2[1][0]
 *             MLfac2[1][1]=1.-MLfac2[1][1]
 *             Invert2x2(&MLfac2)             # <<<<<<<<<<<<<<
 * 
 *            # rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2460, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2464
 *            # rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 * 
 *             safe[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *             safe[0][1]=(t_comp1_do[0])[0][1]
 *             safe[1][0]=(t_comp1_do[0])[1][0]
 */
      ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2465
 * 
 *             safe[0][0]=(t_comp1_do[0])[0][0]
 *             safe[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *             safe[1][0]=(t_comp1_do[0])[1][0]
 *             safe[1][1]=(t_comp1_do[0])[1][1]
 */
      ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2466
 *             safe[0][0]=(t_comp1_do[0])[0][0]
 *             safe[0][1]=(t_comp1_do[0])[0][1]
 *             safe[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *             safe[1][1]=(t_comp1_do[0])[1][1]
 * 
 */
      ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2467
 *             safe[0][1]=(t_comp1_do[0])[0][1]
 *             safe[1][0]=(t_comp1_do[0])[1][0]
 *             safe[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&MLfac2, &safe)
 */
      ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2469
 *             safe[1][1]=(t_comp1_do[0])[1][1]
 * 
 *             Mult2x2_rightside(&MLfac2, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(r_ML_in2, &safe)
 *             Mult2x2_rightside(t_comp1_up, &safe)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac2), (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2469, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2470
 * 
 *             Mult2x2_rightside(&MLfac2, &safe)
 *             Mult2x2_rightside(r_ML_in2, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(t_comp1_up, &safe)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in2, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2470, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2471
 *             Mult2x2_rightside(&MLfac2, &safe)
 *             Mult2x2_rightside(r_ML_in2, &safe)
 *             Mult2x2_rightside(t_comp1_up, &safe)             # <<<<<<<<<<<<<<
 * 
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_up, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2471, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2473
 *             Mult2x2_rightside(t_comp1_up, &safe)
 * 
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 */
      (((__pyx_v_r_ML_in2[0])[0])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[0])[0]), ((__pyx_v_safe[0])[0]));

      /* "Pythonreflectivity.pyx":2474
 * 
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *             (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 */
      (((__pyx_v_r_ML_in2[0])[0])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[0])[1]), ((__pyx_v_safe[0])[1]));

      /* "Pythonreflectivity.pyx":2475
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *             (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 * 
 */
      (((__pyx_v_r_ML_in2[0])[1])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[1])[0]), ((__pyx_v_safe[1])[0]));

      /* "Pythonreflectivity.pyx":2476
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *             (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 * 
 *           #  rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 */
      (((__pyx_v_r_ML_in2[0])[1])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[1])[1]), ((__pyx_v_safe[1])[1]));

      /* "Pythonreflectivity.pyx":2480
 *           #  rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 * 
 *             safe[0][0]=(t_comp2_up[0])[0][0]             # <<<<<<<<<<<<<<
 *             safe[0][1]=(t_comp2_up[0])[0][1]
 *             safe[1][0]=(t_comp2_up[0])[1][0]
 */
      ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp2_up[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2481
 * 
 *             safe[0][0]=(t_comp2_up[0])[0][0]
 *             safe[0][1]=(t_comp2_up[0])[0][1]             # <<<<<<<<<<<<<<
 *             safe[1][0]=(t_comp2_up[0])[1][0]
 *             safe[1][1]=(t_comp2_up[0])[1][1]
 */
      ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp2_up[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2482
 *             safe[0][0]=(t_comp2_up[0])[0][0]
 *             safe[0][1]=(t_comp2_up[0])[0][1]
 *             safe[1][0]=(t_comp2_up[0])[1][0]             # <<<<<<<<<<<<<<
 *             safe[1][1]=(t_comp2_up[0])[1][1]
 * 
 */
      ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp2_up[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2483
 *             safe[0][1]=(t_comp2_up[0])[0][1]
 *             safe[1][0]=(t_comp2_up[0])[1][0]
 *             safe[1][1]=(t_comp2_up[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&MLfac1, &safe)
 */
      ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp2_up[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2485
 *             safe[1][1]=(t_comp2_up[0])[1][1]
 * 
 *             Mult2x2_rightside(&MLfac1, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(r_ML_ba1, &safe)
 *             Mult2x2_rightside(t_comp2_do, &safe)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2485, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2486
 * 
 *             Mult2x2_rightside(&MLfac1, &safe)
 *             Mult2x2_rightside(r_ML_ba1, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(t_comp2_do, &safe)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_ba1, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2486, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2487
 *             Mult2x2_rightside(&MLfac1, &safe)
 *             Mult2x2_rightside(r_ML_ba1, &safe)
 *             Mult2x2_rightside(t_comp2_do, &safe)             # <<<<<<<<<<<<<<
 * 
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp2_do, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2487, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2489
 *             Mult2x2_rightside(t_comp2_do, &safe)
 * 
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]
 */
      (((__pyx_v_r_ML_ba2[0])[0])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba2[0])[0])[0]), ((__pyx_v_safe[0])[0]));

      /* "Pythonreflectivity.pyx":2490
 * 
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]
 *             (r_ML_ba2[0])[1][1]=(r_ML_ba2[0])[1][1]+safe[1][1]
 */
      (((__pyx_v_r_ML_ba2[0])[0])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba2[0])[0])[1]), ((__pyx_v_safe[0])[1]));

      /* "Pythonreflectivity.pyx":2491
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *             (r_ML_ba2[0])[1][1]=(r_ML_ba2[0])[1][1]+safe[1][1]
 * 
 */
      (((__pyx_v_r_ML_ba2[0])[1])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba2[0])[1])[0]), ((__pyx_v_safe[1])[0]));

      /* "Pythonreflectivity.pyx":2492
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]
 *             (r_ML_ba2[0])[1][1]=(r_ML_ba2[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 * 
 *           #  tres_up=t_comp1_up[0]*tres_up*MLfac
 */
      (((__pyx_v_r_ML_ba2[0])[1])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba2[0])[1])[1]), ((__pyx_v_safe[1])[1]));

      /* "Pythonreflectivity.pyx":2496
 *           #  tres_up=t_comp1_up[0]*tres_up*MLfac
 * 
 *             Mult2x2_rightside(&MLfac1, t_comp2_up)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(t_comp1_up, t_comp2_up)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), __pyx_v_t_comp2_up); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2496, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2497
 * 
 *             Mult2x2_rightside(&MLfac1, t_comp2_up)
 *             Mult2x2_rightside(t_comp1_up, t_comp2_up)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_up, __pyx_v_t_comp2_up); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2497, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2502
 *           #  tres_do=t_comp1_do[0]*tres_do*MLfac
 * 
 *             Mult2x2_leftside(t_comp2_do, &MLfac2)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(t_comp2_do, t_comp1_do)
 *         #endif
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp2_do, (&__pyx_v_MLfac2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2502, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2503
 * 
 *             Mult2x2_leftside(t_comp2_do, &MLfac2)
 *             Mult2x2_leftside(t_comp2_do, t_comp1_do)             # <<<<<<<<<<<<<<
 *         #endif
 *         N=N/2
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp2_do, __pyx_v_t_comp1_do); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2503, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2438
 *   #  print N
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure             # <<<<<<<<<<<<<<
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 */
    }

    /* "Pythonreflectivity.pyx":2505
 *             Mult2x2_leftside(t_comp2_do, t_comp1_do)
 *         #endif
 *         N=N/2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_N = (__pyx_v_N / 2.0);

    /* "Pythonreflectivity.pyx":2511
 *      #   MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])
 * 
 *         MLfac1[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 */
    ((__pyx_v_MLfac1[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2512
 * 
 *         MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 */
    ((__pyx_v_MLfac1[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2513
 *         MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 */
    ((__pyx_v_MLfac1[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2514
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 */
    ((__pyx_v_MLfac1[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2515
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)             # <<<<<<<<<<<<<<
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 *         MLfac1[0][1]=-MLfac1[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in1, (&__pyx_v_MLfac1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2515, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2516
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 *         MLfac1[0][0]=1.-MLfac1[0][0]             # <<<<<<<<<<<<<<
 *         MLfac1[0][1]=-MLfac1[0][1]
 *         MLfac1[1][0]=-MLfac1[1][0]
 */
    ((__pyx_v_MLfac1[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[0])[0]));

    /* "Pythonreflectivity.pyx":2517
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 *         MLfac1[0][1]=-MLfac1[0][1]             # <<<<<<<<<<<<<<
 *         MLfac1[1][0]=-MLfac1[1][0]
 *         MLfac1[1][1]=1.-MLfac1[1][1]
 */
    ((__pyx_v_MLfac1[0])[1]) = __Pyx_c_neg_double(((__pyx_v_MLfac1[0])[1]));

    /* "Pythonreflectivity.pyx":2518
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 *         MLfac1[0][1]=-MLfac1[0][1]
 *         MLfac1[1][0]=-MLfac1[1][0]             # <<<<<<<<<<<<<<
 *         MLfac1[1][1]=1.-MLfac1[1][1]
 *         Invert2x2(&MLfac1)
 */
    ((__pyx_v_MLfac1[1])[0]) = __Pyx_c_neg_double(((__pyx_v_MLfac1[1])[0]));

    /* "Pythonreflectivity.pyx":2519
 *         MLfac1[0][1]=-MLfac1[0][1]
 *         MLfac1[1][0]=-MLfac1[1][0]
 *         MLfac1[1][1]=1.-MLfac1[1][1]             # <<<<<<<<<<<<<<
 *         Invert2x2(&MLfac1)
 * 
 */
    ((__pyx_v_MLfac1[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[1])[1]));

    /* "Pythonreflectivity.pyx":2520
 *         MLfac1[1][0]=-MLfac1[1][0]
 *         MLfac1[1][1]=1.-MLfac1[1][1]
 *         Invert2x2(&MLfac1)             # <<<<<<<<<<<<<<
 * 
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 */
    __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2520, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2522
 *         Invert2x2(&MLfac1)
 * 
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 */
    ((__pyx_v_MLfac2[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2523
 * 
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 */
    ((__pyx_v_MLfac2[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2524
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 */
    ((__pyx_v_MLfac2[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2525
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 */
    ((__pyx_v_MLfac2[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2526
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)             # <<<<<<<<<<<<<<
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 *         MLfac2[0][1]=-MLfac2[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_MLfac2), __pyx_v_r_ML_in1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2526, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2527
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 *         MLfac2[0][0]=1.-MLfac2[0][0]             # <<<<<<<<<<<<<<
 *         MLfac2[0][1]=-MLfac2[0][1]
 *         MLfac2[1][0]=-MLfac2[1][0]
 */
    ((__pyx_v_MLfac2[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[0])[0]));

    /* "Pythonreflectivity.pyx":2528
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 *         MLfac2[0][1]=-MLfac2[0][1]             # <<<<<<<<<<<<<<
 *         MLfac2[1][0]=-MLfac2[1][0]
 *         MLfac2[1][1]=1.-MLfac2[1][1]
 */
    ((__pyx_v_MLfac2[0])[1]) = __Pyx_c_neg_double(((__pyx_v_MLfac2[0])[1]));

    /* "Pythonreflectivity.pyx":2529
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 *         MLfac2[0][1]=-MLfac2[0][1]
 *         MLfac2[1][0]=-MLfac2[1][0]             # <<<<<<<<<<<<<<
 *         MLfac2[1][1]=1.-MLfac2[1][1]
 *         Invert2x2(&MLfac2)
 */
    ((__pyx_v_MLfac2[1])[0]) = __Pyx_c_neg_double(((__pyx_v_MLfac2[1])[0]));

    /* "Pythonreflectivity.pyx":2530
 *         MLfac2[0][1]=-MLfac2[0][1]
 *         MLfac2[1][0]=-MLfac2[1][0]
 *         MLfac2[1][1]=1.-MLfac2[1][1]             # <<<<<<<<<<<<<<
 *         Invert2x2(&MLfac2)
 * 
 */
    ((__pyx_v_MLfac2[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[1])[1]));

    /* "Pythonreflectivity.pyx":2531
 *         MLfac2[1][0]=-MLfac2[1][0]
 *         MLfac2[1][1]=1.-MLfac2[1][1]
 *         Invert2x2(&MLfac2)             # <<<<<<<<<<<<<<
 * 
 *      #   r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 */
    __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2531, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2535
 *      #   r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2536
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2537
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *         Mult2x2_rightside(&MLfac2, &safe)
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2538
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_rightside(r_ML_in1, &safe)
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2539
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *         Mult2x2_rightside(&MLfac2, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(r_ML_in1, &safe)
 *         Mult2x2_rightside(t_comp1_up, &safe)
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac2), (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2539, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2540
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_rightside(r_ML_in1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(t_comp1_up, &safe)
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in1, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2540, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2541
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_rightside(r_ML_in1, &safe)
 *         Mult2x2_rightside(t_comp1_up, &safe)             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_up, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2541, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2542
 *         Mult2x2_rightside(r_ML_in1, &safe)
 *         Mult2x2_rightside(t_comp1_up, &safe)
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 */
    (((__pyx_v_r_ML_in1[0])[0])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[0])[0]), ((__pyx_v_safe[0])[0]));

    /* "Pythonreflectivity.pyx":2543
 *         Mult2x2_rightside(t_comp1_up, &safe)
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *         (r_ML_in1[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 */
    (((__pyx_v_r_ML_in1[0])[0])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[0])[1]), ((__pyx_v_safe[0])[1]));

    /* "Pythonreflectivity.pyx":2544
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 * 
 */
    (((__pyx_v_r_ML_in1[0])[1])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[1])[0]), ((__pyx_v_safe[1])[0]));

    /* "Pythonreflectivity.pyx":2545
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *         (r_ML_in1[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_r_ML_in1[0])[1])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_in1[0])[1])[1]), ((__pyx_v_safe[1])[1]));

    /* "Pythonreflectivity.pyx":2550
 *      #   r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_up[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2551
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_up[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2552
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 *         Mult2x2_rightside(&MLfac1, &safe)
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_up[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2553
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_up[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2554
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 *         Mult2x2_rightside(&MLfac1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 *         Mult2x2_rightside(t_comp1_do, &safe)
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2554, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2555
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_rightside(r_ML_ba1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(t_comp1_do, &safe)
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_ba1, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2555, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2556
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 *         Mult2x2_rightside(t_comp1_do, &safe)             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_do, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2556, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2557
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 *         Mult2x2_rightside(t_comp1_do, &safe)
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]
 */
    (((__pyx_v_r_ML_ba1[0])[0])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba1[0])[0])[0]), ((__pyx_v_safe[0])[0]));

    /* "Pythonreflectivity.pyx":2558
 *         Mult2x2_rightside(t_comp1_do, &safe)
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]
 *         (r_ML_ba1[0])[1][1]=(r_ML_ba1[0])[1][1]+safe[1][1]
 */
    (((__pyx_v_r_ML_ba1[0])[0])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba1[0])[0])[1]), ((__pyx_v_safe[0])[1]));

    /* "Pythonreflectivity.pyx":2559
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[1][1]=(r_ML_ba1[0])[1][1]+safe[1][1]
 *     #    t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 */
    (((__pyx_v_r_ML_ba1[0])[1])[0]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba1[0])[1])[0]), ((__pyx_v_safe[1])[0]));

    /* "Pythonreflectivity.pyx":2560
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]
 *         (r_ML_ba1[0])[1][1]=(r_ML_ba1[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 *     #    t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 * 
 */
    (((__pyx_v_r_ML_ba1[0])[1])[1]) = __Pyx_c_sum_double((((__pyx_v_r_ML_ba1[0])[1])[1]), ((__pyx_v_safe[1])[1]));

    /* "Pythonreflectivity.pyx":2563
 *     #    t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_up[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2564
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_up[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2565
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 * 
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_up[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2566
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *         Mult2x2_rightside(&MLfac1, &safe)
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_up[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2568
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 * 
 *         Mult2x2_rightside(&MLfac1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(t_comp1_up, &safe)
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2568, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2569
 * 
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_leftside(t_comp1_up, &safe)             # <<<<<<<<<<<<<<
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp1_up, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2569, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2571
 *         Mult2x2_leftside(t_comp1_up, &safe)
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2572
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2573
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *      #   t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2574
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 *      #   t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2577
 *      #   t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 *         Mult2x2_rightside(&MLfac2, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(t_comp1_do, &safe)
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac2), (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2577, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2578
 * 
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_leftside(t_comp1_do, &safe)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp1_do, (&__pyx_v_safe)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2578, __pyx_L1_error)
  }

  /* "Pythonreflectivity.pyx":2387
 * 
 * 
 * cdef void Calculate_Multilayer_with_Matrices(double complex (*t_comp1_up)[2][2], double complex (*t_comp2_up)[2][2], double complex (*t_comp1_do)[2][2], double complex (*t_comp2_do)[2][2], double complex (*r_ML_in1)[2][2], double complex (*r_ML_in2)[2][2], double complex (*r_ML_ba1)[2][2], double complex (*r_ML_ba2)[2][2], double N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex MLfac1[2][2]
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Calculate_Multilayer_with_Matrices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":2582
 * 
 * 
 * cdef void Paratt_magnetic_y_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  CYTHON_UNUSED int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_C0[2][2];
  __pyx_t_double_complex __pyx_v_C1[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  double __pyx_t_10;
  long __pyx_t_11;
  long __pyx_t_12;
  long __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_y_MS", 1);

  /* "Pythonreflectivity.pyx":2585
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":2586
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 2586, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":2585
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":2588
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 2588, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":2589
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":2591
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":2592
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2592, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":2593
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":2594
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":2595
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":2596
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":2597
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":2600
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":2625
 *     cdef double complex C1[2][2]
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2626
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2630
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":2631
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":2633
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":2634
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==2): # magnetic
 *           #  print "x"
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":2635
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 *           #  print "x"
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2637
 *         if(LR[Upper].magdir==2): # magnetic
 *           #  print "x"
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2637, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2639
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)             # <<<<<<<<<<<<<<
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 */
      __pyx_v_b = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(__Pyx_c_prod_double((__pyx_v_PHI1[3]), (__pyx_v_PHI2[0])), __pyx_t_double_complex_from_parts(1, 0)));

      /* "Pythonreflectivity.pyx":2640
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])             # <<<<<<<<<<<<<<
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 */
      __pyx_v_d = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(__Pyx_c_prod_double((__pyx_v_PHI1[2]), (__pyx_v_PHI2[1])), __Pyx_c_prod_double((__pyx_v_PHI1[1]), (__pyx_v_PHI2[2]))));

      /* "Pythonreflectivity.pyx":2642
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors             # <<<<<<<<<<<<<<
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2642, __pyx_L1_error)
      }
      (__pyx_v_PSI1[0]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_b);

      /* "Pythonreflectivity.pyx":2643
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d             # <<<<<<<<<<<<<<
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b
 */
      __pyx_t_8 = __Pyx_c_neg_double((__pyx_v_PHI2[2]));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2643, __pyx_L1_error)
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_d);

      /* "Pythonreflectivity.pyx":2644
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d             # <<<<<<<<<<<<<<
 *             PSI1[3]=PHI2[0]/b
 * 
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2644, __pyx_L1_error)
      }
      (__pyx_v_PSI1[2]) = __Pyx_c_quot_double((__pyx_v_PHI2[1]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":2645
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b             # <<<<<<<<<<<<<<
 * 
 *             PSI2[0]=PHI1[3]/b
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2645, __pyx_L1_error)
      }
      (__pyx_v_PSI1[3]) = __Pyx_c_quot_double((__pyx_v_PHI2[0]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":2647
 *             PSI1[3]=PHI2[0]/b
 * 
 *             PSI2[0]=PHI1[3]/b             # <<<<<<<<<<<<<<
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2647, __pyx_L1_error)
      }
      (__pyx_v_PSI2[0]) = __Pyx_c_quot_double((__pyx_v_PHI1[3]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":2648
 * 
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d             # <<<<<<<<<<<<<<
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 */
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2648, __pyx_L1_error)
      }
      (__pyx_v_PSI2[1]) = __Pyx_c_quot_double((__pyx_v_PHI1[2]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":2649
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d             # <<<<<<<<<<<<<<
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 */
      __pyx_t_8 = __Pyx_c_neg_double((__pyx_v_PHI1[1]));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2649, __pyx_L1_error)
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_d);

      /* "Pythonreflectivity.pyx":2650
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b             # <<<<<<<<<<<<<<
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2650, __pyx_L1_error)
      }
      (__pyx_v_PSI2[3]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_b);

      /* "Pythonreflectivity.pyx":2651
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2652
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2653
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2654
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2655
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2656
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2657
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2658
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2660
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 *        #     print "y"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz3, __pyx_v_vz4, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2660, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2635
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 *           #  print "x"
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      goto __pyx_L5;
    }

    /* "Pythonreflectivity.pyx":2663
 *         else: # Not magnetic
 *        #     print "y"
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             PSI1[0]=0.5
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2663, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2665
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *             PSI1[0]=0.5             # <<<<<<<<<<<<<<
 *             PSI1[1]=0.5/vz3
 *             PSI1[2]=0
 */
      (__pyx_v_PSI1[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":2666
 * 
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz3             # <<<<<<<<<<<<<<
 *             PSI1[2]=0
 *             PSI1[3]=0
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_v_vz3))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2666, __pyx_L1_error)
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot_double(__pyx_t_8, __pyx_v_vz3);

      /* "Pythonreflectivity.pyx":2667
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz3
 *             PSI1[2]=0             # <<<<<<<<<<<<<<
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 */
      (__pyx_v_PSI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2668
 *             PSI1[1]=0.5/vz3
 *             PSI1[2]=0
 *             PSI1[3]=0             # <<<<<<<<<<<<<<
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 */
      (__pyx_v_PSI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2669
 *             PSI1[2]=0
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]             # <<<<<<<<<<<<<<
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 */
      __pyx_t_8 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero_double((__pyx_v_PHI2[2])))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2669, __pyx_L1_error)
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot_double(__pyx_t_8, (__pyx_v_PHI2[2]));

      /* "Pythonreflectivity.pyx":2670
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5             # <<<<<<<<<<<<<<
 *             PSI2[1]=0
 *             PSI2[0]=0
 */
      (__pyx_v_PSI2[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":2671
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 *             PSI2[1]=0             # <<<<<<<<<<<<<<
 *             PSI2[0]=0
 *         #Vacuum:
 */
      (__pyx_v_PSI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2672
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 *             PSI2[0]=0             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      (__pyx_v_PSI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2674
 *             PSI2[0]=0
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2675
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2676
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2677
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2678
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2679
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2680
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2681
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2682
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     else:
 *         Lower=MLCOMP[0][0]
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz3, __pyx_v_vz4, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2682, __pyx_L1_error)
    }
    __pyx_L5:;

    /* "Pythonreflectivity.pyx":2633
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":2684
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 */
  /*else*/ {
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":2685
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":2686
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 2) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2));
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2687
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Lower]).magdir == 2);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2689
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2689, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2690
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":2687
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L7;
      }

      /* "Pythonreflectivity.pyx":2693
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2693, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2694
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":2695
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==2):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2695, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2697
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2699
 *             if(LR[Upper].magdir==2):
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2699, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2701
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":2697
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":2704
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2704, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2706
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":2708
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2709
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2713
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2713, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2686
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 */
      goto __pyx_L6;
    }

    /* "Pythonreflectivity.pyx":2721
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
    /*else*/ {
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2721, __pyx_L1_error)
      __pyx_v_vz1 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":2722
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2722, __pyx_L1_error)
      __pyx_v_vz2 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":2723
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2723, __pyx_L1_error)
      __pyx_v_vz3 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":2724
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2724, __pyx_L1_error)
      __pyx_v_vz4 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":2725
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2726
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2727
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2728
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2729
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2730
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero_double((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2730, __pyx_L1_error)
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":2731
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2732
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2734
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2735
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2737
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2737, __pyx_L1_error)
      }
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2737, __pyx_L1_error)
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2737, __pyx_L1_error)
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_3), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_t_10, 0))));

      /* "Pythonreflectivity.pyx":2738
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2739
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2740
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 2740, __pyx_L1_error)
      }
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2740, __pyx_L1_error)
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2740, __pyx_L1_error)
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_10), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_t_3, 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":2743
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":2744
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":2746
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2748
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2749
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2751
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2751, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2753
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2754
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":2756
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2759
 *                   #  print "hallo"
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2759, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2760
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2760, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2761
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":2756
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
          goto __pyx_L13;
        }

        /* "Pythonreflectivity.pyx":2765
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2765, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2767
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2768
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2768, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":2767
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L14;
          }

          /* "Pythonreflectivity.pyx":2771
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2771, __pyx_L1_error)
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":2772
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;

        /* "Pythonreflectivity.pyx":2753
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
        goto __pyx_L12;
      }

      /* "Pythonreflectivity.pyx":2775
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
      /*else*/ {
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2776
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2777
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2778
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2779
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2780
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2781
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2782
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2783
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2784
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2784, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2783
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L15;
        }

        /* "Pythonreflectivity.pyx":2787
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *             FillC0(&C0, &rprime, rtot, &p)
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2787, __pyx_L1_error)
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":2789
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&p, rtot)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2789, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2791
 *             FillC0(&C0, &rprime, rtot, &p)
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2791, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2793
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2793, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2795
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2795, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2797
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2797, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2800
 * 
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2800, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2802
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":2803
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":2804
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":2805
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":2808
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2809
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2810
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *         else:
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2808
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      }

      /* "Pythonreflectivity.pyx":2746
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
      goto __pyx_L11;
    }

    /* "Pythonreflectivity.pyx":2812
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2812, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2814
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":2815
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 * 
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2816
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==2):
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2818
 *             vz2=vz4
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2819
 * 
 *             if(LR[Upper].magdir==2):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":2821
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2821, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2823
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2823, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2825
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":2818
 *             vz2=vz4
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
        goto __pyx_L17;
      }

      /* "Pythonreflectivity.pyx":2829
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2829, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2831
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2832
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2832, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2831
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L18;
        }

        /* "Pythonreflectivity.pyx":2835
 *                 else:
 *                #     print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2835, __pyx_L1_error)
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":2837
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":2840
 * 
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2840, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2843
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2844
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2849
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":2850
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2851
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 */
        __pyx_t_11 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 2851, __pyx_L1_error)
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_11, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":2853
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":2854
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":2855
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2855, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2859
 *               #  Upper=MLCOMP[i][1]
 * 
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2861
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2861, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2862
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2864
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2864, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2865
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":2859
 *               #  Upper=MLCOMP[i][1]
 * 
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L21;
        }

        /* "Pythonreflectivity.pyx":2868
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2868, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2870
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2871
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2871, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":2870
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L22;
          }

          /* "Pythonreflectivity.pyx":2874
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "2", vz1, vz2, vz3, vz4
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2874, __pyx_L1_error)
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":2875
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "2", vz1, vz2, vz3, vz4
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":2877
 *                     previously_magnetic=0
 *              #   print "2", vz1, vz2, vz3, vz4
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), (&__pyx_v_r_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2877, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2878
 *              #   print "2", vz1, vz2, vz3, vz4
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C1), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2878, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2879
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2879, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2881
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2881, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2883
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2883, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2884
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2884, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2885
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2885, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2887
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":2888
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":2889
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":2890
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":2894
 * 
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2894, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2895
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2895, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2897
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2897, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2898
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2899
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 * 
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2900
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":2903
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)
 *          #   print "p C components"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz1));

      /* "Pythonreflectivity.pyx":2904
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)             # <<<<<<<<<<<<<<
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz2));

      /* "Pythonreflectivity.pyx":2907
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 */
      ((__pyx_v_r_ML_back_1[0])[0]) = ((__pyx_v_rprime[0])[0]);

      /* "Pythonreflectivity.pyx":2908
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 */
      ((__pyx_v_r_ML_back_1[1])[0]) = ((__pyx_v_rprime[1])[0]);

      /* "Pythonreflectivity.pyx":2909
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 */
      ((__pyx_v_r_ML_back_1[0])[1]) = ((__pyx_v_rprime[0])[1]);

      /* "Pythonreflectivity.pyx":2910
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 */
      ((__pyx_v_r_ML_back_1[1])[1]) = ((__pyx_v_rprime[1])[1]);

      /* "Pythonreflectivity.pyx":2911
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 */
      ((__pyx_v_t_ML_in_1[0])[0]) = ((__pyx_v_t[0])[0]);

      /* "Pythonreflectivity.pyx":2912
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 */
      ((__pyx_v_t_ML_in_1[0])[1]) = ((__pyx_v_t[0])[1]);

      /* "Pythonreflectivity.pyx":2913
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 */
      ((__pyx_v_t_ML_in_1[1])[0]) = ((__pyx_v_t[1])[0]);

      /* "Pythonreflectivity.pyx":2914
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 */
      ((__pyx_v_t_ML_in_1[1])[1]) = ((__pyx_v_t[1])[1]);

      /* "Pythonreflectivity.pyx":2915
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2915, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2917
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1);

      /* "Pythonreflectivity.pyx":2920
 * 
 * 
 *             while j>0:             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j > 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2921
 * 
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 vz3=vz1
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)]);

        /* "Pythonreflectivity.pyx":2922
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vz3=vz1
 *                 vz4=vz2
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":2923
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]
 *                 vz3=vz1             # <<<<<<<<<<<<<<
 *                 vz4=vz2
 * 
 */
        __pyx_v_vz3 = __pyx_v_vz1;

        /* "Pythonreflectivity.pyx":2924
 *                 Upper=MLCOMP[i][j]
 *                 vz3=vz1
 *                 vz4=vz2             # <<<<<<<<<<<<<<
 * 
 *                 if(LR[Lower].magdir==2):
 */
        __pyx_v_vz4 = __pyx_v_vz2;

        /* "Pythonreflectivity.pyx":2926
 *                 vz4=vz2
 * 
 *                 if(LR[Lower].magdir==2):             # <<<<<<<<<<<<<<
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Lower]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2927
 * 
 *                 if(LR[Lower].magdir==2):
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2927, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2928
 *                 if(LR[Lower].magdir==2):
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2929
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":2926
 *                 vz4=vz2
 * 
 *                 if(LR[Lower].magdir==2):             # <<<<<<<<<<<<<<
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 */
          goto __pyx_L25;
        }

        /* "Pythonreflectivity.pyx":2931
 *                     previously_magnetic=1
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2931, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2932
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L25:;

        /* "Pythonreflectivity.pyx":2935
 * 
 * 
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2935, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2938
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2940
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2940, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2941
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2943
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                   #  previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2943, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2938
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L26;
        }

        /* "Pythonreflectivity.pyx":2947
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2947, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":2949
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2950
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2950, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":2949
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 *                     else:
 */
            goto __pyx_L27;
          }

          /* "Pythonreflectivity.pyx":2953
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2953, __pyx_L1_error)
          }
          __pyx_L27:;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":2957
 * 
 * 
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_r), (&__pyx_v_r_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2957, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2959
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 */
        ((__pyx_v_C1[0])[0]) = ((__pyx_v_p[0])[0]);

        /* "Pythonreflectivity.pyx":2960
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0             # <<<<<<<<<<<<<<
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2961
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0
 *                 C1[0][1]=0             # <<<<<<<<<<<<<<
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 */
        ((__pyx_v_C1[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2962
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 */
        ((__pyx_v_C1[1])[1]) = ((__pyx_v_p[1])[1]);

        /* "Pythonreflectivity.pyx":2963
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2963, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2964
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2964, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2965
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)             # <<<<<<<<<<<<<<
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2965, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2966
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 */
        ((__pyx_v_C1[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[0])[0]));

        /* "Pythonreflectivity.pyx":2967
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]             # <<<<<<<<<<<<<<
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __Pyx_c_neg_double(((__pyx_v_C1[1])[0]));

        /* "Pythonreflectivity.pyx":2968
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]             # <<<<<<<<<<<<<<
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)
 */
        ((__pyx_v_C1[0])[1]) = __Pyx_c_neg_double(((__pyx_v_C1[0])[1]));

        /* "Pythonreflectivity.pyx":2969
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]             # <<<<<<<<<<<<<<
 *                 Invert2x2(&C1)
 * 
 */
        ((__pyx_v_C1[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[1])[1]));

        /* "Pythonreflectivity.pyx":2970
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2970, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2972
 *                 Invert2x2(&C1)
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2972, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2973
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2973, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2974
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2974, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2975
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2975, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2976
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_tprime)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2976, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2978
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[0])[0]));

        /* "Pythonreflectivity.pyx":2979
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[1])[0]));

        /* "Pythonreflectivity.pyx":2980
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[0])[1]));

        /* "Pythonreflectivity.pyx":2981
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[1])[1]));

        /* "Pythonreflectivity.pyx":2984
 * 
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2984, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2986
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2986, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2987
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz1));

        /* "Pythonreflectivity.pyx":2988
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &t_ML_in_1)
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz2));

        /* "Pythonreflectivity.pyx":2990
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 * 
 *                 Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 * 
 *                 j=j-1
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2990, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":2992
 *                 Mult2x2_rightside(&p, &t_ML_in_1)
 * 
 *                 j=j-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":2995
 * 
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&r_ML_back_1, &p)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2995, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2996
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)
 *             Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2996, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":2999
 * 
 * 
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_back_2), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_in_2), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2999, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3001
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":3004
 * 
 * 
 *             C0[0][0]=(rtot[0])[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 */
      ((__pyx_v_C0[0])[0]) = (((__pyx_v_rtot[0])[0])[0]);

      /* "Pythonreflectivity.pyx":3005
 * 
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 */
      ((__pyx_v_C0[0])[1]) = (((__pyx_v_rtot[0])[0])[1]);

      /* "Pythonreflectivity.pyx":3006
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 */
      ((__pyx_v_C0[1])[0]) = (((__pyx_v_rtot[0])[1])[0]);

      /* "Pythonreflectivity.pyx":3007
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 */
      ((__pyx_v_C0[1])[1]) = (((__pyx_v_rtot[0])[1])[1]);

      /* "Pythonreflectivity.pyx":3008
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)             # <<<<<<<<<<<<<<
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_r_ML_back_2), (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3008, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3009
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 */
      ((__pyx_v_C0[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[0])[0]));

      /* "Pythonreflectivity.pyx":3010
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 */
      ((__pyx_v_C0[0])[1]) = __Pyx_c_neg_double(((__pyx_v_C0[0])[1]));

      /* "Pythonreflectivity.pyx":3011
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)
 */
      ((__pyx_v_C0[1])[0]) = __Pyx_c_neg_double(((__pyx_v_C0[1])[0]));

      /* "Pythonreflectivity.pyx":3012
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&C0)
 * 
 */
      ((__pyx_v_C0[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[1])[1]));

      /* "Pythonreflectivity.pyx":3013
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3013, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3016
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_2), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3016, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3017
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3017, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3018
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3018, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3019
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":3020
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":3021
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":3022
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":3025
 * 
 * 
 *             Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==2):
 *               #  print "hallo"
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":3026
 * 
 *             Upper=MLCOMP[i][0]
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *               #  print "hallo"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3028
 *             if(LR[Upper].magdir==2):
 *               #  print "hallo"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *          #       Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3028, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3031
 * 
 *          #       Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *            #     print "Hallo"
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":3026
 * 
 *             Upper=MLCOMP[i][0]
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *               #  print "hallo"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L28;
      }

      /* "Pythonreflectivity.pyx":3034
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3034, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3036
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             j=1
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":3037
 * 
 *                 previously_magnetic=0
 *             j=1             # <<<<<<<<<<<<<<
 * 
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":3039
 *             j=1
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":3040
 * 
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":3041
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][j]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 * 
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3042
 *                 Upper=MLCOMP[i][j]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 * 
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3044
 *                 vz2=vz4
 * 
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3044, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3046
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3048
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3048, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3051
 * 
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3051, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3052
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":3046
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L31;
        }

        /* "Pythonreflectivity.pyx":3055
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3055, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3057
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3058
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3058, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":3057
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L32;
          }

          /* "Pythonreflectivity.pyx":3061
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *            #     print "4", vz1, vz2, vz3, vz4
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3061, __pyx_L1_error)
          }
          __pyx_L32:;

          /* "Pythonreflectivity.pyx":3062
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L31:;

        /* "Pythonreflectivity.pyx":3065
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3065, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3066
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3066, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3067
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3067, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3068
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3068, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3069
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3069, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3070
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3070, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3071
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":3072
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":3073
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":3074
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":3076
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3077
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *               #  print "12"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3078
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *               #  print "12"
 *             if(i==(NLAYERS-1)):
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":3080
 *                 j=j+1
 *               #  print "12"
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      __pyx_t_1 = (__pyx_v_i == (__pyx_v_NLAYERS - 1));
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3081
 *               #  print "12"
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3082
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3083
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3083, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3087
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3088
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3089
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3090
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3091
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3092
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3093
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3094
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3095
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3096
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3096, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3095
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L34;
        }

        /* "Pythonreflectivity.pyx":3098
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 * 
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3098, __pyx_L1_error)
        }
        __pyx_L34:;

        /* "Pythonreflectivity.pyx":3080
 *                 j=j+1
 *               #  print "12"
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        goto __pyx_L33;
      }

      /* "Pythonreflectivity.pyx":3102
 * 
 *             else:
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      /*else*/ {
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3103
 *             else:
 *                 Upper=MLCOMP[i+1][0]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3104
 *                 Upper=MLCOMP[i+1][0]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3105
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3105, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3107
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3109
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3109, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3111
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3111, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3112
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":3107
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L35;
        }

        /* "Pythonreflectivity.pyx":3115
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3115, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3117
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3118
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3118, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":3117
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L36;
          }

          /* "Pythonreflectivity.pyx":3121
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3121, __pyx_L1_error)
          }
          __pyx_L36:;

          /* "Pythonreflectivity.pyx":3122
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 *           #  print "5", vz1, vz2, vz3, vz4
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L35:;
      }
      __pyx_L33:;

      /* "Pythonreflectivity.pyx":3126
 *           #  print "5", vz1, vz2, vz3, vz4
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3126, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3127
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3127, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3128
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3128, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3129
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3129, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3130
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3130, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3131
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3131, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3132
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3133
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3134
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3135
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3138
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3139
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":3141
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":2582
 * 
 * 
 * cdef void Paratt_magnetic_y_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_y_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":3144
 * 
 * 
 * cdef  inline double complex rootfunc2(double complex D21, double complex b, double complex exyexy, double complex D34):             # <<<<<<<<<<<<<<
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_rootfunc2(__pyx_t_double_complex __pyx_v_D21, __pyx_t_double_complex __pyx_v_b, __pyx_t_double_complex __pyx_v_exyexy, __pyx_t_double_complex __pyx_v_D34) {
  __pyx_t_double_complex __pyx_r;
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":3145
 * 
 * cdef  inline double complex rootfunc2(double complex D21, double complex b, double complex exyexy, double complex D34):
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )             # <<<<<<<<<<<<<<
 * 
 * cdef void MagneticPhi_z(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0.5, 0), __Pyx_c_diff_double(__pyx_v_D21, __pyx_v_b))); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3145, __pyx_L1_error)
  __pyx_r = sqrt(__Pyx_c_diff_double(__pyx_t_1, __Pyx_c_prod_double(__pyx_v_exyexy, __pyx_v_D34)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":3144
 * 
 * 
 * cdef  inline double complex rootfunc2(double complex D21, double complex b, double complex exyexy, double complex D34):             # <<<<<<<<<<<<<<
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.rootfunc2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":3147
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 * cdef void MagneticPhi_z(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D23, exyexy, b, root
 * 
 */

static void __pyx_f_18Pythonreflectivity_MagneticPhi_z(__pyx_t_double_complex __pyx_v_epsxx, __pyx_t_double_complex __pyx_v_epsyy, __pyx_t_double_complex __pyx_v_epszz, __pyx_t_double_complex __pyx_v_epsg, __pyx_t_double_complex *__pyx_v_vz3, __pyx_t_double_complex *__pyx_v_vz4, __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], CYTHON_UNUSED double __pyx_v_vy, double __pyx_v_vyvy) {
  __pyx_t_double_complex __pyx_v_D34;
  __pyx_t_double_complex __pyx_v_D21;
  __pyx_t_double_complex __pyx_v_D23;
  __pyx_t_double_complex __pyx_v_exyexy;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_root;
  __pyx_t_double_complex __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":3150
 *     cdef double complex D34, D21, D23, exyexy, b, root
 * 
 *     D34=1.-vyvy/epszz             # <<<<<<<<<<<<<<
 *     D21=epsxx-vyvy
 *     D23=-epsg
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_epszz))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 3150, __pyx_L1_error)
  }
  __pyx_v_D34 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot_double(__pyx_t_1, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":3151
 * 
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy             # <<<<<<<<<<<<<<
 *     D23=-epsg
 *     exyexy=cquadr(epsg)
 */
  __pyx_v_D21 = __Pyx_c_diff_double(__pyx_v_epsxx, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0));

  /* "Pythonreflectivity.pyx":3152
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy
 *     D23=-epsg             # <<<<<<<<<<<<<<
 *     exyexy=cquadr(epsg)
 * 
 */
  __pyx_v_D23 = __Pyx_c_neg_double(__pyx_v_epsg);

  /* "Pythonreflectivity.pyx":3153
 *     D21=epsxx-vyvy
 *     D23=-epsg
 *     exyexy=cquadr(epsg)             # <<<<<<<<<<<<<<
 * 
 *     b=D34*epsyy
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_epsg); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3153, __pyx_L1_error)
  __pyx_v_exyexy = __pyx_t_1;

  /* "Pythonreflectivity.pyx":3155
 *     exyexy=cquadr(epsg)
 * 
 *     b=D34*epsyy             # <<<<<<<<<<<<<<
 *     root=rootfunc2(D21, b, exyexy, D34)
 * 
 */
  __pyx_v_b = __Pyx_c_prod_double(__pyx_v_D34, __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":3156
 * 
 *     b=D34*epsyy
 *     root=rootfunc2(D21, b, exyexy, D34)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_rootfunc2(__pyx_v_D21, __pyx_v_b, __pyx_v_exyexy, __pyx_v_D34); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3156, __pyx_L1_error)
  __pyx_v_root = __pyx_t_1;

  /* "Pythonreflectivity.pyx":3159
 * 
 * 
 *     vz3[0]=sqrt( 0.5*(D21+b)+root)             # <<<<<<<<<<<<<<
 *     vz4[0]=sqrt( 0.5*(D21+b)-root)
 * 
 */
  (__pyx_v_vz3[0]) = sqrt(__Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0.5, 0), __Pyx_c_sum_double(__pyx_v_D21, __pyx_v_b)), __pyx_v_root));

  /* "Pythonreflectivity.pyx":3160
 * 
 *     vz3[0]=sqrt( 0.5*(D21+b)+root)
 *     vz4[0]=sqrt( 0.5*(D21+b)-root)             # <<<<<<<<<<<<<<
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 */
  (__pyx_v_vz4[0]) = sqrt(__Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0.5, 0), __Pyx_c_sum_double(__pyx_v_D21, __pyx_v_b)), __pyx_v_root));

  /* "Pythonreflectivity.pyx":3162
 *     vz4[0]=sqrt( 0.5*(D21+b)-root)
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23
 */
  ((__pyx_v_PHI1[0])[0]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":3163
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]             # <<<<<<<<<<<<<<
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23
 * 
 */
  ((__pyx_v_PHI1[0])[1]) = (__pyx_v_vz3[0]);

  /* "Pythonreflectivity.pyx":3164
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23             # <<<<<<<<<<<<<<
 * 
 *     (PHI1[0])[3]=(PHI1[0])[2]*(vz3[0]/D34)
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr((__pyx_v_vz3[0])); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3164, __pyx_L1_error)
  __pyx_t_2 = __Pyx_c_diff_double(__pyx_t_1, __pyx_v_D21);
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_D23))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 3164, __pyx_L1_error)
  }
  ((__pyx_v_PHI1[0])[2]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_D23);

  /* "Pythonreflectivity.pyx":3166
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23
 * 
 *     (PHI1[0])[3]=(PHI1[0])[2]*(vz3[0]/D34)             # <<<<<<<<<<<<<<
 * 
 *     (PHI2[0])[3]=1.
 */
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_D34))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 3166, __pyx_L1_error)
  }
  ((__pyx_v_PHI1[0])[3]) = __Pyx_c_prod_double(((__pyx_v_PHI1[0])[2]), __Pyx_c_quot_double((__pyx_v_vz3[0]), __pyx_v_D34));

  /* "Pythonreflectivity.pyx":3168
 *     (PHI1[0])[3]=(PHI1[0])[2]*(vz3[0]/D34)
 * 
 *     (PHI2[0])[3]=1.             # <<<<<<<<<<<<<<
 *     (PHI2[0])[2]=D34/vz4[0]
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23
 */
  ((__pyx_v_PHI2[0])[3]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":3169
 * 
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=D34/vz4[0]             # <<<<<<<<<<<<<<
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23
 *     (PHI2[0])[1]=vz4[0]*(PHI2[0])[0]
 */
  if (unlikely(__Pyx_c_is_zero_double((__pyx_v_vz4[0])))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 3169, __pyx_L1_error)
  }
  ((__pyx_v_PHI2[0])[2]) = __Pyx_c_quot_double(__pyx_v_D34, (__pyx_v_vz4[0]));

  /* "Pythonreflectivity.pyx":3170
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=D34/vz4[0]
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23             # <<<<<<<<<<<<<<
 *     (PHI2[0])[1]=vz4[0]*(PHI2[0])[0]
 * 
 */
  __pyx_t_2 = __Pyx_c_neg_double(__Pyx_c_diff_double((__pyx_v_vz4[0]), __Pyx_c_prod_double(__pyx_v_epsyy, ((__pyx_v_PHI2[0])[2]))));
  if (unlikely(__Pyx_c_is_zero_double(__pyx_v_D23))) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 3170, __pyx_L1_error)
  }
  ((__pyx_v_PHI2[0])[0]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_D23);

  /* "Pythonreflectivity.pyx":3171
 *     (PHI2[0])[2]=D34/vz4[0]
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23
 *     (PHI2[0])[1]=vz4[0]*(PHI2[0])[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_PHI2[0])[1]) = __Pyx_c_prod_double((__pyx_v_vz4[0]), ((__pyx_v_PHI2[0])[0]));

  /* "Pythonreflectivity.pyx":3147
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 * cdef void MagneticPhi_z(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D23, exyexy, b, root
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.MagneticPhi_z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":3174
 * 
 * 
 * cdef void PHI_to_PSI_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

static void __pyx_f_18Pythonreflectivity_PHI_to_PSI_z(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], int __pyx_v_previously_magnetic) {
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":3176
 * cdef void PHI_to_PSI_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):
 *     cdef double complex b,d
 *     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *         b=2*((PHI2[0])[2]-(PHI2[0])[0]*(PHI1[0])[2])
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])
 */
  __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3177
 *     cdef double complex b,d
 *     if(previously_magnetic):
 *         b=2*((PHI2[0])[2]-(PHI2[0])[0]*(PHI1[0])[2])             # <<<<<<<<<<<<<<
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])
 * 
 */
    __pyx_v_b = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(((__pyx_v_PHI2[0])[2]), __Pyx_c_prod_double(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PHI1[0])[2]))));

    /* "Pythonreflectivity.pyx":3178
 *     if(previously_magnetic):
 *         b=2*((PHI2[0])[2]-(PHI2[0])[0]*(PHI1[0])[2])
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])             # <<<<<<<<<<<<<<
 * 
 *         (PSI1[0])[0]=(PHI2[0])[2]/b
 */
    __pyx_v_d = __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff_double(((__pyx_v_PHI1[0])[1]), __Pyx_c_prod_double(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PHI1[0])[3]))));

    /* "Pythonreflectivity.pyx":3180
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])
 * 
 *         (PSI1[0])[0]=(PHI2[0])[2]/b             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=1.0/d
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3180, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[0]) = __Pyx_c_quot_double(((__pyx_v_PHI2[0])[2]), __pyx_v_b);

    /* "Pythonreflectivity.pyx":3181
 * 
 *         (PSI1[0])[0]=(PHI2[0])[2]/b
 *         (PSI1[0])[1]=1.0/d             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3181, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":3182
 *         (PSI1[0])[0]=(PHI2[0])[2]/b
 *         (PSI1[0])[1]=1.0/d
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d
 * 
 */
    __pyx_t_2 = __Pyx_c_neg_double(((__pyx_v_PHI2[0])[0]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3182, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[2]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":3183
 *         (PSI1[0])[1]=1.0/d
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d             # <<<<<<<<<<<<<<
 * 
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b
 */
    __pyx_t_2 = __Pyx_c_neg_double(((__pyx_v_PHI2[0])[1]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3183, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[3]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":3185
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d
 * 
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d
 *         (PSI2[0])[2]=1.0/b
 */
    __pyx_t_2 = __Pyx_c_neg_double(((__pyx_v_PHI1[0])[2]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3185, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[0]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":3186
 * 
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=1.0/b
 *         (PSI2[0])[3]=(PHI1[0])[1]/d
 */
    __pyx_t_2 = __Pyx_c_neg_double(((__pyx_v_PHI1[0])[3]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3186, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[1]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":3187
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d
 *         (PSI2[0])[2]=1.0/b             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=(PHI1[0])[1]/d
 *     else:
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_b))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3187, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot_double(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":3188
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d
 *         (PSI2[0])[2]=1.0/b
 *         (PSI2[0])[3]=(PHI1[0])[1]/d             # <<<<<<<<<<<<<<
 *     else:
 *         (PSI1[0])[0]=0.5
 */
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_d))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3188, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[3]) = __Pyx_c_quot_double(((__pyx_v_PHI1[0])[1]), __pyx_v_d);

    /* "Pythonreflectivity.pyx":3176
 * cdef void PHI_to_PSI_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):
 *     cdef double complex b,d
 *     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *         b=2*((PHI2[0])[2]-(PHI2[0])[0]*(PHI1[0])[2])
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":3190
 *         (PSI2[0])[3]=(PHI1[0])[1]/d
 *     else:
 *         (PSI1[0])[0]=0.5             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 */
  /*else*/ {
    ((__pyx_v_PSI1[0])[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":3191
 *     else:
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_PHI1[0])[1])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3191, __pyx_L1_error)
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot_double(__pyx_t_2, ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":3192
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 */
    ((__pyx_v_PSI1[0])[2]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3193
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 */
    ((__pyx_v_PSI1[0])[3]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3194
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_PHI2[0])[2])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3194, __pyx_L1_error)
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot_double(__pyx_t_2, ((__pyx_v_PHI2[0])[2]));

    /* "Pythonreflectivity.pyx":3195
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0
 */
    ((__pyx_v_PSI2[0])[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":3196
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[0]=0
 * 
 */
    ((__pyx_v_PSI2[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3197
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0             # <<<<<<<<<<<<<<
 * 
 * cdef void Calculate_rt_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \
 */
    ((__pyx_v_PSI2[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":3174
 * 
 * 
 * cdef void PHI_to_PSI_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.PHI_to_PSI_z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":3199
 *         (PSI2[0])[0]=0
 * 
 * cdef void Calculate_rt_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

static void __pyx_f_18Pythonreflectivity_Calculate_rt_z(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], __pyx_t_double_complex (*__pyx_v_r)[2][2], __pyx_t_double_complex (*__pyx_v_rprime)[2][2], __pyx_t_double_complex (*__pyx_v_t)[2][2], __pyx_t_double_complex (*__pyx_v_tprime)[2][2], int __pyx_v_Magnetic, __pyx_t_double_complex __pyx_v_vz1, __pyx_t_double_complex __pyx_v_vz2, __pyx_t_double_complex __pyx_v_vz3, __pyx_t_double_complex __pyx_v_vz4, double __pyx_v_sigma, double __pyx_v_k0) {
  __pyx_t_double_complex __pyx_v_J[2][4];
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_div;
  double __pyx_v_roughfac;
  double __pyx_t_1;
  double __pyx_t_2;
  int __pyx_t_3;
  __pyx_t_double_complex __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "Pythonreflectivity.pyx":3204
 *     cdef double complex J[2][4]
 *     cdef double complex b,d, div;
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)             # <<<<<<<<<<<<<<
 *     if(Magnetic):
 * 
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_sigma); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3204, __pyx_L1_error)
  __pyx_t_2 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_2 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3204, __pyx_L1_error)
  __pyx_v_roughfac = ((-0.5 * __pyx_t_1) * __pyx_t_2);

  /* "Pythonreflectivity.pyx":3205
 *     cdef double complex b,d, div;
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 *     if(Magnetic):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = (__pyx_v_Magnetic != 0);
  if (__pyx_t_3) {

    /* "Pythonreflectivity.pyx":3210
 * 
 * 
 *         b=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI1[0])[2])), ((__pyx_v_PSI1[0])[0]));

    /* "Pythonreflectivity.pyx":3211
 * 
 *         b=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[0]
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI1[0])[3])), __Pyx_c_prod_double(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1])));

    /* "Pythonreflectivity.pyx":3212
 *         b=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[0]
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3212, __pyx_L1_error)
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3213
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3213, __pyx_L1_error)
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3217
 * 
 * 
 *         b=(PHI2[0])[1]*(PSI2[0])[1]+(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PSI2[0])[1])), ((__pyx_v_PSI2[0])[3]));

    /* "Pythonreflectivity.pyx":3218
 * 
 *         b=(PHI2[0])[1]*(PSI2[0])[1]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2])), __Pyx_c_prod_double(((__pyx_v_PSI2[0])[0]), ((__pyx_v_PHI2[0])[0])));

    /* "Pythonreflectivity.pyx":3219
 *         b=(PHI2[0])[1]*(PSI2[0])[1]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3219, __pyx_L1_error)
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3220
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3220, __pyx_L1_error)
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3223
 * 
 * 
 *         b=(PHI2[0])[1]*(PSI1[0])[1]+(PSI1[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PSI1[0])[1])), ((__pyx_v_PSI1[0])[3]));

    /* "Pythonreflectivity.pyx":3224
 * 
 *         b=(PHI2[0])[1]*(PSI1[0])[1]+(PSI1[0])[3]
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI1[0])[2])), __Pyx_c_prod_double(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PSI1[0])[0])));

    /* "Pythonreflectivity.pyx":3225
 *         b=(PHI2[0])[1]*(PSI1[0])[1]+(PSI1[0])[3]
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))             # <<<<<<<<<<<<<<
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3225, __pyx_L1_error)
    ((__pyx_v_J[0])[1]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3226
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))             # <<<<<<<<<<<<<<
 * 
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3226, __pyx_L1_error)
    ((__pyx_v_J[0])[3]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3228
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 */
    __pyx_v_b = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI2[0])[2])), ((__pyx_v_PSI2[0])[0]));

    /* "Pythonreflectivity.pyx":3229
 * 
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]             # <<<<<<<<<<<<<<
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 */
    __pyx_v_d = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI2[0])[3])), __Pyx_c_prod_double(((__pyx_v_PHI1[0])[1]), ((__pyx_v_PSI2[0])[1])));

    /* "Pythonreflectivity.pyx":3230
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))             # <<<<<<<<<<<<<<
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz2, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3230, __pyx_L1_error)
    ((__pyx_v_J[1])[0]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3231
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz2, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3231, __pyx_L1_error)
    ((__pyx_v_J[1])[2]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3234
 * 
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])             # <<<<<<<<<<<<<<
 * 
 * #        (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 */
    __pyx_v_div = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[0])), __Pyx_c_prod_double(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[0])));

    /* "Pythonreflectivity.pyx":3241
 * #        (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 */
    __pyx_t_4 = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[2])), __Pyx_c_prod_double(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[2])));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3241, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3242
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 */
    __pyx_t_4 = __Pyx_c_neg_double(__Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[3])), __Pyx_c_prod_double(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[3]))));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3242, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[0])[1]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3243
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 * 
 */
    __pyx_t_4 = __Pyx_c_neg_double(__Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[2])), __Pyx_c_prod_double(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[2]))));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3243, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[1])[0]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3244
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[3])), __Pyx_c_prod_double(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[3])));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3244, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3248
 * 
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3249
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[0])[1]));

    /* "Pythonreflectivity.pyx":3250
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[1])[0]));

    /* "Pythonreflectivity.pyx":3251
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum_double(__Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3253
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])             # <<<<<<<<<<<<<<
 * 
 * #        (tprime[0])[0][0]=-J[1][1]/div
 */
    __pyx_v_div = __Pyx_c_diff_double(__Pyx_c_prod_double(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[0])), __Pyx_c_prod_double(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[0])));

    /* "Pythonreflectivity.pyx":3259
 * #        (tprime[0])[1][0]=J[1][0]/div
 * #        (tprime[0])[1][1]=-J[0][0]/div
 *         (tprime[0])[0][0]=-J[1][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=-J[0][1]/div
 *         (tprime[0])[1][0]=-J[1][0]/div
 */
    __pyx_t_4 = __Pyx_c_neg_double(((__pyx_v_J[1])[1]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3259, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3260
 * #        (tprime[0])[1][1]=-J[0][0]/div
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=-J[0][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=-J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div
 */
    __pyx_t_4 = __Pyx_c_neg_double(((__pyx_v_J[0])[1]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3260, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[0])[1]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3261
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=-J[0][1]/div
 *         (tprime[0])[1][0]=-J[1][0]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 */
    __pyx_t_4 = __Pyx_c_neg_double(((__pyx_v_J[1])[0]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3261, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[1])[0]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3262
 *         (tprime[0])[0][1]=-J[0][1]/div
 *         (tprime[0])[1][0]=-J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div             # <<<<<<<<<<<<<<
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 */
    __pyx_t_4 = __Pyx_c_neg_double(((__pyx_v_J[0])[0]));
    if (unlikely(__Pyx_c_is_zero_double(__pyx_v_div))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3262, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_4, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3264
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":3265
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[1])));

    /* "Pythonreflectivity.pyx":3266
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":3267
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1])));

    /* "Pythonreflectivity.pyx":3205
 *     cdef double complex b,d, div;
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 *     if(Magnetic):             # <<<<<<<<<<<<<<
 * 
 * 
 */
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":3272
 *     else:
 * 
 *         b=(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 */
  /*else*/ {
    __pyx_v_b = ((__pyx_v_PSI1[0])[0]);

    /* "Pythonreflectivity.pyx":3273
 * 
 *         b=(PSI1[0])[0]
 *         d=(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_d = __Pyx_c_prod_double(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":3275
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3275, __pyx_L1_error)
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3276
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz1, __pyx_v_vz3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3276, __pyx_L1_error)
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3279
 * 
 * 
 *         b=(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = ((__pyx_v_PSI2[0])[3]);

    /* "Pythonreflectivity.pyx":3280
 * 
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_prod_double(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2]));

    /* "Pythonreflectivity.pyx":3281
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3281, __pyx_L1_error)
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod_double(__Pyx_c_sum_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3282
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum_double(__pyx_v_vz2, __pyx_v_vz4)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3282, __pyx_L1_error)
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod_double(__Pyx_c_diff_double(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_t_4)));

    /* "Pythonreflectivity.pyx":3285
 * 
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 */
    __pyx_t_4 = __Pyx_c_neg_double(((__pyx_v_J[0])[2]));
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[0])[0])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3285, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_4, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3286
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 */
    (((__pyx_v_r[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3287
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 * 
 */
    (((__pyx_v_r[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3288
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __Pyx_c_neg_double(((__pyx_v_J[1])[3]));
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[1])[1])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3288, __pyx_L1_error)
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_4, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3291
 * 
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3292
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3293
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3294
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum_double(__Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1])), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3296
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 */
    __pyx_t_4 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[0])[0])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3296, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot_double(__pyx_t_4, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3297
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 */
    (((__pyx_v_tprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3298
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 * 
 */
    (((__pyx_v_tprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3299
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero_double(((__pyx_v_J[1])[1])))) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 3299, __pyx_L1_error)
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot_double(__pyx_t_4, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3306
 * #        (rprime[0])[1][0]=0
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_prod_double(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0]));

    /* "Pythonreflectivity.pyx":3307
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3308
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3309
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_prod_double(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1]));
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":3199
 *         (PSI2[0])[0]=0
 * 
 * cdef void Calculate_rt_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Calculate_rt_z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
}

/* "Pythonreflectivity.pyx":3312
 * 
 * 
 * cdef void Paratt_magnetic_z(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  double __pyx_t_10;
  long __pyx_t_11;
  long __pyx_t_12;
  long __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_z", 1);

  /* "Pythonreflectivity.pyx":3315
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":3316
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 3316, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":3315
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":3318
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 3318, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":3319
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3321
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3322
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3322, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":3323
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":3324
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":3325
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":3326
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":3327
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":3330
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":3352
 * 
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3353
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *   #  cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3360
 * 
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":3361
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":3363
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3364
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3365
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3367
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3367, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3369
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3369, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3372
 * 
 * 
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3373
 * 
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3374
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3375
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3376
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3377
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3378
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3379
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3381
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3381, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3365
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      goto __pyx_L5;
    }

    /* "Pythonreflectivity.pyx":3384
 *         else: # Not magnetic
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3384, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3385
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3385, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3387
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3388
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3389
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3390
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3391
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3392
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3393
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3394
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     #    print vz1, vz2
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3395
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     #    print vz1, vz2
 *     else:
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3395, __pyx_L1_error)
    }
    __pyx_L5:;

    /* "Pythonreflectivity.pyx":3363
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":3398
 *     #    print vz1, vz2
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 */
  /*else*/ {
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3399
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":3400
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 3) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3));
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3401
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Lower]).magdir == 3);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3403
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3403, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3404
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":3401
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L7;
      }

      /* "Pythonreflectivity.pyx":3407
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3407, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3408
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":3409
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==3):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3409, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3411
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3413
 *             if(LR[Upper].magdir==3):
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3413, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3415
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":3411
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":3418
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3418, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3420
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":3422
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3423
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3427
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime,1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3427, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3400
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 */
      goto __pyx_L6;
    }

    /* "Pythonreflectivity.pyx":3435
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
    /*else*/ {
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3435, __pyx_L1_error)
      __pyx_v_vz1 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3436
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3436, __pyx_L1_error)
      __pyx_v_vz2 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3437
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3437, __pyx_L1_error)
      __pyx_v_vz3 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3438
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3438, __pyx_L1_error)
      __pyx_v_vz4 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3439
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3440
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3441
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3442
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3443
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3444
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero_double((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 3444, __pyx_L1_error)
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":3445
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3446
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3448
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3449
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *          #   print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3454
 *          #   print k0, "1", LR[1].Thickness, vz3, vz4
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 3454, __pyx_L1_error)
      }
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3454, __pyx_L1_error)
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3454, __pyx_L1_error)
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_3), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_t_10, 0))));

      /* "Pythonreflectivity.pyx":3455
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3456
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3457
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 3457, __pyx_L1_error)
      }
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3457, __pyx_L1_error)
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3457, __pyx_L1_error)
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_10), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_t_3, 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":3460
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":3461
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":3463
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3465
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3466
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3468
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3468, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3470
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3471
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3473
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3476
 *                   #  print "hallo"
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3476, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3477
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3477, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3478
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":3473
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
          goto __pyx_L13;
        }

        /* "Pythonreflectivity.pyx":3482
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3482, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3484
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3485
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3485, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":3484
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L14;
          }

          /* "Pythonreflectivity.pyx":3488
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3488, __pyx_L1_error)
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":3489
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;

        /* "Pythonreflectivity.pyx":3470
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
        goto __pyx_L12;
      }

      /* "Pythonreflectivity.pyx":3492
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
      /*else*/ {
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3493
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3494
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3495
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3496
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3497
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3498
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3499
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3500
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3501
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3501, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3500
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L15;
        }

        /* "Pythonreflectivity.pyx":3504
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3504, __pyx_L1_error)
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":3507
 * 
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3507, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3509
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3509, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3511
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3511, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3513
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3513, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3515
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3516
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3517
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3518
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3521
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3522
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3523
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3521
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      }

      /* "Pythonreflectivity.pyx":3463
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
      goto __pyx_L11;
    }

    /* "Pythonreflectivity.pyx":3531
 * 
 *           #  print "1"
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3531, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3533
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":3534
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(LR[Upper].magdir==3):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3535
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==3):
 *                 ML_is_diagonal=0
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3536
 *             vz1=vz3
 *             vz2=vz4
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3537
 *             vz2=vz4
 *             if(LR[Upper].magdir==3):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":3539
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3539, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3541
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 * 
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3541, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3542
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":3536
 *             vz1=vz3
 *             vz2=vz4
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
        goto __pyx_L17;
      }

      /* "Pythonreflectivity.pyx":3546
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3546, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3548
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3549
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3549, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3548
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L18;
        }

        /* "Pythonreflectivity.pyx":3552
 *                 else:
 *                #     print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 * 
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3552, __pyx_L1_error)
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":3553
 *                #     print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":3555
 *                 previously_magnetic=0
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3555, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3556
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3556, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3559
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3560
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             j=1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3562
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":3563
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":3564
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        __pyx_t_11 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 3564, __pyx_L1_error)
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_11, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":3565
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3566
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3567
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3567, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3570
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3572
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3572, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3573
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":3575
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3575, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3576
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":3570
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L21;
        }

        /* "Pythonreflectivity.pyx":3579
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3579, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3581
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3582
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3582, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":3581
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L22;
          }

          /* "Pythonreflectivity.pyx":3585
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3585, __pyx_L1_error)
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":3586
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":3588
 *                     previously_magnetic=0
 * 
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3588, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3590
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3590, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3592
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3592, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3594
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3594, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3597
 * 
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":3598
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":3599
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":3600
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &p)
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":3602
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3602, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3603
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &p)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3603, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3605
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3605, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3606
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3606, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3609
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *            #     if(j==1):
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3610
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *            #     if(j==1):
 *             #        print "p C components"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3615
 *             #        print Upper, LR[Upper].Thickness, vz3, vz4
 * 
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":3618
 * 
 * 
 *             if(ML_is_diagonal):             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 */
      __pyx_t_1 = (__pyx_v_ML_is_diagonal != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3619
 * 
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 * 
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod_double(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3619, __pyx_L1_error)
        __pyx_t_9 = __Pyx_c_prod_double(((__pyx_v_r_ML_in_1[0])[0]), __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_t_8));
        __pyx_t_8 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 3619, __pyx_L1_error)
        }
        ((__pyx_v_r_ML_in_2[0])[0]) = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":3620
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])             # <<<<<<<<<<<<<<
 * 
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod_double(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3620, __pyx_L1_error)
        __pyx_t_9 = __Pyx_c_prod_double(((__pyx_v_r_ML_in_1[1])[1]), __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __pyx_t_8));
        __pyx_t_8 = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod_double(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])));
        if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 3620, __pyx_L1_error)
        }
        ((__pyx_v_r_ML_in_2[1])[1]) = __Pyx_c_quot_double(__pyx_t_9, __pyx_t_8);

        /* "Pythonreflectivity.pyx":3622
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 * 
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3622, __pyx_L1_error)
        ((__pyx_v_t_ML_in_1[0])[0]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":3623
 * 
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3623, __pyx_L1_error)
        ((__pyx_v_t_ML_in_1[1])[1]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":3624
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 * 
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3624, __pyx_L1_error)
        ((__pyx_v_t_ML_back_1[0])[0]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":3625
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_t_8 = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3625, __pyx_L1_error)
        ((__pyx_v_t_ML_back_1[1])[1]) = __pyx_t_8;

        /* "Pythonreflectivity.pyx":3618
 * 
 * 
 *             if(ML_is_diagonal):             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 */
        goto __pyx_L23;
      }

      /* "Pythonreflectivity.pyx":3629
 *             else:
 * 
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             ML_is_diagonal=1
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_in_1), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3629, __pyx_L1_error)
      }
      __pyx_L23:;

      /* "Pythonreflectivity.pyx":3631
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)
 * 
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":3635
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_1), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3635, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3636
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3636, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3640
 * 
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":3641
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":3642
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":3643
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":3646
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":3648
 *             j=1
 *          #   print "9"
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":3649
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3650
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3651
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":3652
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3652, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3654
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3656
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3656, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3659
 * 
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3659, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3660
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":3654
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L26;
        }

        /* "Pythonreflectivity.pyx":3663
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3663, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3665
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3666
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3666, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":3665
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L27;
          }

          /* "Pythonreflectivity.pyx":3669
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *               #  print "11"
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3669, __pyx_L1_error)
          }
          __pyx_L27:;

          /* "Pythonreflectivity.pyx":3670
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":3672
 *                     previously_magnetic=0
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3672, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3673
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3673, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3674
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3674, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3675
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3675, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3676
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":3677
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":3678
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":3679
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":3682
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3683
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *             vz1=vz3
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3684
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":3685
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3686
 *                 j=j+1
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3687
 *             vz1=vz3
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
      __pyx_t_1 = (__pyx_v_i == (__pyx_v_NLAYERS - 1));
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3688
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3688, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3692
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3693
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3694
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3695
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3696
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3697
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3698
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3699
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3700
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3701
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3701, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3700
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L29;
        }

        /* "Pythonreflectivity.pyx":3703
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 *             else:
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3703, __pyx_L1_error)
        }
        __pyx_L29:;

        /* "Pythonreflectivity.pyx":3687
 *             vz1=vz3
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
        goto __pyx_L28;
      }

      /* "Pythonreflectivity.pyx":3706
 *               #  print "14"
 *             else:
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
      /*else*/ {
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3707
 *             else:
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3707, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3709
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3711
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3711, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3713
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3713, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3714
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":3709
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L30;
        }

        /* "Pythonreflectivity.pyx":3717
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3717, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3719
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3720
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3720, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":3719
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L31;
          }

          /* "Pythonreflectivity.pyx":3723
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "16"
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3723, __pyx_L1_error)
          }
          __pyx_L31:;

          /* "Pythonreflectivity.pyx":3724
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "16"
 *          #   print "17"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L30:;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":3727
 *              #   print "16"
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3727, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3728
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3728, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3729
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3729, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3730
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3730, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3731
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3732
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3733
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3734
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3737
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *          #   print "18"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3738
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *          #   print "18"
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":3740
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *          #   print "18"
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * cdef void Paratt_magnetic_z_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":3312
 * 
 * 
 * cdef void Paratt_magnetic_z(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":3742
 *         i=i+1
 * 
 * cdef void Paratt_magnetic_z_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  CYTHON_UNUSED int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_C0[2][2];
  __pyx_t_double_complex __pyx_v_C1[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  int __pyx_t_4;
  int *__pyx_t_5;
  int **__pyx_t_6;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  __pyx_t_double_complex __pyx_t_9;
  double __pyx_t_10;
  long __pyx_t_11;
  long __pyx_t_12;
  long __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_z_MS", 1);

  /* "Pythonreflectivity.pyx":3745
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = ((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0));
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":3746
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 3746, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":3745
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":3748
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 3748, __pyx_L1_error)
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":3749
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3751
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3752
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3752, __pyx_L1_error)
  __pyx_v_vyvy = __pyx_t_3;

  /* "Pythonreflectivity.pyx":3753
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_4;

  /* "Pythonreflectivity.pyx":3754
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_5;

  /* "Pythonreflectivity.pyx":3755
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_6 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_6;

  /* "Pythonreflectivity.pyx":3756
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":3757
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_7 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_7;

  /* "Pythonreflectivity.pyx":3760
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":3785
 *     cdef double complex C1[2][2]
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3786
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3790
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":3791
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":3793
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic
 */
  __pyx_t_1 = (__pyx_v_NLAYERS == 1);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3794
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3795
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3797
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3797, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3799
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3799, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3802
 * 
 * 
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3803
 * 
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3804
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3805
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3806
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3807
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3808
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3809
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3811
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3811, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3795
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      goto __pyx_L5;
    }

    /* "Pythonreflectivity.pyx":3814
 *         else: # Not magnetic
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3814, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3815
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3815, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3817
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3818
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3819
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3820
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3821
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3822
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3823
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3824
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     #    print vz1, vz2
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3825
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     #    print vz1, vz2
 *     else:
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3825, __pyx_L1_error)
    }
    __pyx_L5:;

    /* "Pythonreflectivity.pyx":3793
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic
 */
    goto __pyx_L4;
  }

  /* "Pythonreflectivity.pyx":3828
 *     #    print vz1, vz2
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 */
  /*else*/ {
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3829
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":3830
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 3) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3));
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3831
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Lower]).magdir == 3);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3833
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3833, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3834
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":3831
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L7;
      }

      /* "Pythonreflectivity.pyx":3837
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3837, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3838
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":3839
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==3):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3839, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3841
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3843
 *             if(LR[Upper].magdir==3):
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3843, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3845
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":3841
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":3848
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3848, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3850
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":3852
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3853
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3857
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3857, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3830
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 */
      goto __pyx_L6;
    }

    /* "Pythonreflectivity.pyx":3865
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
    /*else*/ {
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3865, __pyx_L1_error)
      __pyx_v_vz1 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3866
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3866, __pyx_L1_error)
      __pyx_v_vz2 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3867
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3867, __pyx_L1_error)
      __pyx_v_vz3 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3868
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_t_8 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3868, __pyx_L1_error)
      __pyx_v_vz4 = __pyx_t_8;

      /* "Pythonreflectivity.pyx":3869
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3870
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3871
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3872
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3873
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3874
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero_double((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 3874, __pyx_L1_error)
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":3875
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3876
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3878
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3879
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3881
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_8 = __Pyx_c_diff_double(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_9 = __Pyx_c_sum_double(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_9))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 3881, __pyx_L1_error)
      }
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3881, __pyx_L1_error)
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3881, __pyx_L1_error)
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_8, __pyx_t_9), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_3), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_t_10, 0))));

      /* "Pythonreflectivity.pyx":3882
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3883
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3884
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 *     i=1
 */
      __pyx_t_9 = __Pyx_c_diff_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_8 = __Pyx_c_sum_double(__Pyx_c_prod_double(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod_double(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero_double(__pyx_t_8))) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 3884, __pyx_L1_error)
      }
      __pyx_t_10 = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0); if (unlikely(__pyx_t_10 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3884, __pyx_L1_error)
      __pyx_t_3 = __pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness); if (unlikely(__pyx_t_3 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3884, __pyx_L1_error)
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod_double(__Pyx_c_quot_double(__pyx_t_9, __pyx_t_8), exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts((-2.0 * __pyx_t_10), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_t_3, 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":3886
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":3887
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_i < __pyx_v_NLAYERS);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":3889
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = ((__pyx_v_MLLENGTH[__pyx_v_i]) == 1);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3891
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3892
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3894
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3894, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3896
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3897
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3899
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3902
 *                   #  print "hallo"
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3902, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3903
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3903, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3904
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":3899
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
          goto __pyx_L13;
        }

        /* "Pythonreflectivity.pyx":3908
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3908, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3910
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3911
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3911, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":3910
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L14;
          }

          /* "Pythonreflectivity.pyx":3914
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3914, __pyx_L1_error)
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":3915
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;

        /* "Pythonreflectivity.pyx":3896
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
        goto __pyx_L12;
      }

      /* "Pythonreflectivity.pyx":3918
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
      /*else*/ {
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3919
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3920
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3921
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3922
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3923
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3924
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3925
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3926
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3927
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3927, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3926
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L15;
        }

        /* "Pythonreflectivity.pyx":3930
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *             FillC0(&C0, &rprime, rtot, &p)
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3930, __pyx_L1_error)
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":3932
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&p, rtot)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3932, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3934
 *             FillC0(&C0, &rprime, rtot, &p)
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3934, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3936
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3936, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3938
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3938, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3940
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3940, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3943
 * 
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3943, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3945
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3946
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3947
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * #            print "rtot ", i
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3948
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * #            print "rtot ", i
 * #            print (rtot[0])[0][0]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3956
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = (__pyx_v_i != __pyx_v_Cap);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3957
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3958
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *         else:
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3956
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      }

      /* "Pythonreflectivity.pyx":3889
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
      goto __pyx_L11;
    }

    /* "Pythonreflectivity.pyx":3960
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
    /*else*/ {
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3960, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3962
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":3963
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 * 
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3964
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==3):
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3966
 *             vz2=vz4
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3967
 * 
 *             if(LR[Upper].magdir==3):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":3969
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3969, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3971
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3971, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3973
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":3966
 *             vz2=vz4
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
        goto __pyx_L17;
      }

      /* "Pythonreflectivity.pyx":3977
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3977, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":3979
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3980
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3980, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":3979
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L18;
        }

        /* "Pythonreflectivity.pyx":3983
 *                 else:
 *                #     print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3983, __pyx_L1_error)
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":3985
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":3988
 * 
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 3988, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":3991
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3992
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * #            print "r_ML_in_1 0"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":4002
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":4003
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":4004
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 */
        __pyx_t_11 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          __PYX_ERR(0, 4004, __pyx_L1_error)
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_11, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":4006
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4007
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4008
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4008, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4012
 *               #  Upper=MLCOMP[i][1]
 * 
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4014
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4014, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4015
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":4017
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4017, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4018
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":4012
 *               #  Upper=MLCOMP[i][1]
 * 
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L21;
        }

        /* "Pythonreflectivity.pyx":4021
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4021, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4023
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4024
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4024, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4023
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L22;
          }

          /* "Pythonreflectivity.pyx":4027
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4027, __pyx_L1_error)
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":4028
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":4030
 *                     previously_magnetic=0
 * 
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), (&__pyx_v_r_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4030, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4031
 * 
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C1), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4031, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4032
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4032, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4034
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4034, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4036
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4036, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4037
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4037, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4038
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4038, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4040
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":4041
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":4042
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":4043
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_in_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":4047
 * 
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4047, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4048
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4048, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4050
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4050, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4051
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":4052
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *          #   print vz1, vz2, vz3, vz4
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":4053
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *          #   print vz1, vz2, vz3, vz4
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":4056
 *          #   print vz1, vz2, vz3, vz4
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)
 *          #   print "p C components"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz1));

      /* "Pythonreflectivity.pyx":4057
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)             # <<<<<<<<<<<<<<
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz2));

      /* "Pythonreflectivity.pyx":4060
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 */
      ((__pyx_v_r_ML_back_1[0])[0]) = ((__pyx_v_rprime[0])[0]);

      /* "Pythonreflectivity.pyx":4061
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 */
      ((__pyx_v_r_ML_back_1[1])[0]) = ((__pyx_v_rprime[1])[0]);

      /* "Pythonreflectivity.pyx":4062
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 */
      ((__pyx_v_r_ML_back_1[0])[1]) = ((__pyx_v_rprime[0])[1]);

      /* "Pythonreflectivity.pyx":4063
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 */
      ((__pyx_v_r_ML_back_1[1])[1]) = ((__pyx_v_rprime[1])[1]);

      /* "Pythonreflectivity.pyx":4064
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 */
      ((__pyx_v_t_ML_in_1[0])[0]) = ((__pyx_v_t[0])[0]);

      /* "Pythonreflectivity.pyx":4065
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 */
      ((__pyx_v_t_ML_in_1[0])[1]) = ((__pyx_v_t[0])[1]);

      /* "Pythonreflectivity.pyx":4066
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 */
      ((__pyx_v_t_ML_in_1[1])[0]) = ((__pyx_v_t[1])[0]);

      /* "Pythonreflectivity.pyx":4067
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 */
      ((__pyx_v_t_ML_in_1[1])[1]) = ((__pyx_v_t[1])[1]);

      /* "Pythonreflectivity.pyx":4068
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4068, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4070
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1             # <<<<<<<<<<<<<<
 * 
 *             while j>0:
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1);

      /* "Pythonreflectivity.pyx":4072
 *             j=MLLENGTH[i]-1
 * 
 *             while j>0:             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j > 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":4073
 * 
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 * 
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)]);

        /* "Pythonreflectivity.pyx":4074
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":4077
 * 
 * 
 *                 if(LR[Lower].magdir==3):             # <<<<<<<<<<<<<<
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Lower]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4078
 * 
 *                 if(LR[Lower].magdir==3):
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4078, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4079
 *                 if(LR[Lower].magdir==3):
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":4080
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":4077
 * 
 * 
 *                 if(LR[Lower].magdir==3):             # <<<<<<<<<<<<<<
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 */
          goto __pyx_L25;
        }

        /* "Pythonreflectivity.pyx":4082
 *                     previously_magnetic=1
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4082, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4083
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L25:;

        /* "Pythonreflectivity.pyx":4086
 * 
 * 
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4086, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4088
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4090
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4090, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4091
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":4093
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                   #  previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4093, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4088
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L26;
        }

        /* "Pythonreflectivity.pyx":4097
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4097, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4099
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4100
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4100, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4099
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 *                     else:
 */
            goto __pyx_L27;
          }

          /* "Pythonreflectivity.pyx":4103
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4103, __pyx_L1_error)
          }
          __pyx_L27:;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":4107
 * 
 * 
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_r), (&__pyx_v_r_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4107, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4109
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 */
        ((__pyx_v_C1[0])[0]) = ((__pyx_v_p[0])[0]);

        /* "Pythonreflectivity.pyx":4110
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0             # <<<<<<<<<<<<<<
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4111
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0
 *                 C1[0][1]=0             # <<<<<<<<<<<<<<
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 */
        ((__pyx_v_C1[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4112
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 */
        ((__pyx_v_C1[1])[1]) = ((__pyx_v_p[1])[1]);

        /* "Pythonreflectivity.pyx":4113
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4113, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4114
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4114, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4115
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)             # <<<<<<<<<<<<<<
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4115, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4116
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 */
        ((__pyx_v_C1[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[0])[0]));

        /* "Pythonreflectivity.pyx":4117
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]             # <<<<<<<<<<<<<<
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __Pyx_c_neg_double(((__pyx_v_C1[1])[0]));

        /* "Pythonreflectivity.pyx":4118
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]             # <<<<<<<<<<<<<<
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)
 */
        ((__pyx_v_C1[0])[1]) = __Pyx_c_neg_double(((__pyx_v_C1[0])[1]));

        /* "Pythonreflectivity.pyx":4119
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]             # <<<<<<<<<<<<<<
 *                 Invert2x2(&C1)
 * 
 */
        ((__pyx_v_C1[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[1])[1]));

        /* "Pythonreflectivity.pyx":4120
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4120, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4122
 *                 Invert2x2(&C1)
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4122, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4123
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4123, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4124
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4124, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4125
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4125, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4126
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_tprime)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4126, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4128
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[0])[0]));

        /* "Pythonreflectivity.pyx":4129
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[1])[0]));

        /* "Pythonreflectivity.pyx":4130
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[0])[1]));

        /* "Pythonreflectivity.pyx":4131
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_11 = 1;
        __pyx_t_12 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]) = __Pyx_c_sum_double(((__pyx_v_r_ML_back_1[__pyx_t_11])[__pyx_t_12]), ((__pyx_v_rprime[1])[1]));

        /* "Pythonreflectivity.pyx":4136
 * 
 *                # Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4136, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4138
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4138, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4139
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz1));

        /* "Pythonreflectivity.pyx":4140
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)             # <<<<<<<<<<<<<<
 * 
 * #                if(j==2):
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz2));

        /* "Pythonreflectivity.pyx":4149
 * #                print p[1][1]
 * 
 *                 Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 * 
 *                 j=j-1
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4149, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4151
 *                 Mult2x2_rightside(&p, &t_ML_in_1)
 * 
 *                 j=j-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":4154
 * 
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&r_ML_back_1, &p)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4154, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4155
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)
 *             Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4155, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4158
 * 
 * 
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_back_2), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_in_2), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4158, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4160
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":4163
 * 
 * 
 *             C0[0][0]=(rtot[0])[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 */
      ((__pyx_v_C0[0])[0]) = (((__pyx_v_rtot[0])[0])[0]);

      /* "Pythonreflectivity.pyx":4164
 * 
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 */
      ((__pyx_v_C0[0])[1]) = (((__pyx_v_rtot[0])[0])[1]);

      /* "Pythonreflectivity.pyx":4165
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 */
      ((__pyx_v_C0[1])[0]) = (((__pyx_v_rtot[0])[1])[0]);

      /* "Pythonreflectivity.pyx":4166
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 */
      ((__pyx_v_C0[1])[1]) = (((__pyx_v_rtot[0])[1])[1]);

      /* "Pythonreflectivity.pyx":4167
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)             # <<<<<<<<<<<<<<
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_r_ML_back_2), (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4167, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4168
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 */
      ((__pyx_v_C0[0])[0]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[0])[0]));

      /* "Pythonreflectivity.pyx":4169
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 */
      ((__pyx_v_C0[0])[1]) = __Pyx_c_neg_double(((__pyx_v_C0[0])[1]));

      /* "Pythonreflectivity.pyx":4170
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)
 */
      ((__pyx_v_C0[1])[0]) = __Pyx_c_neg_double(((__pyx_v_C0[1])[0]));

      /* "Pythonreflectivity.pyx":4171
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&C0)
 * 
 */
      ((__pyx_v_C0[1])[1]) = __Pyx_c_diff_double(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[1])[1]));

      /* "Pythonreflectivity.pyx":4172
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4172, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4175
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_2), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4175, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4176
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4176, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4177
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4177, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4178
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":4179
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":4180
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":4181
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":4185
 * 
 * 
 *             Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==3):
 *               #  print "hallo"
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":4186
 * 
 *             Upper=MLCOMP[i][0]
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *               #  print "hallo"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":4188
 *             if(LR[Upper].magdir==3):
 *               #  print "hallo"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4188, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4190
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *            #     print "Hallo"
 */
        __pyx_v_previously_magnetic = 1;

        /* "Pythonreflectivity.pyx":4186
 * 
 *             Upper=MLCOMP[i][0]
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *               #  print "hallo"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        goto __pyx_L28;
      }

      /* "Pythonreflectivity.pyx":4193
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
      /*else*/ {
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4193, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4195
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             j=1
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":4196
 * 
 *                 previously_magnetic=0
 *             j=1             # <<<<<<<<<<<<<<
 * 
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":4198
 *             j=1
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 * 
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = (__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i]));
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":4200
 *             while j<MLLENGTH[i]:
 * 
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4201
 * 
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4202
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":4203
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4203, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4205
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4207
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4207, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4210
 * 
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4210, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4211
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":4205
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L31;
        }

        /* "Pythonreflectivity.pyx":4214
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4214, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4216
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4217
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4217, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4216
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L32;
          }

          /* "Pythonreflectivity.pyx":4220
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *            #     print "4", vz1, vz2, vz3, vz4
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4220, __pyx_L1_error)
          }
          __pyx_L32:;

          /* "Pythonreflectivity.pyx":4221
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L31:;

        /* "Pythonreflectivity.pyx":4224
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4224, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4225
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4225, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4226
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4226, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4227
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4227, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4228
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4228, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4229
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4229, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4230
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":4231
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 0;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":4232
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":4233
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_t_11 = 0;
        __pyx_t_12 = 1;
        __pyx_t_13 = 1;
        (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":4235
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":4236
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *               #  print "12"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":4237
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *               #  print "12"
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":4240
 *               #  print "12"
 * 
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      __pyx_t_1 = (__pyx_v_i == (__pyx_v_NLAYERS - 1));
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":4241
 * 
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4242
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4243
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4243, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4247
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":4248
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":4249
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4250
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4251
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":4252
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":4253
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4254
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4255
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4256
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4256, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4255
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
          goto __pyx_L34;
        }

        /* "Pythonreflectivity.pyx":4258
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 * 
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4258, __pyx_L1_error)
        }
        __pyx_L34:;

        /* "Pythonreflectivity.pyx":4240
 *               #  print "12"
 * 
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        goto __pyx_L33;
      }

      /* "Pythonreflectivity.pyx":4262
 * 
 *             else:
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i+1][0]
 */
      /*else*/ {
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4263
 *             else:
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4264
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":4265
 *                 vz2=vz4
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4265, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4267
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4269
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4269, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4271
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4271, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4272
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;

          /* "Pythonreflectivity.pyx":4267
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
          goto __pyx_L35;
        }

        /* "Pythonreflectivity.pyx":4275
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
        /*else*/ {
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4275, __pyx_L1_error)

          /* "Pythonreflectivity.pyx":4277
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4278
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4278, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4277
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
            goto __pyx_L36;
          }

          /* "Pythonreflectivity.pyx":4281
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 */
          /*else*/ {
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4281, __pyx_L1_error)
          }
          __pyx_L36:;

          /* "Pythonreflectivity.pyx":4282
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 *           #  print "5", vz1, vz2, vz3, vz4
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L35:;
      }
      __pyx_L33:;

      /* "Pythonreflectivity.pyx":4286
 *           #  print "5", vz1, vz2, vz3, vz4
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4286, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4287
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4287, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4288
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4288, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4289
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4289, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4290
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4290, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4291
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4291, __pyx_L1_error)

      /* "Pythonreflectivity.pyx":4292
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":4293
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 0;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":4294
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":4295
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_11 = 0;
      __pyx_t_12 = 1;
      __pyx_t_13 = 1;
      (((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]) = __Pyx_c_sum_double((((__pyx_v_rtot[__pyx_t_11])[__pyx_t_12])[__pyx_t_13]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":4298
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":4299
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod_double(__Pyx_c_prod_double(__Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":4301
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":3742
 *         i=i+1
 * 
 * cdef void Paratt_magnetic_z_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_z_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":4308
 * 
 * 
 * cdef int FindLayerNumber(string, MaxLayer):             # <<<<<<<<<<<<<<
 * 
 *     if(string=="default"):
 */

static int __pyx_f_18Pythonreflectivity_FindLayerNumber(PyObject *__pyx_v_string, PyObject *__pyx_v_MaxLayer) {
  PyObject *__pyx_v_a = NULL;
  Py_ssize_t __pyx_v_N;
  PyObject *__pyx_v_j = NULL;
  int __pyx_v_IsInBracket;
  Py_ssize_t __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  unsigned int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FindLayerNumber", 1);

  /* "Pythonreflectivity.pyx":4310
 * cdef int FindLayerNumber(string, MaxLayer):
 * 
 *     if(string=="default"):             # <<<<<<<<<<<<<<
 *         return MaxLayer
 * 
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_string, __pyx_n_s_default, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 4310, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":4311
 * 
 *     if(string=="default"):
 *         return MaxLayer             # <<<<<<<<<<<<<<
 * 
 *     a=string.split(",")
 */
    __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_MaxLayer); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 4311, __pyx_L1_error)
    __pyx_r = __pyx_t_2;
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":4310
 * cdef int FindLayerNumber(string, MaxLayer):
 * 
 *     if(string=="default"):             # <<<<<<<<<<<<<<
 *         return MaxLayer
 * 
 */
  }

  /* "Pythonreflectivity.pyx":4313
 *         return MaxLayer
 * 
 *     a=string.split(",")             # <<<<<<<<<<<<<<
 * 
 *     N=len(a)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_kp_s__3};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4313, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_a = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Pythonreflectivity.pyx":4315
 *     a=string.split(",")
 * 
 *     N=len(a)             # <<<<<<<<<<<<<<
 *     j=0
 *     IsInBracket=False
 */
  __pyx_t_7 = PyObject_Length(__pyx_v_a); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 4315, __pyx_L1_error)
  __pyx_v_N = __pyx_t_7;

  /* "Pythonreflectivity.pyx":4316
 * 
 *     N=len(a)
 *     j=0             # <<<<<<<<<<<<<<
 *     IsInBracket=False
 *     for i in range(N):
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_j = __pyx_int_0;

  /* "Pythonreflectivity.pyx":4317
 *     N=len(a)
 *     j=0
 *     IsInBracket=False             # <<<<<<<<<<<<<<
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):
 */
  __pyx_v_IsInBracket = 0;

  /* "Pythonreflectivity.pyx":4318
 *     j=0
 *     IsInBracket=False
 *     for i in range(N):             # <<<<<<<<<<<<<<
 *         if (a[i].find('(')!=-1):
 *             j=j+1
 */
  __pyx_t_7 = __pyx_v_N;
  __pyx_t_8 = __pyx_t_7;
  for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
    __pyx_v_i = __pyx_t_9;

    /* "Pythonreflectivity.pyx":4319
 *     IsInBracket=False
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             j=j+1
 *             IsInBracket=True
 */
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_kp_s__4};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4319, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __pyx_t_1 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 4319, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4320
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):
 *             j=j+1             # <<<<<<<<<<<<<<
 *             IsInBracket=True
 *     #        print a[i], "w", j
 */
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_j, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4320, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Pythonreflectivity.pyx":4321
 *         if (a[i].find('(')!=-1):
 *             j=j+1
 *             IsInBracket=True             # <<<<<<<<<<<<<<
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):
 */
      __pyx_v_IsInBracket = 1;

      /* "Pythonreflectivity.pyx":4319
 *     IsInBracket=False
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             j=j+1
 *             IsInBracket=True
 */
      goto __pyx_L6;
    }

    /* "Pythonreflectivity.pyx":4323
 *             IsInBracket=True
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *    #         print a[i], "x", j
 */
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_kp_s__6};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4323, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_1 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 4323, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4324
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):
 *             IsInBracket=False             # <<<<<<<<<<<<<<
 *    #         print a[i], "x", j
 *         else:
 */
      __pyx_v_IsInBracket = 0;

      /* "Pythonreflectivity.pyx":4323
 *             IsInBracket=True
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *    #         print a[i], "x", j
 */
      goto __pyx_L6;
    }

    /* "Pythonreflectivity.pyx":4328
 *         else:
 * 
 *             if(IsInBracket==False):             # <<<<<<<<<<<<<<
 *                 j=j+1
 * 
 */
    /*else*/ {
      __pyx_t_1 = (__pyx_v_IsInBracket == 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":4329
 * 
 *             if(IsInBracket==False):
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 *     return j
 */
        __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_j, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4329, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "Pythonreflectivity.pyx":4328
 *         else:
 * 
 *             if(IsInBracket==False):             # <<<<<<<<<<<<<<
 *                 j=j+1
 * 
 */
      }
    }
    __pyx_L6:;
  }

  /* "Pythonreflectivity.pyx":4331
 *                 j=j+1
 * 
 *     return j             # <<<<<<<<<<<<<<
 * 
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):
 */
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_j); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 4331, __pyx_L1_error)
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":4308
 * 
 * 
 * cdef int FindLayerNumber(string, MaxLayer):             # <<<<<<<<<<<<<<
 * 
 *     if(string=="default"):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Pythonreflectivity.FindLayerNumber", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4333
 *     return j
 * 
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):             # <<<<<<<<<<<<<<
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)
 */

static PyObject *__pyx_f_18Pythonreflectivity_MakeConsistencyCheck(PyObject *__pyx_v_string, struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_STR, PyObject *__pyx_v_MaxLayer) {
  Py_ssize_t __pyx_v_Ntot;
  int __pyx_v_IsInBracket;
  Py_ssize_t __pyx_v_i;
  int __pyx_v_j;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MakeConsistencyCheck", 1);

  /* "Pythonreflectivity.pyx":4335
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)             # <<<<<<<<<<<<<<
 *     IsInBracket=False
 *     for i in range(Ntot):
 */
  __pyx_t_1 = PyObject_Length(__pyx_v_string); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 4335, __pyx_L1_error)
  __pyx_v_Ntot = __pyx_t_1;

  /* "Pythonreflectivity.pyx":4336
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)
 *     IsInBracket=False             # <<<<<<<<<<<<<<
 *     for i in range(Ntot):
 *         if(IsInBracket):
 */
  __pyx_v_IsInBracket = 0;

  /* "Pythonreflectivity.pyx":4337
 *     Ntot=len(string)
 *     IsInBracket=False
 *     for i in range(Ntot):             # <<<<<<<<<<<<<<
 *         if(IsInBracket):
 *             if(string[i]=='('):
 */
  __pyx_t_1 = __pyx_v_Ntot;
  __pyx_t_2 = __pyx_t_1;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "Pythonreflectivity.pyx":4338
 *     IsInBracket=False
 *     for i in range(Ntot):
 *         if(IsInBracket):             # <<<<<<<<<<<<<<
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")
 */
    if (__pyx_v_IsInBracket) {

      /* "Pythonreflectivity.pyx":4339
 *     for i in range(Ntot):
 *         if(IsInBracket):
 *             if(string[i]=='('):             # <<<<<<<<<<<<<<
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4339, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__4, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 4339, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(__pyx_t_5)) {

        /* "Pythonreflectivity.pyx":4340
 *         if(IsInBracket):
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")             # <<<<<<<<<<<<<<
 *             if(string[i]==')'):
 *                 IsInBracket=False
 */
        __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4340, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 4340, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4339
 *     for i in range(Ntot):
 *         if(IsInBracket):
 *             if(string[i]=='('):             # <<<<<<<<<<<<<<
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):
 */
      }

      /* "Pythonreflectivity.pyx":4341
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):             # <<<<<<<<<<<<<<
 *                 IsInBracket=False
 *         else:
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4341, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__6, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 4341, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4342
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):
 *                 IsInBracket=False             # <<<<<<<<<<<<<<
 *         else:
 *             if(string[i]==')'):
 */
        __pyx_v_IsInBracket = 0;

        /* "Pythonreflectivity.pyx":4341
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):             # <<<<<<<<<<<<<<
 *                 IsInBracket=False
 *         else:
 */
      }

      /* "Pythonreflectivity.pyx":4338
 *     IsInBracket=False
 *     for i in range(Ntot):
 *         if(IsInBracket):             # <<<<<<<<<<<<<<
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")
 */
      goto __pyx_L5;
    }

    /* "Pythonreflectivity.pyx":4344
 *                 IsInBracket=False
 *         else:
 *             if(string[i]==')'):             # <<<<<<<<<<<<<<
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):
 */
    /*else*/ {
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4344, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__6, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 4344, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(__pyx_t_5)) {

        /* "Pythonreflectivity.pyx":4345
 *         else:
 *             if(string[i]==')'):
 *                 raise Exception("Something is wrong with the Multilayer brackets")             # <<<<<<<<<<<<<<
 *             if(string[i]=='('):
 *                 IsInBracket=True
 */
        __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4345, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(0, 4345, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4344
 *                 IsInBracket=False
 *         else:
 *             if(string[i]==')'):             # <<<<<<<<<<<<<<
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):
 */
      }

      /* "Pythonreflectivity.pyx":4346
 *             if(string[i]==')'):
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):             # <<<<<<<<<<<<<<
 *                 IsInBracket=True
 *     if(IsInBracket):
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4346, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__4, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 4346, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4347
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):
 *                 IsInBracket=True             # <<<<<<<<<<<<<<
 *     if(IsInBracket):
 *         raise Exception("Something is wrong with the Multilayer brackets")
 */
        __pyx_v_IsInBracket = 1;

        /* "Pythonreflectivity.pyx":4346
 *             if(string[i]==')'):
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):             # <<<<<<<<<<<<<<
 *                 IsInBracket=True
 *     if(IsInBracket):
 */
      }
    }
    __pyx_L5:;
  }

  /* "Pythonreflectivity.pyx":4348
 *             if(string[i]=='('):
 *                 IsInBracket=True
 *     if(IsInBracket):             # <<<<<<<<<<<<<<
 *         raise Exception("Something is wrong with the Multilayer brackets")
 * 
 */
  if (unlikely(__pyx_v_IsInBracket)) {

    /* "Pythonreflectivity.pyx":4349
 *                 IsInBracket=True
 *     if(IsInBracket):
 *         raise Exception("Something is wrong with the Multilayer brackets")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(0, 4349, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":4348
 *             if(string[i]=='('):
 *                 IsInBracket=True
 *     if(IsInBracket):             # <<<<<<<<<<<<<<
 *         raise Exception("Something is wrong with the Multilayer brackets")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":4352
 * 
 * 
 *     for i in range((STR[0]).NLayers):             # <<<<<<<<<<<<<<
 *         for j in range((STR[0]).MLLENGTH[i]):
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):
 */
  __pyx_t_6 = (__pyx_v_STR[0]).NLayers;
  __pyx_t_7 = __pyx_t_6;
  for (__pyx_t_1 = 0; __pyx_t_1 < __pyx_t_7; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "Pythonreflectivity.pyx":4353
 * 
 *     for i in range((STR[0]).NLayers):
 *         for j in range((STR[0]).MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 */
    __pyx_t_8 = ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_i]);
    __pyx_t_9 = __pyx_t_8;
    for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
      __pyx_v_j = __pyx_t_10;

      /* "Pythonreflectivity.pyx":4354
 *     for i in range((STR[0]).NLayers):
 *         for j in range((STR[0]).MLLENGTH[i]):
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):             # <<<<<<<<<<<<<<
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 * 
 */
      __pyx_t_4 = __Pyx_PyInt_From_int((((__pyx_v_STR[0]).MLCOMP[__pyx_v_i])[__pyx_v_j])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4354, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = PyObject_RichCompare(__pyx_t_4, __pyx_v_MaxLayer, Py_GE); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 4354, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_11); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 4354, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(__pyx_t_5)) {

        /* "Pythonreflectivity.pyx":4355
 *         for j in range((STR[0]).MLLENGTH[i]):
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")             # <<<<<<<<<<<<<<
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):
 */
        __pyx_t_11 = __Pyx_PyInt_From_int((((__pyx_v_STR[0]).MLCOMP[__pyx_v_i])[__pyx_v_j])); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 4355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = PyNumber_Add(__pyx_kp_s_Layer, __pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 4355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_11, __pyx_kp_s_in_Multilayer_structure_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_CallOneArg(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 4355, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_11, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __PYX_ERR(0, 4355, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4354
 *     for i in range((STR[0]).NLayers):
 *         for j in range((STR[0]).MLLENGTH[i]):
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):             # <<<<<<<<<<<<<<
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 * 
 */
      }
    }
  }

  /* "Pythonreflectivity.pyx":4357
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):             # <<<<<<<<<<<<<<
 *         raise Exception("Substrate as Multilayer is ill-defined")
 * 
 */
  __pyx_t_5 = (((__pyx_v_STR[0]).MLLENGTH[0]) != 1);
  if (unlikely(__pyx_t_5)) {

    /* "Pythonreflectivity.pyx":4358
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):
 *         raise Exception("Substrate as Multilayer is ill-defined")             # <<<<<<<<<<<<<<
 * 
 *     return 0
 */
    __pyx_t_11 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 4358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_Raise(__pyx_t_11, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __PYX_ERR(0, 4358, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":4357
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):             # <<<<<<<<<<<<<<
 *         raise Exception("Substrate as Multilayer is ill-defined")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":4360
 *         raise Exception("Substrate as Multilayer is ill-defined")
 * 
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_0);
  __pyx_r = __pyx_int_0;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":4333
 *     return j
 * 
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):             # <<<<<<<<<<<<<<
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("Pythonreflectivity.MakeConsistencyCheck", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4364
 * 
 * 
 * cdef int FindComposition(string, int MaxLayer, int LayerNumber, Heterostructure *STR):             # <<<<<<<<<<<<<<
 * 
 * 
 */

static int __pyx_f_18Pythonreflectivity_FindComposition(PyObject *__pyx_v_string, int __pyx_v_MaxLayer, int __pyx_v_LayerNumber, struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_STR) {
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_SaveNumbers = NULL;
  PyObject *__pyx_v_a = NULL;
  Py_ssize_t __pyx_v_N;
  int __pyx_v_j;
  int __pyx_v_IsInBracket;
  int __pyx_v_k;
  int __pyx_v_l;
  PyObject *__pyx_v_b = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  size_t __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FindComposition", 1);

  /* "Pythonreflectivity.pyx":4368
 * 
 *   #  LayerNumber=FindLayerNumber(string, MaxLayer)
 *     (STR[0]).NLayers=LayerNumber             # <<<<<<<<<<<<<<
 * 
 *   #  print LayerNumber
 */
  (__pyx_v_STR[0]).NLayers = __pyx_v_LayerNumber;

  /* "Pythonreflectivity.pyx":4372
 *   #  print LayerNumber
 * 
 *     if(string=="default"):             # <<<<<<<<<<<<<<
 *         for i in range(MaxLayer):
 *             (STR[0]).MLREP[i]=1
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_string, __pyx_n_s_default, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 4372, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":4373
 * 
 *     if(string=="default"):
 *         for i in range(MaxLayer):             # <<<<<<<<<<<<<<
 *             (STR[0]).MLREP[i]=1
 *             (STR[0]).MLLENGTH[i]=1
 */
    __pyx_t_2 = __pyx_v_MaxLayer;
    __pyx_t_3 = __pyx_t_2;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_i = __pyx_t_4;

      /* "Pythonreflectivity.pyx":4374
 *     if(string=="default"):
 *         for i in range(MaxLayer):
 *             (STR[0]).MLREP[i]=1             # <<<<<<<<<<<<<<
 *             (STR[0]).MLLENGTH[i]=1
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 */
      ((__pyx_v_STR[0]).MLREP[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":4375
 *         for i in range(MaxLayer):
 *             (STR[0]).MLREP[i]=1
 *             (STR[0]).MLLENGTH[i]=1             # <<<<<<<<<<<<<<
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 *             (STR[0]).MLCOMP[i][0]=i
 */
      ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":4376
 *             (STR[0]).MLREP[i]=1
 *             (STR[0]).MLLENGTH[i]=1
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *             (STR[0]).MLCOMP[i][0]=i
 *         return 0
 */
      ((__pyx_v_STR[0]).MLCOMP[__pyx_v_i]) = ((int *)malloc((sizeof(int))));

      /* "Pythonreflectivity.pyx":4377
 *             (STR[0]).MLLENGTH[i]=1
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 *             (STR[0]).MLCOMP[i][0]=i             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
      (((__pyx_v_STR[0]).MLCOMP[__pyx_v_i])[0]) = __pyx_v_i;
    }

    /* "Pythonreflectivity.pyx":4378
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 *             (STR[0]).MLCOMP[i][0]=i
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     SaveNumbers=[]
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "Pythonreflectivity.pyx":4372
 *   #  print LayerNumber
 * 
 *     if(string=="default"):             # <<<<<<<<<<<<<<
 *         for i in range(MaxLayer):
 *             (STR[0]).MLREP[i]=1
 */
  }

  /* "Pythonreflectivity.pyx":4380
 *         return 0
 * 
 *     SaveNumbers=[]             # <<<<<<<<<<<<<<
 * 
 *   #  print "not default"
 */
  __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_v_SaveNumbers = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "Pythonreflectivity.pyx":4383
 * 
 *   #  print "not default"
 *     a=string.split(",")             # <<<<<<<<<<<<<<
 * 
 *     N=len(a)
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_string, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_8 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__3};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_v_a = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Pythonreflectivity.pyx":4385
 *     a=string.split(",")
 * 
 *     N=len(a)             # <<<<<<<<<<<<<<
 *     cdef int j=0
 *     IsInBracket=False
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_a); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 4385, __pyx_L1_error)
  __pyx_v_N = __pyx_t_4;

  /* "Pythonreflectivity.pyx":4386
 * 
 *     N=len(a)
 *     cdef int j=0             # <<<<<<<<<<<<<<
 *     IsInBracket=False
 *     cdef int k=0
 */
  __pyx_v_j = 0;

  /* "Pythonreflectivity.pyx":4387
 *     N=len(a)
 *     cdef int j=0
 *     IsInBracket=False             # <<<<<<<<<<<<<<
 *     cdef int k=0
 *     cdef int l
 */
  __pyx_v_IsInBracket = 0;

  /* "Pythonreflectivity.pyx":4388
 *     cdef int j=0
 *     IsInBracket=False
 *     cdef int k=0             # <<<<<<<<<<<<<<
 *     cdef int l
 * 
 */
  __pyx_v_k = 0;

  /* "Pythonreflectivity.pyx":4392
 * 
 * 
 *     for i in range(N):             # <<<<<<<<<<<<<<
 *         if (a[i].find('(')!=-1):
 *             b=a[i].split('*(')
 */
  __pyx_t_4 = __pyx_v_N;
  __pyx_t_9 = __pyx_t_4;
  for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
    __pyx_v_i = __pyx_t_10;

    /* "Pythonreflectivity.pyx":4393
 * 
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split('*(')
 *             (STR[0]).MLREP[j]=int(b[0])
 */
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4393, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4393, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_kp_s__4};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4393, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __pyx_t_1 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 4393, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4394
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):
 *             b=a[i].split('*(')             # <<<<<<<<<<<<<<
 *             (STR[0]).MLREP[j]=int(b[0])
 *          #   print "j", j
 */
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__5};
        __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4394, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "Pythonreflectivity.pyx":4395
 *         if (a[i].find('(')!=-1):
 *             b=a[i].split('*(')
 *             (STR[0]).MLREP[j]=int(b[0])             # <<<<<<<<<<<<<<
 *          #   print "j", j
 *             SaveNumbers=SaveNumbers+[int(b[1])]
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4395, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4395, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 4395, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      ((__pyx_v_STR[0]).MLREP[__pyx_v_j]) = __pyx_t_2;

      /* "Pythonreflectivity.pyx":4397
 *             (STR[0]).MLREP[j]=int(b[0])
 *          #   print "j", j
 *             SaveNumbers=SaveNumbers+[int(b[1])]             # <<<<<<<<<<<<<<
 *             IsInBracket=True
 *             k=1
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_b, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_5)) __PYX_ERR(0, 4397, __pyx_L1_error);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_5));
      __pyx_t_5 = 0;

      /* "Pythonreflectivity.pyx":4398
 *          #   print "j", j
 *             SaveNumbers=SaveNumbers+[int(b[1])]
 *             IsInBracket=True             # <<<<<<<<<<<<<<
 *             k=1
 *         elif (a[i].find(')')!=-1):
 */
      __pyx_v_IsInBracket = 1;

      /* "Pythonreflectivity.pyx":4399
 *             SaveNumbers=SaveNumbers+[int(b[1])]
 *             IsInBracket=True
 *             k=1             # <<<<<<<<<<<<<<
 *         elif (a[i].find(')')!=-1):
 *             b=a[i].split(')')
 */
      __pyx_v_k = 1;

      /* "Pythonreflectivity.pyx":4393
 * 
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split('*(')
 *             (STR[0]).MLREP[j]=int(b[0])
 */
      goto __pyx_L8;
    }

    /* "Pythonreflectivity.pyx":4400
 *             IsInBracket=True
 *             k=1
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 */
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4400, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_find); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4400, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_kp_s__6};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4400, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __pyx_t_1 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 4400, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4401
 *             k=1
 *         elif (a[i].find(')')!=-1):
 *             b=a[i].split(')')             # <<<<<<<<<<<<<<
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 *             IsInBracket=False
 */
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4401, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4401, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s__6};
        __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4401, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "Pythonreflectivity.pyx":4402
 *         elif (a[i].find(')')!=-1):
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *             k=k+1
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4402, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4402, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4402, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_6);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_6)) __PYX_ERR(0, 4402, __pyx_L1_error);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4402, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_6));
      __pyx_t_6 = 0;

      /* "Pythonreflectivity.pyx":4403
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 *             IsInBracket=False             # <<<<<<<<<<<<<<
 *             k=k+1
 *             (STR[0]).MLLENGTH[j]=k
 */
      __pyx_v_IsInBracket = 0;

      /* "Pythonreflectivity.pyx":4404
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 *             IsInBracket=False
 *             k=k+1             # <<<<<<<<<<<<<<
 *             (STR[0]).MLLENGTH[j]=k
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))
 */
      __pyx_v_k = (__pyx_v_k + 1);

      /* "Pythonreflectivity.pyx":4405
 *             IsInBracket=False
 *             k=k+1
 *             (STR[0]).MLLENGTH[j]=k             # <<<<<<<<<<<<<<
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))
 *          #   print "j", j
 */
      ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j]) = __pyx_v_k;

      /* "Pythonreflectivity.pyx":4406
 *             k=k+1
 *             (STR[0]).MLLENGTH[j]=k
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))             # <<<<<<<<<<<<<<
 *          #   print "j", j
 *             for l in range((STR[0]).MLLENGTH[j]):
 */
      __pyx_t_6 = __Pyx_PyInt_From_int(((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j])); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyInt_Type)), __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyInt_FromSize_t((sizeof(int))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyNumber_Multiply(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4406, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_t_7); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 4406, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      ((__pyx_v_STR[0]).MLCOMP[__pyx_v_j]) = ((int *)malloc(__pyx_t_11));

      /* "Pythonreflectivity.pyx":4408
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))
 *          #   print "j", j
 *             for l in range((STR[0]).MLLENGTH[j]):             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])
 *             SaveNumbers=[]
 */
      __pyx_t_2 = ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j]);
      __pyx_t_3 = __pyx_t_2;
      for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_3; __pyx_t_12+=1) {
        __pyx_v_l = __pyx_t_12;

        /* "Pythonreflectivity.pyx":4409
 *          #   print "j", j
 *             for l in range((STR[0]).MLLENGTH[j]):
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])             # <<<<<<<<<<<<<<
 *             SaveNumbers=[]
 *             j=j+1
 */
        __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_SaveNumbers, __pyx_v_l, int, 1, __Pyx_PyInt_From_int, 1, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4409, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4409, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 4409, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        (((__pyx_v_STR[0]).MLCOMP[__pyx_v_j])[__pyx_v_l]) = __pyx_t_13;
      }

      /* "Pythonreflectivity.pyx":4410
 *             for l in range((STR[0]).MLLENGTH[j]):
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])
 *             SaveNumbers=[]             # <<<<<<<<<<<<<<
 *             j=j+1
 *         #    print a[i], "x", j
 */
      __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_6));
      __pyx_t_6 = 0;

      /* "Pythonreflectivity.pyx":4411
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])
 *             SaveNumbers=[]
 *             j=j+1             # <<<<<<<<<<<<<<
 *         #    print a[i], "x", j
 *         else:
 */
      __pyx_v_j = (__pyx_v_j + 1);

      /* "Pythonreflectivity.pyx":4400
 *             IsInBracket=True
 *             k=1
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 */
      goto __pyx_L8;
    }

    /* "Pythonreflectivity.pyx":4414
 *         #    print a[i], "x", j
 *         else:
 *             if(IsInBracket):             # <<<<<<<<<<<<<<
 *                 k=k+1
 *                 SaveNumbers=SaveNumbers+[int(a[i])]
 */
    /*else*/ {
      if (__pyx_v_IsInBracket) {

        /* "Pythonreflectivity.pyx":4415
 *         else:
 *             if(IsInBracket):
 *                 k=k+1             # <<<<<<<<<<<<<<
 *                 SaveNumbers=SaveNumbers+[int(a[i])]
 *             else:
 */
        __pyx_v_k = (__pyx_v_k + 1);

        /* "Pythonreflectivity.pyx":4416
 *             if(IsInBracket):
 *                 k=k+1
 *                 SaveNumbers=SaveNumbers+[int(a[i])]             # <<<<<<<<<<<<<<
 *             else:
 *                 (STR[0]).MLREP[j]=1
 */
        __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_7);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_7)) __PYX_ERR(0, 4416, __pyx_L1_error);
        __pyx_t_7 = 0;
        __pyx_t_7 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_7));
        __pyx_t_7 = 0;

        /* "Pythonreflectivity.pyx":4414
 *         #    print a[i], "x", j
 *         else:
 *             if(IsInBracket):             # <<<<<<<<<<<<<<
 *                 k=k+1
 *                 SaveNumbers=SaveNumbers+[int(a[i])]
 */
        goto __pyx_L11;
      }

      /* "Pythonreflectivity.pyx":4418
 *                 SaveNumbers=SaveNumbers+[int(a[i])]
 *             else:
 *                 (STR[0]).MLREP[j]=1             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLLENGTH[j]=1
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 */
      /*else*/ {
        ((__pyx_v_STR[0]).MLREP[__pyx_v_j]) = 1;

        /* "Pythonreflectivity.pyx":4419
 *             else:
 *                 (STR[0]).MLREP[j]=1
 *                 (STR[0]).MLLENGTH[j]=1             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])
 */
        ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j]) = 1;

        /* "Pythonreflectivity.pyx":4420
 *                 (STR[0]).MLREP[j]=1
 *                 (STR[0]).MLLENGTH[j]=1
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])
 *                 j=j+1
 */
        ((__pyx_v_STR[0]).MLCOMP[__pyx_v_j]) = ((int *)malloc((sizeof(int))));

        /* "Pythonreflectivity.pyx":4421
 *                 (STR[0]).MLLENGTH[j]=1
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])             # <<<<<<<<<<<<<<
 *                 j=j+1
 * 
 */
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4421, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4421, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 4421, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        (((__pyx_v_STR[0]).MLCOMP[__pyx_v_j])[0]) = __pyx_t_2;

        /* "Pythonreflectivity.pyx":4422
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }
      __pyx_L11:;
    }
    __pyx_L8:;
  }

  /* "Pythonreflectivity.pyx":4427
 * 
 * 
 *     MakeConsistencyCheck(string, &(STR[0]), MaxLayer)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_MaxLayer); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __pyx_f_18Pythonreflectivity_MakeConsistencyCheck(__pyx_v_string, (&(__pyx_v_STR[0])), __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "Pythonreflectivity.pyx":4364
 * 
 * 
 * cdef int FindComposition(string, int MaxLayer, int LayerNumber, Heterostructure *STR):             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Pythonreflectivity.FindComposition", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_SaveNumbers);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_1Generate_structure(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_1Generate_structure = {"Generate_structure", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_1Generate_structure, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_1Generate_structure(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_NLayers_types;
  PyObject *__pyx_v_MLstructure = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Generate_structure (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_NLayers_types,&__pyx_n_s_MLstructure,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject*)__pyx_n_s_default)));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_NLayers_types)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4432, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_MLstructure);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4432, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "Generate_structure") < 0)) __PYX_ERR(0, 4432, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_NLayers_types = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_NLayers_types == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 4432, __pyx_L3_error)
    __pyx_v_MLstructure = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Generate_structure", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 4432, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Generate_structure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_Generate_structure(__pyx_self, __pyx_v_NLayers_types, __pyx_v_MLstructure);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_Generate_structure(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_NLayers_types, PyObject *__pyx_v_MLstructure) {
  int __pyx_v_i;
  PyObject *__pyx_v_HS = NULL;
  CYTHON_UNUSED int __pyx_7genexpr__pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Generate_structure", 1);

  /* "Pythonreflectivity.pyx":4438
 * 
 * #    cdef Heterostructure STR
 *     if(NLayers_types<=0):             # <<<<<<<<<<<<<<
 *         raise Exception("Please generate at least one layer!")
 * 
 */
  __pyx_t_1 = (__pyx_v_NLayers_types <= 0);
  if (unlikely(__pyx_t_1)) {

    /* "Pythonreflectivity.pyx":4439
 * #    cdef Heterostructure STR
 *     if(NLayers_types<=0):
 *         raise Exception("Please generate at least one layer!")             # <<<<<<<<<<<<<<
 * 
 *     cdef int i
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 4439, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":4438
 * 
 * #    cdef Heterostructure STR
 *     if(NLayers_types<=0):             # <<<<<<<<<<<<<<
 *         raise Exception("Please generate at least one layer!")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":4442
 * 
 *     cdef int i
 *     HS=[0 for i in range(NLayers_types)]             # <<<<<<<<<<<<<<
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):
 */
  { /* enter inner scope */
    __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_v_NLayers_types;
    __pyx_t_4 = __pyx_t_3;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_7genexpr__pyx_v_i = __pyx_t_5;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_int_0))) __PYX_ERR(0, 4442, __pyx_L1_error)
    }
  } /* exit inner scope */
  __pyx_v_HS = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":4443
 *     cdef int i
 *     HS=[0 for i in range(NLayers_types)]
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)             # <<<<<<<<<<<<<<
 *     for i in range(1,NLayers_types):
 *         HS[i]=Layer(0,0)
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NLayers_types); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_int_0)) __PYX_ERR(0, 4443, __pyx_L1_error);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_0)) __PYX_ERR(0, 4443, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_MLstructure);
  __Pyx_GIVEREF(__pyx_v_MLstructure);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_MLstructure)) __PYX_ERR(0, 4443, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_2)) __PYX_ERR(0, 4443, __pyx_L1_error);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer), __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely((__Pyx_SetItemInt(__pyx_v_HS, 0, __pyx_t_2, long, 1, __Pyx_PyInt_From_long, 1, 0, 1) < 0))) __PYX_ERR(0, 4443, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":4444
 *     HS=[0 for i in range(NLayers_types)]
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):             # <<<<<<<<<<<<<<
 *         HS[i]=Layer(0,0)
 * 
 */
  __pyx_t_3 = __pyx_v_NLayers_types;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 1; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "Pythonreflectivity.pyx":4445
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):
 *         HS[i]=Layer(0,0)             # <<<<<<<<<<<<<<
 * 
 *   #  HS[0].initstructure(MLstructure, NLayers_types)
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer), __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely((__Pyx_SetItemInt(__pyx_v_HS, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 1, 1, 1) < 0))) __PYX_ERR(0, 4445, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "Pythonreflectivity.pyx":4449
 *   #  HS[0].initstructure(MLstructure, NLayers_types)
 * 
 *     return HS             # <<<<<<<<<<<<<<
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_HS);
  __pyx_r = __pyx_v_HS;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Pythonreflectivity.Generate_structure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_HS);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_3Reflectivity(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_3Reflectivity = {"Reflectivity", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_3Reflectivity, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_3Reflectivity(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_HS = 0;
  PyObject *__pyx_v_th = 0;
  PyObject *__pyx_v_wavelength = 0;
  PyObject *__pyx_v_MultipleScattering = 0;
  PyObject *__pyx_v_MagneticCutoff = 0;
  PyObject *__pyx_v_Output = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[6] = {0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Reflectivity (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_HS,&__pyx_n_s_th,&__pyx_n_s_wavelength,&__pyx_n_s_MultipleScattering,&__pyx_n_s_MagneticCutoff,&__pyx_n_s_Output,0};
    values[3] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject *)__pyx_int_1)));
    values[4] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject*)__pyx_float_1_0Eneg_6)));
    values[5] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject*)__pyx_n_s_T)));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_HS)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4451, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_th)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4451, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("Reflectivity", 0, 3, 6, 1); __PYX_ERR(0, 4451, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_wavelength)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4451, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("Reflectivity", 0, 3, 6, 2); __PYX_ERR(0, 4451, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_MultipleScattering);
          if (value) { values[3] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4451, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_MagneticCutoff);
          if (value) { values[4] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4451, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Output);
          if (value) { values[5] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4451, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "Reflectivity") < 0)) __PYX_ERR(0, 4451, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_HS = values[0];
    __pyx_v_th = values[1];
    __pyx_v_wavelength = values[2];
    __pyx_v_MultipleScattering = values[3];
    __pyx_v_MagneticCutoff = values[4];
    __pyx_v_Output = values[5];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Reflectivity", 0, 3, 6, __pyx_nargs); __PYX_ERR(0, 4451, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("Pythonreflectivity.Reflectivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_2Reflectivity(__pyx_self, __pyx_v_HS, __pyx_v_th, __pyx_v_wavelength, __pyx_v_MultipleScattering, __pyx_v_MagneticCutoff, __pyx_v_Output);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_2Reflectivity(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_HS, PyObject *__pyx_v_th, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_MultipleScattering, PyObject *__pyx_v_MagneticCutoff, PyObject *__pyx_v_Output) {
  int __pyx_v_NAngles;
  long __pyx_v_a;
  struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_A;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_B;
  CYTHON_UNUSED int __pyx_v_NLayers;
  int __pyx_v_NLayers_types;
  int __pyx_v_i;
  int __pyx_v_allx;
  int __pyx_v_ally;
  int __pyx_v_allz;
  double __pyx_v_Cutoffquad;
  int __pyx_v_Setting1;
  int __pyx_v_Setting2;
  int __pyx_v_Setting3;
  __pyx_t_double_complex __pyx_v_rss;
  __pyx_t_double_complex __pyx_v_rpp;
  __pyx_t_double_complex __pyx_v_rmat[2][2];
  PyObject *__pyx_v_routs = NULL;
  PyObject *__pyx_v_routp = NULL;
  PyObject *__pyx_v_rempty = NULL;
  PyObject *__pyx_v_routl = NULL;
  PyObject *__pyx_v_routr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  long __pyx_t_9;
  int __pyx_t_10;
  double __pyx_t_11;
  double __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  __pyx_t_double_complex __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Reflectivity", 0);
  __Pyx_INCREF(__pyx_v_th);

  /* "Pythonreflectivity.pyx":4453
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):             # <<<<<<<<<<<<<<
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")
 * 
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_HS, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_isthisthelowestlayer); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_5 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_1, __pyx_int_1, 1, 0)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 4453, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_5)) {

    /* "Pythonreflectivity.pyx":4454
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")             # <<<<<<<<<<<<<<
 * 
 *     if(hasattr(th, "__len__")==False):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 4454, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":4453
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):             # <<<<<<<<<<<<<<
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")
 * 
 */
  }

  /* "Pythonreflectivity.pyx":4456
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")
 * 
 *     if(hasattr(th, "__len__")==False):             # <<<<<<<<<<<<<<
 *         th=np.array([th])
 *     cdef int NAngles=len(th)
 */
  __pyx_t_5 = __Pyx_HasAttr(__pyx_v_th, __pyx_n_s_len); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 4456, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 == 0);
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4457
 * 
 *     if(hasattr(th, "__len__")==False):
 *         th=np.array([th])             # <<<<<<<<<<<<<<
 *     cdef int NAngles=len(th)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4457, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4457, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4457, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_th);
    __Pyx_GIVEREF(__pyx_v_th);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_th)) __PYX_ERR(0, 4457, __pyx_L1_error);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4457, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF_SET(__pyx_v_th, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Pythonreflectivity.pyx":4456
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")
 * 
 *     if(hasattr(th, "__len__")==False):             # <<<<<<<<<<<<<<
 *         th=np.array([th])
 *     cdef int NAngles=len(th)
 */
  }

  /* "Pythonreflectivity.pyx":4458
 *     if(hasattr(th, "__len__")==False):
 *         th=np.array([th])
 *     cdef int NAngles=len(th)             # <<<<<<<<<<<<<<
 * 
 *     cdef long a=(HS[0].motherpointer())
 */
  __pyx_t_8 = PyObject_Length(__pyx_v_th); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 4458, __pyx_L1_error)
  __pyx_v_NAngles = __pyx_t_8;

  /* "Pythonreflectivity.pyx":4460
 *     cdef int NAngles=len(th)
 * 
 *     cdef long a=(HS[0].motherpointer())             # <<<<<<<<<<<<<<
 *     cdef Heterostructure* A=<Heterostructure*>a #Recover the C storage of the structure
 *     cdef CLayer* B
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_HS, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_motherpointer); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4460, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_9 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_9 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 4460, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_a = __pyx_t_9;

  /* "Pythonreflectivity.pyx":4461
 * 
 *     cdef long a=(HS[0].motherpointer())
 *     cdef Heterostructure* A=<Heterostructure*>a #Recover the C storage of the structure             # <<<<<<<<<<<<<<
 *     cdef CLayer* B
 * 
 */
  __pyx_v_A = ((struct __pyx_t_18Pythonreflectivity_Heterostructure *)__pyx_v_a);

  /* "Pythonreflectivity.pyx":4464
 *     cdef CLayer* B
 * 
 *     cdef int NLayers=(A[0]).NLayers             # <<<<<<<<<<<<<<
 * 
 *     cdef int NLayers_types=(A[0]).NLayers_types
 */
  __pyx_t_10 = (__pyx_v_A[0]).NLayers;
  __pyx_v_NLayers = __pyx_t_10;

  /* "Pythonreflectivity.pyx":4466
 *     cdef int NLayers=(A[0]).NLayers
 * 
 *     cdef int NLayers_types=(A[0]).NLayers_types             # <<<<<<<<<<<<<<
 *     cdef int i
 * 
 */
  __pyx_t_10 = (__pyx_v_A[0]).NLayers_types;
  __pyx_v_NLayers_types = __pyx_t_10;

  /* "Pythonreflectivity.pyx":4470
 * 
 * 
 *     cdef int allx=0             # <<<<<<<<<<<<<<
 *     cdef int ally=0
 *     cdef int allz=0
 */
  __pyx_v_allx = 0;

  /* "Pythonreflectivity.pyx":4471
 * 
 *     cdef int allx=0
 *     cdef int ally=0             # <<<<<<<<<<<<<<
 *     cdef int allz=0
 * 
 */
  __pyx_v_ally = 0;

  /* "Pythonreflectivity.pyx":4472
 *     cdef int allx=0
 *     cdef int ally=0
 *     cdef int allz=0             # <<<<<<<<<<<<<<
 * 
 *     cdef double Cutoffquad=quadr(MagneticCutoff)
 */
  __pyx_v_allz = 0;

  /* "Pythonreflectivity.pyx":4474
 *     cdef int allz=0
 * 
 *     cdef double Cutoffquad=quadr(MagneticCutoff)             # <<<<<<<<<<<<<<
 * 
 *     cdef int Setting1
 */
  __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_MagneticCutoff); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4474, __pyx_L1_error)
  __pyx_t_12 = __pyx_f_18Pythonreflectivity_quadr(__pyx_t_11); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4474, __pyx_L1_error)
  __pyx_v_Cutoffquad = __pyx_t_12;

  /* "Pythonreflectivity.pyx":4478
 *     cdef int Setting1
 *     cdef int Setting2
 *     cdef int Setting3=0 #0 Means Heterostructure has no magnetic parts             # <<<<<<<<<<<<<<
 * 
 *     if(Output=="s"): #return complex rss
 */
  __pyx_v_Setting3 = 0;

  /* "Pythonreflectivity.pyx":4480
 *     cdef int Setting3=0 #0 Means Heterostructure has no magnetic parts
 * 
 *     if(Output=="s"): #return complex rss             # <<<<<<<<<<<<<<
 *         Setting1=1
 *         Setting2=0
 */
  __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_s, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4480, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4481
 * 
 *     if(Output=="s"): #return complex rss
 *         Setting1=1             # <<<<<<<<<<<<<<
 *         Setting2=0
 *     elif(Output=="S"): #return real Rss
 */
    __pyx_v_Setting1 = 1;

    /* "Pythonreflectivity.pyx":4482
 *     if(Output=="s"): #return complex rss
 *         Setting1=1
 *         Setting2=0             # <<<<<<<<<<<<<<
 *     elif(Output=="S"): #return real Rss
 *         Setting1=1
 */
    __pyx_v_Setting2 = 0;

    /* "Pythonreflectivity.pyx":4480
 *     cdef int Setting3=0 #0 Means Heterostructure has no magnetic parts
 * 
 *     if(Output=="s"): #return complex rss             # <<<<<<<<<<<<<<
 *         Setting1=1
 *         Setting2=0
 */
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4483
 *         Setting1=1
 *         Setting2=0
 *     elif(Output=="S"): #return real Rss             # <<<<<<<<<<<<<<
 *         Setting1=1
 *         Setting2=1
 */
  __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_S, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4483, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4484
 *         Setting2=0
 *     elif(Output=="S"): #return real Rss
 *         Setting1=1             # <<<<<<<<<<<<<<
 *         Setting2=1
 *     elif(Output=="p"): #return complex rpp
 */
    __pyx_v_Setting1 = 1;

    /* "Pythonreflectivity.pyx":4485
 *     elif(Output=="S"): #return real Rss
 *         Setting1=1
 *         Setting2=1             # <<<<<<<<<<<<<<
 *     elif(Output=="p"): #return complex rpp
 *         Setting1=2
 */
    __pyx_v_Setting2 = 1;

    /* "Pythonreflectivity.pyx":4483
 *         Setting1=1
 *         Setting2=0
 *     elif(Output=="S"): #return real Rss             # <<<<<<<<<<<<<<
 *         Setting1=1
 *         Setting2=1
 */
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4486
 *         Setting1=1
 *         Setting2=1
 *     elif(Output=="p"): #return complex rpp             # <<<<<<<<<<<<<<
 *         Setting1=2
 *         Setting2=0
 */
  __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_p, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4486, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4487
 *         Setting2=1
 *     elif(Output=="p"): #return complex rpp
 *         Setting1=2             # <<<<<<<<<<<<<<
 *         Setting2=0
 *     elif(Output=="P"): #return real Rpp
 */
    __pyx_v_Setting1 = 2;

    /* "Pythonreflectivity.pyx":4488
 *     elif(Output=="p"): #return complex rpp
 *         Setting1=2
 *         Setting2=0             # <<<<<<<<<<<<<<
 *     elif(Output=="P"): #return real Rpp
 *         Setting1=2
 */
    __pyx_v_Setting2 = 0;

    /* "Pythonreflectivity.pyx":4486
 *         Setting1=1
 *         Setting2=1
 *     elif(Output=="p"): #return complex rpp             # <<<<<<<<<<<<<<
 *         Setting1=2
 *         Setting2=0
 */
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4489
 *         Setting1=2
 *         Setting2=0
 *     elif(Output=="P"): #return real Rpp             # <<<<<<<<<<<<<<
 *         Setting1=2
 *         Setting2=1
 */
  __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_P, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4489, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4490
 *         Setting2=0
 *     elif(Output=="P"): #return real Rpp
 *         Setting1=2             # <<<<<<<<<<<<<<
 *         Setting2=1
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 */
    __pyx_v_Setting1 = 2;

    /* "Pythonreflectivity.pyx":4491
 *     elif(Output=="P"): #return real Rpp
 *         Setting1=2
 *         Setting2=1             # <<<<<<<<<<<<<<
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 *         Setting1=3
 */
    __pyx_v_Setting2 = 1;

    /* "Pythonreflectivity.pyx":4489
 *         Setting1=2
 *         Setting2=0
 *     elif(Output=="P"): #return real Rpp             # <<<<<<<<<<<<<<
 *         Setting1=2
 *         Setting2=1
 */
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4492
 *         Setting1=2
 *         Setting2=1
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp             # <<<<<<<<<<<<<<
 *         Setting1=3
 *         Setting2=0
 */
  __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_t, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4492, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4493
 *         Setting2=1
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 *         Setting1=3             # <<<<<<<<<<<<<<
 *         Setting2=0
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 */
    __pyx_v_Setting1 = 3;

    /* "Pythonreflectivity.pyx":4494
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 *         Setting1=3
 *         Setting2=0             # <<<<<<<<<<<<<<
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 *         Setting1=3
 */
    __pyx_v_Setting2 = 0;

    /* "Pythonreflectivity.pyx":4492
 *         Setting1=2
 *         Setting2=1
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp             # <<<<<<<<<<<<<<
 *         Setting1=3
 *         Setting2=0
 */
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4495
 *         Setting1=3
 *         Setting2=0
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr             # <<<<<<<<<<<<<<
 *         Setting1=3
 *         Setting2=1
 */
  __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_T, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4495, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4496
 *         Setting2=0
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 *         Setting1=3             # <<<<<<<<<<<<<<
 *         Setting2=1
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 */
    __pyx_v_Setting1 = 3;

    /* "Pythonreflectivity.pyx":4497
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 *         Setting1=3
 *         Setting2=1             # <<<<<<<<<<<<<<
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 *         a=(HS[i]).layercontentpointer()
 */
    __pyx_v_Setting2 = 1;

    /* "Pythonreflectivity.pyx":4495
 *         Setting1=3
 *         Setting2=0
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr             # <<<<<<<<<<<<<<
 *         Setting1=3
 *         Setting2=1
 */
  }
  __pyx_L5:;

  /* "Pythonreflectivity.pyx":4498
 *         Setting1=3
 *         Setting2=1
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure             # <<<<<<<<<<<<<<
 *         a=(HS[i]).layercontentpointer()
 *         B=<CLayer*>a
 */
  __pyx_t_10 = __pyx_v_NLayers_types;
  __pyx_t_13 = __pyx_t_10;
  for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
    __pyx_v_i = __pyx_t_14;

    /* "Pythonreflectivity.pyx":4499
 *         Setting2=1
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 *         a=(HS[i]).layercontentpointer()             # <<<<<<<<<<<<<<
 *         B=<CLayer*>a
 *        # LR[i]=B[0]
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_HS, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4499, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_layercontentpointer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4499, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4499, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_t_9 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_9 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 4499, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_a = __pyx_t_9;

    /* "Pythonreflectivity.pyx":4500
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 *         a=(HS[i]).layercontentpointer()
 *         B=<CLayer*>a             # <<<<<<<<<<<<<<
 *        # LR[i]=B[0]
 *         (A[0]).LR[i]=B[0]
 */
    __pyx_v_B = ((struct __pyx_t_18Pythonreflectivity_CLayer *)__pyx_v_a);

    /* "Pythonreflectivity.pyx":4502
 *         B=<CLayer*>a
 *        # LR[i]=B[0]
 *         (A[0]).LR[i]=B[0]             # <<<<<<<<<<<<<<
 *        # print "content", (A[0]).LR[i].ex
 *         if(B[0].type==3):
 */
    ((__pyx_v_A[0]).LR[__pyx_v_i]) = (__pyx_v_B[0]);

    /* "Pythonreflectivity.pyx":4504
 *         (A[0]).LR[i]=B[0]
 *        # print "content", (A[0]).LR[i].ex
 *         if(B[0].type==3):             # <<<<<<<<<<<<<<
 *             Setting3=1
 *             if(B[0].magdir==1):
 */
    __pyx_t_6 = ((__pyx_v_B[0]).type == 3);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4505
 *        # print "content", (A[0]).LR[i].ex
 *         if(B[0].type==3):
 *             Setting3=1             # <<<<<<<<<<<<<<
 *             if(B[0].magdir==1):
 *                 allx=1
 */
      __pyx_v_Setting3 = 1;

      /* "Pythonreflectivity.pyx":4506
 *         if(B[0].type==3):
 *             Setting3=1
 *             if(B[0].magdir==1):             # <<<<<<<<<<<<<<
 *                 allx=1
 *             elif(B[0].magdir==2):
 */
      __pyx_t_6 = ((__pyx_v_B[0]).magdir == 1);
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4507
 *             Setting3=1
 *             if(B[0].magdir==1):
 *                 allx=1             # <<<<<<<<<<<<<<
 *             elif(B[0].magdir==2):
 *                 ally=1
 */
        __pyx_v_allx = 1;

        /* "Pythonreflectivity.pyx":4506
 *         if(B[0].type==3):
 *             Setting3=1
 *             if(B[0].magdir==1):             # <<<<<<<<<<<<<<
 *                 allx=1
 *             elif(B[0].magdir==2):
 */
        goto __pyx_L9;
      }

      /* "Pythonreflectivity.pyx":4508
 *             if(B[0].magdir==1):
 *                 allx=1
 *             elif(B[0].magdir==2):             # <<<<<<<<<<<<<<
 *                 ally=1
 *             elif(B[0].magdir==3):
 */
      __pyx_t_6 = ((__pyx_v_B[0]).magdir == 2);
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4509
 *                 allx=1
 *             elif(B[0].magdir==2):
 *                 ally=1             # <<<<<<<<<<<<<<
 *             elif(B[0].magdir==3):
 *                 allz=1
 */
        __pyx_v_ally = 1;

        /* "Pythonreflectivity.pyx":4508
 *             if(B[0].magdir==1):
 *                 allx=1
 *             elif(B[0].magdir==2):             # <<<<<<<<<<<<<<
 *                 ally=1
 *             elif(B[0].magdir==3):
 */
        goto __pyx_L9;
      }

      /* "Pythonreflectivity.pyx":4510
 *             elif(B[0].magdir==2):
 *                 ally=1
 *             elif(B[0].magdir==3):             # <<<<<<<<<<<<<<
 *                 allz=1
 *             if(Setting1!=3):
 */
      __pyx_t_6 = ((__pyx_v_B[0]).magdir == 3);
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4511
 *                 ally=1
 *             elif(B[0].magdir==3):
 *                 allz=1             # <<<<<<<<<<<<<<
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 */
        __pyx_v_allz = 1;

        /* "Pythonreflectivity.pyx":4510
 *             elif(B[0].magdir==2):
 *                 ally=1
 *             elif(B[0].magdir==3):             # <<<<<<<<<<<<<<
 *                 allz=1
 *             if(Setting1!=3):
 */
      }
      __pyx_L9:;

      /* "Pythonreflectivity.pyx":4512
 *             elif(B[0].magdir==3):
 *                 allz=1
 *             if(Setting1!=3):             # <<<<<<<<<<<<<<
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff
 */
      __pyx_t_6 = (__pyx_v_Setting1 != 3);
      if (unlikely(__pyx_t_6)) {

        /* "Pythonreflectivity.pyx":4513
 *                 allz=1
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')             # <<<<<<<<<<<<<<
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff
 * 
 */
        __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4513, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_Raise(__pyx_t_1, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __PYX_ERR(0, 4513, __pyx_L1_error)

        /* "Pythonreflectivity.pyx":4512
 *             elif(B[0].magdir==3):
 *                 allz=1
 *             if(Setting1!=3):             # <<<<<<<<<<<<<<
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff
 */
      }

      /* "Pythonreflectivity.pyx":4514
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff             # <<<<<<<<<<<<<<
 * 
 *                # HS[i].seteps([HS[i].epsxx(), HS[i].epsyy(), HS[i].epszz()])
 */
      __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr((__pyx_v_B[0]).eg); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4514, __pyx_L1_error)
      __pyx_t_6 = (__pyx_t_12 < __pyx_v_Cutoffquad);
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4518
 *                # HS[i].seteps([HS[i].epsxx(), HS[i].epsyy(), HS[i].epszz()])
 * 
 *                 (A[0]).LR[i].eg=0             # <<<<<<<<<<<<<<
 *                 (A[0]).LR[i].type=2
 *                 (A[0]).LR[i].magdir=0
 */
        ((__pyx_v_A[0]).LR[__pyx_v_i]).eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4519
 * 
 *                 (A[0]).LR[i].eg=0
 *                 (A[0]).LR[i].type=2             # <<<<<<<<<<<<<<
 *                 (A[0]).LR[i].magdir=0
 * 
 */
        ((__pyx_v_A[0]).LR[__pyx_v_i]).type = 2;

        /* "Pythonreflectivity.pyx":4520
 *                 (A[0]).LR[i].eg=0
 *                 (A[0]).LR[i].type=2
 *                 (A[0]).LR[i].magdir=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_A[0]).LR[__pyx_v_i]).magdir = 0;

        /* "Pythonreflectivity.pyx":4514
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff             # <<<<<<<<<<<<<<
 * 
 *                # HS[i].seteps([HS[i].epsxx(), HS[i].epsyy(), HS[i].epszz()])
 */
      }

      /* "Pythonreflectivity.pyx":4504
 *         (A[0]).LR[i]=B[0]
 *        # print "content", (A[0]).LR[i].ex
 *         if(B[0].type==3):             # <<<<<<<<<<<<<<
 *             Setting3=1
 *             if(B[0].magdir==1):
 */
    }
  }

  /* "Pythonreflectivity.pyx":4525
 * 
 * 
 *     if((ally&allz)|(ally&allx)|(allx&allz)):             # <<<<<<<<<<<<<<
 *         raise Exception('Exception! Multiple magnetization directions are so far not supported!')
 * 
 */
  __pyx_t_6 = ((((__pyx_v_ally & __pyx_v_allz) | (__pyx_v_ally & __pyx_v_allx)) | (__pyx_v_allx & __pyx_v_allz)) != 0);
  if (unlikely(__pyx_t_6)) {

    /* "Pythonreflectivity.pyx":4526
 * 
 *     if((ally&allz)|(ally&allx)|(allx&allz)):
 *         raise Exception('Exception! Multiple magnetization directions are so far not supported!')             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4526, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 4526, __pyx_L1_error)

    /* "Pythonreflectivity.pyx":4525
 * 
 * 
 *     if((ally&allz)|(ally&allx)|(allx&allz)):             # <<<<<<<<<<<<<<
 *         raise Exception('Exception! Multiple magnetization directions are so far not supported!')
 * 
 */
  }

  /* "Pythonreflectivity.pyx":4537
 *     cdef double complex rmat[2][2]
 * 
 *     if(Setting3==0):#Not magnetic             # <<<<<<<<<<<<<<
 * 
 *         if(Setting1!=2): #2 means only pi
 */
  __pyx_t_6 = (__pyx_v_Setting3 == 0);
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4539
 *     if(Setting3==0):#Not magnetic
 * 
 *         if(Setting1!=2): #2 means only pi             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_6 = (__pyx_v_Setting1 != 2);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4542
 * 
 * 
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 * 
 *                 if(Setting2): #means absquadr
 */
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4542, __pyx_L1_error)
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4544
 *             if(MultipleScattering):
 * 
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4545
 * 
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4545, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4545, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4545, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_2};
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4545, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __pyx_v_routs = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4546
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4547
 *                     routs=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4547, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4547, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4547, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4547, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4548
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4548, __pyx_L1_error)
            __pyx_t_1 = PyFloat_FromDouble(__pyx_t_11); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4548, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4548, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }

          /* "Pythonreflectivity.pyx":4544
 *             if(MultipleScattering):
 * 
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          goto __pyx_L16;
        }

        /* "Pythonreflectivity.pyx":4550
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_1);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1)) __PYX_ERR(0, 4550, __pyx_L1_error);
          __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4550, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4550, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routs = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4551
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=rss
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4552
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *             else:
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4552, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4552, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4552, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4552, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4553
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4553, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4553, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
        }
        __pyx_L16:;

        /* "Pythonreflectivity.pyx":4542
 * 
 * 
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 * 
 *                 if(Setting2): #means absquadr
 */
        goto __pyx_L15;
      }

      /* "Pythonreflectivity.pyx":4556
 *             else:
 * 
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 * 
 */
      /*else*/ {
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4557
 * 
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 * 
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4557, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4557, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_routs = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4559
 *                     routs=np.zeros(NAngles)
 * 
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4560
 * 
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4560, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4560, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4560, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4560, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4561
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4561, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble(__pyx_t_11); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4561, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4561, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }

          /* "Pythonreflectivity.pyx":4556
 *             else:
 * 
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 * 
 */
          goto __pyx_L21;
        }

        /* "Pythonreflectivity.pyx":4563
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4563, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4563, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4563, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4563, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7)) __PYX_ERR(0, 4563, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4563, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4563, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4563, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4564
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=rss
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4565
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4565, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4565, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4565, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4565, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4566
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4566, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4566, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L21:;
      }
      __pyx_L15:;

      /* "Pythonreflectivity.pyx":4539
 *     if(Setting3==0):#Not magnetic
 * 
 *         if(Setting1!=2): #2 means only pi             # <<<<<<<<<<<<<<
 * 
 * 
 */
    }

    /* "Pythonreflectivity.pyx":4567
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    __pyx_t_6 = (__pyx_v_Setting1 != 1);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4568
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)
 */
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4568, __pyx_L1_error)
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4569
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4570
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4570, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4570, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4571
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4572
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4572, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4572, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4572, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4572, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4573
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4573, __pyx_L1_error)
            __pyx_t_3 = PyFloat_FromDouble(__pyx_t_11); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4573, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4573, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }

          /* "Pythonreflectivity.pyx":4569
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          goto __pyx_L28;
        }

        /* "Pythonreflectivity.pyx":4575
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_3);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3)) __PYX_ERR(0, 4575, __pyx_L1_error);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4575, __pyx_L1_error)
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4575, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4576
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=rpp
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4577
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *             else:
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4577, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4577, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4577, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4577, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4578
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4578, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4578, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
        }
        __pyx_L28:;

        /* "Pythonreflectivity.pyx":4568
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)
 */
        goto __pyx_L27;
      }

      /* "Pythonreflectivity.pyx":4580
 *                         routp[i]=rpp
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
      /*else*/ {
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4581
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4581, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4581, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4582
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4583
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4583, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4583, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4583, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4583, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4584
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4584, __pyx_L1_error)
            __pyx_t_2 = PyFloat_FromDouble(__pyx_t_11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4584, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4584, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }

          /* "Pythonreflectivity.pyx":4580
 *                         routp[i]=rpp
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          goto __pyx_L33;
        }

        /* "Pythonreflectivity.pyx":4586
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_2);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2)) __PYX_ERR(0, 4586, __pyx_L1_error);
          __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4586, __pyx_L1_error)
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4586, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routp = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4587
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=rpp
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4588
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *     else:#Magnetic
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4588, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4588, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4588, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4588, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4589
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *     else:#Magnetic
 *         if(allx):
 */
            __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4589, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4589, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
        }
        __pyx_L33:;
      }
      __pyx_L27:;

      /* "Pythonreflectivity.pyx":4567
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    }

    /* "Pythonreflectivity.pyx":4537
 *     cdef double complex rmat[2][2]
 * 
 *     if(Setting3==0):#Not magnetic             # <<<<<<<<<<<<<<
 * 
 *         if(Setting1!=2): #2 means only pi
 */
    goto __pyx_L13;
  }

  /* "Pythonreflectivity.pyx":4591
 *                         routp[i]=rpp
 *     else:#Magnetic
 *         if(allx):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
  /*else*/ {
    __pyx_t_6 = (__pyx_v_allx != 0);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4592
 *     else:#Magnetic
 *         if(allx):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4592, __pyx_L1_error)
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4593
 *         if(allx):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4594
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4594, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_2};
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4594, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __pyx_v_routs = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4595
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4595, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4595, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4595, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_3};
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4595, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_routp = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4596
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4596, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4596, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4596, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_2};
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4596, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __pyx_v_rempty = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4597
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4598
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4598, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4598, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4598, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4598, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4599
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4599, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4599, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4599, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4599, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4600
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4600, __pyx_L1_error)
            __pyx_t_1 = PyFloat_FromDouble(__pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4600, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4600, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4601
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4601, __pyx_L1_error)
            __pyx_t_1 = PyFloat_FromDouble(__pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4601, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4601, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }

          /* "Pythonreflectivity.pyx":4593
 *         if(allx):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
          goto __pyx_L40;
        }

        /* "Pythonreflectivity.pyx":4603
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_1);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1)) __PYX_ERR(0, 4603, __pyx_L1_error);
          __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4603, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4603, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routs = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4604
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7)) __PYX_ERR(0, 4604, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4604, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4604, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4605
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4605, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4605, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4605, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4605, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_rempty = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4606
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4607
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=rss
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4607, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4607, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4607, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4607, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4608
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *                         routp[i]=rpp
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4608, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4608, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4608, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4608, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4609
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *             else:
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4609, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4609, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4610
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=rss
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4610, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4610, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L40:;

        /* "Pythonreflectivity.pyx":4592
 *     else:#Magnetic
 *         if(allx):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
        goto __pyx_L39;
      }

      /* "Pythonreflectivity.pyx":4612
 *                         routp[i]=rpp
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
      /*else*/ {
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4613
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4613, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_2};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4613, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4614
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4614, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4614, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4614, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4614, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4615
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4615, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_2};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4615, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __pyx_v_rempty = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4616
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4617
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4617, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4617, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4617, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4617, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4618
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4618, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4618, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4618, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4618, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4619
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4619, __pyx_L1_error)
            __pyx_t_3 = PyFloat_FromDouble(__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4619, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4619, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4620
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4620, __pyx_L1_error)
            __pyx_t_3 = PyFloat_FromDouble(__pyx_t_12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4620, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4620, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }

          /* "Pythonreflectivity.pyx":4612
 *                         routp[i]=rpp
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
          goto __pyx_L45;
        }

        /* "Pythonreflectivity.pyx":4622
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4622, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4622, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4622, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4622, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_3);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 4622, __pyx_L1_error);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4622, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4622, __pyx_L1_error)
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4622, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routs = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4623
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_1);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1)) __PYX_ERR(0, 4623, __pyx_L1_error);
          __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4623, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4623, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routp = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4624
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4624, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4624, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_rempty = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4625
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4626
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=rss
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4626, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4626, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4626, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_12, __pyx_t_11); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4626, __pyx_L1_error)
            __pyx_v_rss = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4627
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *                         routp[i]=rpp
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4627, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4627, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4627, __pyx_L1_error)
            __pyx_t_15 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(__pyx_v_A, __pyx_t_11, __pyx_t_12); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4627, __pyx_L1_error)
            __pyx_v_rpp = __pyx_t_15;

            /* "Pythonreflectivity.pyx":4628
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *         elif(ally):
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4628, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4628, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4629
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=rss
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *         elif(ally):
 *             if(MultipleScattering):
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4629, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4629, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
        }
        __pyx_L45:;
      }
      __pyx_L39:;

      /* "Pythonreflectivity.pyx":4591
 *                         routp[i]=rpp
 *     else:#Magnetic
 *         if(allx):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
      goto __pyx_L38;
    }

    /* "Pythonreflectivity.pyx":4630
 *                         routs[i]=rss
 *                         routp[i]=rpp
 *         elif(ally):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    __pyx_t_6 = (__pyx_v_ally != 0);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4631
 *                         routp[i]=rpp
 *         elif(ally):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4631, __pyx_L1_error)
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4632
 *         elif(ally):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4633
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4633, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4633, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routs = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4634
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4634, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4634, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_routp = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4635
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4635, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4635, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4635, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4635, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routl = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4636
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4636, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4636, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_routr = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4637
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4638
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4638, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4638, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4638, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(__pyx_v_A, __pyx_t_12, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4638, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4639
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4639, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4639, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((__pyx_t_11 + __pyx_t_12)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4639, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4639, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4640
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4640, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4640, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((__pyx_t_12 + __pyx_t_11)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4640, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4640, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4641
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4641, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4641, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((0.5 * (__pyx_t_11 + __pyx_t_12))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4641, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4641, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4642
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4642, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4642, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((0.5 * (__pyx_t_12 + __pyx_t_11))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4642, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4642, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }

          /* "Pythonreflectivity.pyx":4632
 *         elif(ally):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
          goto __pyx_L51;
        }

        /* "Pythonreflectivity.pyx":4644
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4644, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4644, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4644, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4644, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7)) __PYX_ERR(0, 4644, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4644, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4644, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4644, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4645
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4645, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4645, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4645, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4645, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_3);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3)) __PYX_ERR(0, 4645, __pyx_L1_error);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4645, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4645, __pyx_L1_error)
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4645, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4646
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_2);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2)) __PYX_ERR(0, 4646, __pyx_L1_error);
          __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4646, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4646, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routl = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4647
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4647, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4647, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4647, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4647, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7)) __PYX_ERR(0, 4647, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4647, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4647, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4647, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routr = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4648
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4649
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4649, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4649, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4649, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(__pyx_v_A, __pyx_t_11, __pyx_t_12, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4649, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4650
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4650, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4650, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4651
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4651, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4651, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4652
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 *             else:
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4652, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4652, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4653
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4653, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4653, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L51:;

        /* "Pythonreflectivity.pyx":4631
 *                         routp[i]=rpp
 *         elif(ally):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
        goto __pyx_L50;
      }

      /* "Pythonreflectivity.pyx":4655
 *                         routr[i]=rmat[1][1]
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
      /*else*/ {
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4656
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4656, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4656, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4656, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4656, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4657
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4657, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4657, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4657, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_1};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4657, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4658
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4658, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4658, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4658, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_7};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4658, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routl = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4659
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4659, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_1};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4659, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __pyx_v_routr = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4660
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4661
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4661, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4661, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4661, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(__pyx_v_A, __pyx_t_12, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4661, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4662
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4662, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4662, __pyx_L1_error)
            __pyx_t_3 = PyFloat_FromDouble((__pyx_t_11 + __pyx_t_12)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4662, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4662, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4663
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4663, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4663, __pyx_L1_error)
            __pyx_t_3 = PyFloat_FromDouble((__pyx_t_12 + __pyx_t_11)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4663, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4663, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4664
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4664, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4664, __pyx_L1_error)
            __pyx_t_3 = PyFloat_FromDouble((0.5 * (__pyx_t_11 + __pyx_t_12))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4664, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4664, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4665
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4665, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4665, __pyx_L1_error)
            __pyx_t_3 = PyFloat_FromDouble((0.5 * (__pyx_t_12 + __pyx_t_11))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4665, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4665, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }

          /* "Pythonreflectivity.pyx":4655
 *                         routr[i]=rmat[1][1]
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
          goto __pyx_L56;
        }

        /* "Pythonreflectivity.pyx":4667
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_3);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3)) __PYX_ERR(0, 4667, __pyx_L1_error);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4667, __pyx_L1_error)
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4667, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routs = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4668
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4668, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4668, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4668, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4668, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_2);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2)) __PYX_ERR(0, 4668, __pyx_L1_error);
          __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4668, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4668, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4668, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routp = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4669
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4669, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4669, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4669, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4669, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7)) __PYX_ERR(0, 4669, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4669, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4669, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4669, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routl = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4670
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4670, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4670, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4670, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4670, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_3);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3)) __PYX_ERR(0, 4670, __pyx_L1_error);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4670, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4670, __pyx_L1_error)
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4670, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routr = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4671
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4672
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4672, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4672, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4672, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(__pyx_v_A, __pyx_t_11, __pyx_t_12, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4672, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4673
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4673, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4673, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4674
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4674, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4674, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4675
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 *         elif(allz):
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4675, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4675, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4676
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 *         elif(allz):
 *             if(MultipleScattering):
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4676, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4676, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
        }
        __pyx_L56:;
      }
      __pyx_L50:;

      /* "Pythonreflectivity.pyx":4630
 *                         routs[i]=rss
 *                         routp[i]=rpp
 *         elif(ally):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
      goto __pyx_L38;
    }

    /* "Pythonreflectivity.pyx":4677
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 *         elif(allz):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    __pyx_t_6 = (__pyx_v_allz != 0);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4678
 *                         routr[i]=rmat[1][1]
 *         elif(allz):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 4678, __pyx_L1_error)
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4679
 *         elif(allz):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4680
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4680, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4680, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4680, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4680, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routs = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4681
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4681, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4681, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4681, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_1};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4681, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4682
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4682, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_3};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4682, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routl = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4683
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4683, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4683, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4683, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_1};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4683, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __pyx_v_routr = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4684
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4685
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4685, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4685, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4685, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(__pyx_v_A, __pyx_t_12, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4685, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4686
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4686, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4686, __pyx_L1_error)
            __pyx_t_2 = PyFloat_FromDouble((__pyx_t_11 + __pyx_t_12)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4686, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4686, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4687
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4687, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4687, __pyx_L1_error)
            __pyx_t_2 = PyFloat_FromDouble((__pyx_t_12 + __pyx_t_11)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4687, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4687, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4688
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4688, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4688, __pyx_L1_error)
            __pyx_t_2 = PyFloat_FromDouble((0.5 * (__pyx_t_11 + __pyx_t_12))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4688, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4688, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4689
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4689, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4689, __pyx_L1_error)
            __pyx_t_2 = PyFloat_FromDouble((0.5 * (__pyx_t_12 + __pyx_t_11))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4689, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4689, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }

          /* "Pythonreflectivity.pyx":4679
 *         elif(allz):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
          goto __pyx_L62;
        }

        /* "Pythonreflectivity.pyx":4691
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_2);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2)) __PYX_ERR(0, 4691, __pyx_L1_error);
          __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4691, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4691, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routs = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4692
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4692, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4692, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4692, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4692, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7)) __PYX_ERR(0, 4692, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4692, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4692, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4692, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4693
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4693, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4693, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4693, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4693, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_3);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3)) __PYX_ERR(0, 4693, __pyx_L1_error);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4693, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4693, __pyx_L1_error)
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4693, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routl = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4694
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_2);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2)) __PYX_ERR(0, 4694, __pyx_L1_error);
          __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4694, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4694, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routr = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4695
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4696
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4696, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4696, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4696, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(__pyx_v_A, __pyx_t_11, __pyx_t_12, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4696, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4697
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4697, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4697, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4698
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4698, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4698, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4699
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 *             else:
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4699, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4699, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4700
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4700, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4700, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
        }
        __pyx_L62:;

        /* "Pythonreflectivity.pyx":4678
 *                         routr[i]=rmat[1][1]
 *         elif(allz):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
        goto __pyx_L61;
      }

      /* "Pythonreflectivity.pyx":4702
 *                         routr[i]=rmat[1][1]
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
      /*else*/ {
        __pyx_t_6 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_6) {

          /* "Pythonreflectivity.pyx":4703
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4703, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4703, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routs = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4704
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4704, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4704, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4704, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4704, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_routp = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4705
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4705, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4705, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4705, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_2};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4705, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __pyx_v_routl = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4706
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4706, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4706, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4706, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4706, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_v_routr = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4707
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4708
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4708, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4708, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4708, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(__pyx_v_A, __pyx_t_12, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4708, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4709
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4709, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4709, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((__pyx_t_11 + __pyx_t_12)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4709, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4709, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4710
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4710, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4710, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((__pyx_t_12 + __pyx_t_11)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4710, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4710, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4711
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4711, __pyx_L1_error)
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4711, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((0.5 * (__pyx_t_11 + __pyx_t_12))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4711, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4711, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4712
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_12 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[0])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4712, __pyx_L1_error)
            __pyx_t_11 = __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum_double(((__pyx_v_rmat[1])[0]), __Pyx_c_prod_double(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1])))); if (unlikely(__pyx_t_11 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4712, __pyx_L1_error)
            __pyx_t_7 = PyFloat_FromDouble((0.5 * (__pyx_t_12 + __pyx_t_11))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4712, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4712, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }

          /* "Pythonreflectivity.pyx":4702
 *                         routr[i]=rmat[1][1]
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
          goto __pyx_L67;
        }

        /* "Pythonreflectivity.pyx":4714
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4714, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4714, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4714, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4714, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7)) __PYX_ERR(0, 4714, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4714, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4714, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4714, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4715
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4715, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4715, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4715, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4715, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_3);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3)) __PYX_ERR(0, 4715, __pyx_L1_error);
          __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4715, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4715, __pyx_L1_error)
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4715, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4716
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_2);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2)) __PYX_ERR(0, 4716, __pyx_L1_error);
          __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4716, __pyx_L1_error)
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4716, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routl = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4717
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4717, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4717, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4717, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4717, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_7);
          if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7)) __PYX_ERR(0, 4717, __pyx_L1_error);
          __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4717, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)(&PyComplex_Type))) < 0) __PYX_ERR(0, 4717, __pyx_L1_error)
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4717, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routr = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4718
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          __pyx_t_13 = __pyx_t_10;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_i = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4719
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4719, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4719, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 4719, __pyx_L1_error)
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(__pyx_v_A, __pyx_t_11, __pyx_t_12, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4719, __pyx_L1_error)

            /* "Pythonreflectivity.pyx":4720
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4720, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4720, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4721
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4721, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4721, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4722
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 * 
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4722, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4722, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4723
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4723, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely((__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0))) __PYX_ERR(0, 4723, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L67:;
      }
      __pyx_L61:;

      /* "Pythonreflectivity.pyx":4677
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 *         elif(allz):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    }
    __pyx_L38:;
  }
  __pyx_L13:;

  /* "Pythonreflectivity.pyx":4726
 * 
 * 
 *     if(allx):             # <<<<<<<<<<<<<<
 *         if(Setting2):
 *             rempty=0.5*(routp+routs)
 */
  __pyx_t_6 = (__pyx_v_allx != 0);
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4727
 * 
 *     if(allx):
 *         if(Setting2):             # <<<<<<<<<<<<<<
 *             rempty=0.5*(routp+routs)
 * 
 */
    __pyx_t_6 = (__pyx_v_Setting2 != 0);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4728
 *     if(allx):
 *         if(Setting2):
 *             rempty=0.5*(routp+routs)             # <<<<<<<<<<<<<<
 * 
 *     if(Setting3==0):
 */
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); __PYX_ERR(0, 4728, __pyx_L1_error) }
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); __PYX_ERR(0, 4728, __pyx_L1_error) }
      __pyx_t_3 = PyNumber_Add(__pyx_v_routp, __pyx_v_routs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4728, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = PyNumber_Multiply(__pyx_float_0_5, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4728, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_rempty, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "Pythonreflectivity.pyx":4727
 * 
 *     if(allx):
 *         if(Setting2):             # <<<<<<<<<<<<<<
 *             rempty=0.5*(routp+routs)
 * 
 */
    }

    /* "Pythonreflectivity.pyx":4726
 * 
 * 
 *     if(allx):             # <<<<<<<<<<<<<<
 *         if(Setting2):
 *             rempty=0.5*(routp+routs)
 */
  }

  /* "Pythonreflectivity.pyx":4730
 *             rempty=0.5*(routp+routs)
 * 
 *     if(Setting3==0):             # <<<<<<<<<<<<<<
 *         if(Setting1==1):
 *             return routs
 */
  __pyx_t_6 = (__pyx_v_Setting3 == 0);
  if (__pyx_t_6) {

    /* "Pythonreflectivity.pyx":4731
 * 
 *     if(Setting3==0):
 *         if(Setting1==1):             # <<<<<<<<<<<<<<
 *             return routs
 *         elif(Setting1==2):
 */
    switch (__pyx_v_Setting1) {
      case 1:

      /* "Pythonreflectivity.pyx":4732
 *     if(Setting3==0):
 *         if(Setting1==1):
 *             return routs             # <<<<<<<<<<<<<<
 *         elif(Setting1==2):
 *             return routp
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); __PYX_ERR(0, 4732, __pyx_L1_error) }
      __Pyx_INCREF(__pyx_v_routs);
      __pyx_r = __pyx_v_routs;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":4731
 * 
 *     if(Setting3==0):
 *         if(Setting1==1):             # <<<<<<<<<<<<<<
 *             return routs
 *         elif(Setting1==2):
 */
      break;
      case 2:

      /* "Pythonreflectivity.pyx":4734
 *             return routs
 *         elif(Setting1==2):
 *             return routp             # <<<<<<<<<<<<<<
 *         elif(Setting1==3):
 *             return [routs, routp]
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); __PYX_ERR(0, 4734, __pyx_L1_error) }
      __Pyx_INCREF(__pyx_v_routp);
      __pyx_r = __pyx_v_routp;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":4733
 *         if(Setting1==1):
 *             return routs
 *         elif(Setting1==2):             # <<<<<<<<<<<<<<
 *             return routp
 *         elif(Setting1==3):
 */
      break;
      case 3:

      /* "Pythonreflectivity.pyx":4736
 *             return routp
 *         elif(Setting1==3):
 *             return [routs, routp]             # <<<<<<<<<<<<<<
 *     else:
 *         if(allx):
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); __PYX_ERR(0, 4736, __pyx_L1_error) }
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); __PYX_ERR(0, 4736, __pyx_L1_error) }
      __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4736, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_v_routs);
      __Pyx_GIVEREF(__pyx_v_routs);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 0, __pyx_v_routs)) __PYX_ERR(0, 4736, __pyx_L1_error);
      __Pyx_INCREF(__pyx_v_routp);
      __Pyx_GIVEREF(__pyx_v_routp);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 1, __pyx_v_routp)) __PYX_ERR(0, 4736, __pyx_L1_error);
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      goto __pyx_L0;

      /* "Pythonreflectivity.pyx":4735
 *         elif(Setting1==2):
 *             return routp
 *         elif(Setting1==3):             # <<<<<<<<<<<<<<
 *             return [routs, routp]
 *     else:
 */
      break;
      default: break;
    }

    /* "Pythonreflectivity.pyx":4730
 *             rempty=0.5*(routp+routs)
 * 
 *     if(Setting3==0):             # <<<<<<<<<<<<<<
 *         if(Setting1==1):
 *             return routs
 */
    goto __pyx_L74;
  }

  /* "Pythonreflectivity.pyx":4738
 *             return [routs, routp]
 *     else:
 *         if(allx):             # <<<<<<<<<<<<<<
 *             if(Setting2):
 *                 return [routs, routp, rempty, rempty]
 */
  /*else*/ {
    __pyx_t_6 = (__pyx_v_allx != 0);
    if (__pyx_t_6) {

      /* "Pythonreflectivity.pyx":4739
 *     else:
 *         if(allx):
 *             if(Setting2):             # <<<<<<<<<<<<<<
 *                 return [routs, routp, rempty, rempty]
 *             else:
 */
      __pyx_t_6 = (__pyx_v_Setting2 != 0);
      if (__pyx_t_6) {

        /* "Pythonreflectivity.pyx":4740
 *         if(allx):
 *             if(Setting2):
 *                 return [routs, routp, rempty, rempty]             # <<<<<<<<<<<<<<
 *             else:
 *                 return [routs, rempty, rempty, routp]
 */
        __Pyx_XDECREF(__pyx_r);
        if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); __PYX_ERR(0, 4740, __pyx_L1_error) }
        if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); __PYX_ERR(0, 4740, __pyx_L1_error) }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); __PYX_ERR(0, 4740, __pyx_L1_error) }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); __PYX_ERR(0, 4740, __pyx_L1_error) }
        __pyx_t_7 = PyList_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4740, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_v_routs);
        __Pyx_GIVEREF(__pyx_v_routs);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 0, __pyx_v_routs)) __PYX_ERR(0, 4740, __pyx_L1_error);
        __Pyx_INCREF(__pyx_v_routp);
        __Pyx_GIVEREF(__pyx_v_routp);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 1, __pyx_v_routp)) __PYX_ERR(0, 4740, __pyx_L1_error);
        __Pyx_INCREF(__pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 2, __pyx_v_rempty)) __PYX_ERR(0, 4740, __pyx_L1_error);
        __Pyx_INCREF(__pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 3, __pyx_v_rempty)) __PYX_ERR(0, 4740, __pyx_L1_error);
        __pyx_r = __pyx_t_7;
        __pyx_t_7 = 0;
        goto __pyx_L0;

        /* "Pythonreflectivity.pyx":4739
 *     else:
 *         if(allx):
 *             if(Setting2):             # <<<<<<<<<<<<<<
 *                 return [routs, routp, rempty, rempty]
 *             else:
 */
      }

      /* "Pythonreflectivity.pyx":4742
 *                 return [routs, routp, rempty, rempty]
 *             else:
 *                 return [routs, rempty, rempty, routp]             # <<<<<<<<<<<<<<
 *         else:
 *             return [routs, routp, routl, routr]
 */
      /*else*/ {
        __Pyx_XDECREF(__pyx_r);
        if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); __PYX_ERR(0, 4742, __pyx_L1_error) }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); __PYX_ERR(0, 4742, __pyx_L1_error) }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); __PYX_ERR(0, 4742, __pyx_L1_error) }
        if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); __PYX_ERR(0, 4742, __pyx_L1_error) }
        __pyx_t_7 = PyList_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4742, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_v_routs);
        __Pyx_GIVEREF(__pyx_v_routs);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 0, __pyx_v_routs)) __PYX_ERR(0, 4742, __pyx_L1_error);
        __Pyx_INCREF(__pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 1, __pyx_v_rempty)) __PYX_ERR(0, 4742, __pyx_L1_error);
        __Pyx_INCREF(__pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 2, __pyx_v_rempty)) __PYX_ERR(0, 4742, __pyx_L1_error);
        __Pyx_INCREF(__pyx_v_routp);
        __Pyx_GIVEREF(__pyx_v_routp);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 3, __pyx_v_routp)) __PYX_ERR(0, 4742, __pyx_L1_error);
        __pyx_r = __pyx_t_7;
        __pyx_t_7 = 0;
        goto __pyx_L0;
      }

      /* "Pythonreflectivity.pyx":4738
 *             return [routs, routp]
 *     else:
 *         if(allx):             # <<<<<<<<<<<<<<
 *             if(Setting2):
 *                 return [routs, routp, rempty, rempty]
 */
    }

    /* "Pythonreflectivity.pyx":4744
 *                 return [routs, rempty, rempty, routp]
 *         else:
 *             return [routs, routp, routl, routr]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); __PYX_ERR(0, 4744, __pyx_L1_error) }
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); __PYX_ERR(0, 4744, __pyx_L1_error) }
      if (unlikely(!__pyx_v_routl)) { __Pyx_RaiseUnboundLocalError("routl"); __PYX_ERR(0, 4744, __pyx_L1_error) }
      if (unlikely(!__pyx_v_routr)) { __Pyx_RaiseUnboundLocalError("routr"); __PYX_ERR(0, 4744, __pyx_L1_error) }
      __pyx_t_7 = PyList_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4744, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_v_routs);
      __Pyx_GIVEREF(__pyx_v_routs);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 0, __pyx_v_routs)) __PYX_ERR(0, 4744, __pyx_L1_error);
      __Pyx_INCREF(__pyx_v_routp);
      __Pyx_GIVEREF(__pyx_v_routp);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 1, __pyx_v_routp)) __PYX_ERR(0, 4744, __pyx_L1_error);
      __Pyx_INCREF(__pyx_v_routl);
      __Pyx_GIVEREF(__pyx_v_routl);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 2, __pyx_v_routl)) __PYX_ERR(0, 4744, __pyx_L1_error);
      __Pyx_INCREF(__pyx_v_routr);
      __Pyx_GIVEREF(__pyx_v_routr);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_7, 3, __pyx_v_routr)) __PYX_ERR(0, 4744, __pyx_L1_error);
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      goto __pyx_L0;
    }
  }
  __pyx_L74:;

  /* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Pythonreflectivity.Reflectivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_routs);
  __Pyx_XDECREF(__pyx_v_routp);
  __Pyx_XDECREF(__pyx_v_rempty);
  __Pyx_XDECREF(__pyx_v_routl);
  __Pyx_XDECREF(__pyx_v_routr);
  __Pyx_XDECREF(__pyx_v_th);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer __pyx_vtable_18Pythonreflectivity_Lowestlayer;

static PyObject *__pyx_tp_new_18Pythonreflectivity_Lowestlayer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_18Pythonreflectivity_Lowestlayer *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)o);
  p->__pyx_vtab = __pyx_vtabptr_18Pythonreflectivity_Lowestlayer;
  new((void*)&(p->Layercontent)) struct __pyx_t_18Pythonreflectivity_CLayer();
  new((void*)&(p->Mother)) struct __pyx_t_18Pythonreflectivity_Heterostructure();
  if (unlikely(__pyx_pw_18Pythonreflectivity_11Lowestlayer_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_18Pythonreflectivity_Lowestlayer(PyObject *o) {
  struct __pyx_obj_18Pythonreflectivity_Lowestlayer *p = (struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_18Pythonreflectivity_Lowestlayer) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_18Pythonreflectivity_11Lowestlayer_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->Layercontent);
  __Pyx_call_destructor(p->Mother);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_18Pythonreflectivity_Lowestlayer[] = {
  {"seteps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_19seteps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"eps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_21eps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setmag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_31setmag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"mag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_33mag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepsxx", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_35setepsxx, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepsyy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_37setepsyy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepszz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_39setepszz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepsg", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_41setepsg, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_43__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_11Lowestlayer_45__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_18Pythonreflectivity_Lowestlayer_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_18Pythonreflectivity_Lowestlayer},
  {Py_tp_methods, (void *)__pyx_methods_18Pythonreflectivity_Lowestlayer},
  {Py_tp_new, (void *)__pyx_tp_new_18Pythonreflectivity_Lowestlayer},
  {0, 0},
};
static PyType_Spec __pyx_type_18Pythonreflectivity_Lowestlayer_spec = {
  "Pythonreflectivity.Lowestlayer",
  sizeof(struct __pyx_obj_18Pythonreflectivity_Lowestlayer),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_18Pythonreflectivity_Lowestlayer_slots,
};
#else

static PyTypeObject __pyx_type_18Pythonreflectivity_Lowestlayer = {
  PyVarObject_HEAD_INIT(0, 0)
  "Pythonreflectivity.""Lowestlayer", /*tp_name*/
  sizeof(struct __pyx_obj_18Pythonreflectivity_Lowestlayer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_18Pythonreflectivity_Lowestlayer, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_18Pythonreflectivity_Lowestlayer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_18Pythonreflectivity_Lowestlayer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_18Pythonreflectivity_Layer __pyx_vtable_18Pythonreflectivity_Layer;

static PyObject *__pyx_tp_new_18Pythonreflectivity_Layer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_18Pythonreflectivity_Layer *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_18Pythonreflectivity_Layer *)o);
  p->__pyx_vtab = __pyx_vtabptr_18Pythonreflectivity_Layer;
  new((void*)&(p->Layercontent)) struct __pyx_t_18Pythonreflectivity_CLayer();
  if (unlikely(__pyx_pw_18Pythonreflectivity_5Layer_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_18Pythonreflectivity_Layer(PyObject *o) {
  struct __pyx_obj_18Pythonreflectivity_Layer *p = (struct __pyx_obj_18Pythonreflectivity_Layer *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_18Pythonreflectivity_Layer) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->Layercontent);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_18Pythonreflectivity_Layer[] = {
  {"seteps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_15seteps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"eps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_17eps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setmag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_27setmag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"mag", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_29mag, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepsxx", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_31setepsxx, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepsyy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_33setepsyy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepszz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_35setepszz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"setepsg", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_37setepsg, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_39__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_18Pythonreflectivity_5Layer_41__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_18Pythonreflectivity_Layer_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_18Pythonreflectivity_Layer},
  {Py_tp_methods, (void *)__pyx_methods_18Pythonreflectivity_Layer},
  {Py_tp_new, (void *)__pyx_tp_new_18Pythonreflectivity_Layer},
  {0, 0},
};
static PyType_Spec __pyx_type_18Pythonreflectivity_Layer_spec = {
  "Pythonreflectivity.Layer",
  sizeof(struct __pyx_obj_18Pythonreflectivity_Layer),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_18Pythonreflectivity_Layer_slots,
};
#else

static PyTypeObject __pyx_type_18Pythonreflectivity_Layer = {
  PyVarObject_HEAD_INIT(0, 0)
  "Pythonreflectivity.""Layer", /*tp_name*/
  sizeof(struct __pyx_obj_18Pythonreflectivity_Layer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_18Pythonreflectivity_Layer, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_18Pythonreflectivity_Layer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_18Pythonreflectivity_Layer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_kp_s_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 0, 1, 0},
    {&__pyx_n_s_A, __pyx_k_A, sizeof(__pyx_k_A), 0, 0, 1, 1},
    {&__pyx_kp_s_Allowed_input_for_setmag_is_x_y, __pyx_k_Allowed_input_for_setmag_is_x_y, sizeof(__pyx_k_Allowed_input_for_setmag_is_x_y), 0, 0, 1, 0},
    {&__pyx_n_s_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 0, 1, 1},
    {&__pyx_kp_s_Brackets_inside_Brackets_are_not, __pyx_k_Brackets_inside_Brackets_are_not, sizeof(__pyx_k_Brackets_inside_Brackets_are_not), 0, 0, 1, 0},
    {&__pyx_n_s_Cutoffquad, __pyx_k_Cutoffquad, sizeof(__pyx_k_Cutoffquad), 0, 0, 1, 1},
    {&__pyx_kp_s_Epsilon_must_be_a_number_or_an_a, __pyx_k_Epsilon_must_be_a_number_or_an_a, sizeof(__pyx_k_Epsilon_must_be_a_number_or_an_a), 0, 0, 1, 0},
    {&__pyx_kp_s_Exception_Magnetic_heterostructu, __pyx_k_Exception_Magnetic_heterostructu, sizeof(__pyx_k_Exception_Magnetic_heterostructu), 0, 0, 1, 0},
    {&__pyx_kp_s_Exception_Multiple_magnetization, __pyx_k_Exception_Multiple_magnetization, sizeof(__pyx_k_Exception_Multiple_magnetization), 0, 0, 1, 0},
    {&__pyx_n_s_Generate_structure, __pyx_k_Generate_structure, sizeof(__pyx_k_Generate_structure), 0, 0, 1, 1},
    {&__pyx_n_s_HS, __pyx_k_HS, sizeof(__pyx_k_HS), 0, 0, 1, 1},
    {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
    {&__pyx_kp_s_Layer, __pyx_k_Layer, sizeof(__pyx_k_Layer), 0, 0, 1, 0},
    {&__pyx_n_s_Layer_2, __pyx_k_Layer_2, sizeof(__pyx_k_Layer_2), 0, 0, 1, 1},
    {&__pyx_n_s_Layer___reduce_cython, __pyx_k_Layer___reduce_cython, sizeof(__pyx_k_Layer___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Layer___setstate_cython, __pyx_k_Layer___setstate_cython, sizeof(__pyx_k_Layer___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_d, __pyx_k_Layer_d, sizeof(__pyx_k_Layer_d), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_eps, __pyx_k_Layer_eps, sizeof(__pyx_k_Layer_eps), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_epsg, __pyx_k_Layer_epsg, sizeof(__pyx_k_Layer_epsg), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_epsxx, __pyx_k_Layer_epsxx, sizeof(__pyx_k_Layer_epsxx), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_epsyy, __pyx_k_Layer_epsyy, sizeof(__pyx_k_Layer_epsyy), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_epszz, __pyx_k_Layer_epszz, sizeof(__pyx_k_Layer_epszz), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_isthisthelowestlayer, __pyx_k_Layer_isthisthelowestlayer, sizeof(__pyx_k_Layer_isthisthelowestlayer), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_layercontentpointer, __pyx_k_Layer_layercontentpointer, sizeof(__pyx_k_Layer_layercontentpointer), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_mag, __pyx_k_Layer_mag, sizeof(__pyx_k_Layer_mag), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_setd, __pyx_k_Layer_setd, sizeof(__pyx_k_Layer_setd), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_seteps, __pyx_k_Layer_seteps, sizeof(__pyx_k_Layer_seteps), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_setepsg, __pyx_k_Layer_setepsg, sizeof(__pyx_k_Layer_setepsg), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_setepsxx, __pyx_k_Layer_setepsxx, sizeof(__pyx_k_Layer_setepsxx), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_setepsyy, __pyx_k_Layer_setepsyy, sizeof(__pyx_k_Layer_setepsyy), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_setepszz, __pyx_k_Layer_setepszz, sizeof(__pyx_k_Layer_setepszz), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_setmag, __pyx_k_Layer_setmag, sizeof(__pyx_k_Layer_setmag), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_setsigma, __pyx_k_Layer_setsigma, sizeof(__pyx_k_Layer_setsigma), 0, 0, 1, 1},
    {&__pyx_n_s_Layer_sigma, __pyx_k_Layer_sigma, sizeof(__pyx_k_Layer_sigma), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer, __pyx_k_Lowestlayer, sizeof(__pyx_k_Lowestlayer), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer___reduce_cython, __pyx_k_Lowestlayer___reduce_cython, sizeof(__pyx_k_Lowestlayer___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer___setstate_cython, __pyx_k_Lowestlayer___setstate_cython, sizeof(__pyx_k_Lowestlayer___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_d, __pyx_k_Lowestlayer_d, sizeof(__pyx_k_Lowestlayer_d), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_eg, __pyx_k_Lowestlayer_eg, sizeof(__pyx_k_Lowestlayer_eg), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_eps, __pyx_k_Lowestlayer_eps, sizeof(__pyx_k_Lowestlayer_eps), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_epsxx, __pyx_k_Lowestlayer_epsxx, sizeof(__pyx_k_Lowestlayer_epsxx), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_epsyy, __pyx_k_Lowestlayer_epsyy, sizeof(__pyx_k_Lowestlayer_epsyy), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_epszz, __pyx_k_Lowestlayer_epszz, sizeof(__pyx_k_Lowestlayer_epszz), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_isthisthelowestlayer, __pyx_k_Lowestlayer_isthisthelowestlayer, sizeof(__pyx_k_Lowestlayer_isthisthelowestlayer), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_layercontentpointer, __pyx_k_Lowestlayer_layercontentpointer, sizeof(__pyx_k_Lowestlayer_layercontentpointer), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_mag, __pyx_k_Lowestlayer_mag, sizeof(__pyx_k_Lowestlayer_mag), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_motherpointer, __pyx_k_Lowestlayer_motherpointer, sizeof(__pyx_k_Lowestlayer_motherpointer), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_setd, __pyx_k_Lowestlayer_setd, sizeof(__pyx_k_Lowestlayer_setd), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_seteps, __pyx_k_Lowestlayer_seteps, sizeof(__pyx_k_Lowestlayer_seteps), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_setepsg, __pyx_k_Lowestlayer_setepsg, sizeof(__pyx_k_Lowestlayer_setepsg), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_setepsxx, __pyx_k_Lowestlayer_setepsxx, sizeof(__pyx_k_Lowestlayer_setepsxx), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_setepsyy, __pyx_k_Lowestlayer_setepsyy, sizeof(__pyx_k_Lowestlayer_setepsyy), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_setepszz, __pyx_k_Lowestlayer_setepszz, sizeof(__pyx_k_Lowestlayer_setepszz), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_setmag, __pyx_k_Lowestlayer_setmag, sizeof(__pyx_k_Lowestlayer_setmag), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_setsigma, __pyx_k_Lowestlayer_setsigma, sizeof(__pyx_k_Lowestlayer_setsigma), 0, 0, 1, 1},
    {&__pyx_n_s_Lowestlayer_sigma, __pyx_k_Lowestlayer_sigma, sizeof(__pyx_k_Lowestlayer_sigma), 0, 0, 1, 1},
    {&__pyx_n_s_MLstructure, __pyx_k_MLstructure, sizeof(__pyx_k_MLstructure), 0, 0, 1, 1},
    {&__pyx_n_s_MagneticCutoff, __pyx_k_MagneticCutoff, sizeof(__pyx_k_MagneticCutoff), 0, 0, 1, 1},
    {&__pyx_kp_s_Magnetized_along_the_x_direction, __pyx_k_Magnetized_along_the_x_direction, sizeof(__pyx_k_Magnetized_along_the_x_direction), 0, 0, 1, 0},
    {&__pyx_kp_s_Magnetized_along_the_y_direction, __pyx_k_Magnetized_along_the_y_direction, sizeof(__pyx_k_Magnetized_along_the_y_direction), 0, 0, 1, 0},
    {&__pyx_kp_s_Magnetized_along_the_z_direction, __pyx_k_Magnetized_along_the_z_direction, sizeof(__pyx_k_Magnetized_along_the_z_direction), 0, 0, 1, 0},
    {&__pyx_n_s_MultipleScattering, __pyx_k_MultipleScattering, sizeof(__pyx_k_MultipleScattering), 0, 0, 1, 1},
    {&__pyx_n_s_NAngles, __pyx_k_NAngles, sizeof(__pyx_k_NAngles), 0, 0, 1, 1},
    {&__pyx_n_s_NL_types, __pyx_k_NL_types, sizeof(__pyx_k_NL_types), 0, 0, 1, 1},
    {&__pyx_n_s_NLayers, __pyx_k_NLayers, sizeof(__pyx_k_NLayers), 0, 0, 1, 1},
    {&__pyx_n_s_NLayers_types, __pyx_k_NLayers_types, sizeof(__pyx_k_NLayers_types), 0, 0, 1, 1},
    {&__pyx_kp_s_No_magnetization_has_been_set, __pyx_k_No_magnetization_has_been_set, sizeof(__pyx_k_No_magnetization_has_been_set), 0, 0, 1, 0},
    {&__pyx_n_s_Output, __pyx_k_Output, sizeof(__pyx_k_Output), 0, 0, 1, 1},
    {&__pyx_n_s_P, __pyx_k_P, sizeof(__pyx_k_P), 0, 0, 1, 1},
    {&__pyx_kp_s_Please_generate_at_least_one_lay, __pyx_k_Please_generate_at_least_one_lay, sizeof(__pyx_k_Please_generate_at_least_one_lay), 0, 0, 1, 0},
    {&__pyx_kp_s_Please_use_setmag_to_set_a_magne, __pyx_k_Please_use_setmag_to_set_a_magne, sizeof(__pyx_k_Please_use_setmag_to_set_a_magne), 0, 0, 1, 0},
    {&__pyx_n_s_Pythonreflectivity, __pyx_k_Pythonreflectivity, sizeof(__pyx_k_Pythonreflectivity), 0, 0, 1, 1},
    {&__pyx_n_s_Reflectivity, __pyx_k_Reflectivity, sizeof(__pyx_k_Reflectivity), 0, 0, 1, 1},
    {&__pyx_n_s_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 1, 1},
    {&__pyx_n_s_Setting1, __pyx_k_Setting1, sizeof(__pyx_k_Setting1), 0, 0, 1, 1},
    {&__pyx_n_s_Setting2, __pyx_k_Setting2, sizeof(__pyx_k_Setting2), 0, 0, 1, 1},
    {&__pyx_n_s_Setting3, __pyx_k_Setting3, sizeof(__pyx_k_Setting3), 0, 0, 1, 1},
    {&__pyx_kp_s_Something_is_wrong_with_the_Mult, __pyx_k_Something_is_wrong_with_the_Mult, sizeof(__pyx_k_Something_is_wrong_with_the_Mult), 0, 0, 1, 0},
    {&__pyx_kp_s_Substrate_as_Multilayer_is_ill_d, __pyx_k_Substrate_as_Multilayer_is_ill_d, sizeof(__pyx_k_Substrate_as_Multilayer_is_ill_d), 0, 0, 1, 0},
    {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
    {&__pyx_kp_s_Theta_must_be_in_the_range_0_the, __pyx_k_Theta_must_be_in_the_range_0_the, sizeof(__pyx_k_Theta_must_be_in_the_range_0_the), 0, 0, 1, 0},
    {&__pyx_kp_s_Theta_must_be_in_the_range_0_the_2, __pyx_k_Theta_must_be_in_the_range_0_the_2, sizeof(__pyx_k_Theta_must_be_in_the_range_0_the_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Theta_must_be_in_the_range_0_the_3, __pyx_k_Theta_must_be_in_the_range_0_the_3, sizeof(__pyx_k_Theta_must_be_in_the_range_0_the_3), 0, 0, 1, 0},
    {&__pyx_kp_s_This_layer_is_not_magnetic, __pyx_k_This_layer_is_not_magnetic, sizeof(__pyx_k_This_layer_is_not_magnetic), 0, 0, 1, 0},
    {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
    {&__pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_k_UTILS_Pythonreflectivity_pyx, sizeof(__pyx_k_UTILS_Pythonreflectivity_pyx), 0, 0, 1, 0},
    {&__pyx_kp_s_Underlying_structure_not_initial, __pyx_k_Underlying_structure_not_initial, sizeof(__pyx_k_Underlying_structure_not_initial), 0, 0, 1, 0},
    {&__pyx_n_s__21, __pyx_k__21, sizeof(__pyx_k__21), 0, 0, 1, 1},
    {&__pyx_kp_s__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 0, 1, 0},
    {&__pyx_kp_s__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 0, 1, 0},
    {&__pyx_kp_s__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 1, 0},
    {&__pyx_kp_s__6, __pyx_k__6, sizeof(__pyx_k__6), 0, 0, 1, 0},
    {&__pyx_n_s__78, __pyx_k__78, sizeof(__pyx_k__78), 0, 0, 1, 1},
    {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
    {&__pyx_n_s_allx, __pyx_k_allx, sizeof(__pyx_k_allx), 0, 0, 1, 1},
    {&__pyx_n_s_ally, __pyx_k_ally, sizeof(__pyx_k_ally), 0, 0, 1, 1},
    {&__pyx_n_s_allz, __pyx_k_allz, sizeof(__pyx_k_allz), 0, 0, 1, 1},
    {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_n_s_class_getitem, __pyx_k_class_getitem, sizeof(__pyx_k_class_getitem), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_ctypes, __pyx_k_ctypes, sizeof(__pyx_k_ctypes), 0, 0, 1, 1},
    {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
    {&__pyx_n_s_default, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
    {&__pyx_n_s_dir, __pyx_k_dir, sizeof(__pyx_k_dir), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
    {&__pyx_n_s_eg, __pyx_k_eg, sizeof(__pyx_k_eg), 0, 0, 1, 1},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_eps, __pyx_k_eps, sizeof(__pyx_k_eps), 0, 0, 1, 1},
    {&__pyx_n_s_epsg, __pyx_k_epsg, sizeof(__pyx_k_epsg), 0, 0, 1, 1},
    {&__pyx_n_s_epsilon, __pyx_k_epsilon, sizeof(__pyx_k_epsilon), 0, 0, 1, 1},
    {&__pyx_n_s_epsxx, __pyx_k_epsxx, sizeof(__pyx_k_epsxx), 0, 0, 1, 1},
    {&__pyx_n_s_epsyy, __pyx_k_epsyy, sizeof(__pyx_k_epsyy), 0, 0, 1, 1},
    {&__pyx_n_s_epszz, __pyx_k_epszz, sizeof(__pyx_k_epszz), 0, 0, 1, 1},
    {&__pyx_n_s_find, __pyx_k_find, sizeof(__pyx_k_find), 0, 0, 1, 1},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
    {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_kp_s_in_Multilayer_structure_string, __pyx_k_in_Multilayer_structure_string, sizeof(__pyx_k_in_Multilayer_structure_string), 0, 0, 1, 0},
    {&__pyx_n_s_initializing, __pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 0, 1, 1},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_s_isthisthelowestlayer, __pyx_k_isthisthelowestlayer, sizeof(__pyx_k_isthisthelowestlayer), 0, 0, 1, 1},
    {&__pyx_n_s_layercontentpointer, __pyx_k_layercontentpointer, sizeof(__pyx_k_layercontentpointer), 0, 0, 1, 1},
    {&__pyx_n_s_len, __pyx_k_len, sizeof(__pyx_k_len), 0, 0, 1, 1},
    {&__pyx_n_s_mag, __pyx_k_mag, sizeof(__pyx_k_mag), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_motherpointer, __pyx_k_motherpointer, sizeof(__pyx_k_motherpointer), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
    {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
    {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
    {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
    {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
    {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
    {&__pyx_n_s_rempty, __pyx_k_rempty, sizeof(__pyx_k_rempty), 0, 0, 1, 1},
    {&__pyx_n_s_rmat, __pyx_k_rmat, sizeof(__pyx_k_rmat), 0, 0, 1, 1},
    {&__pyx_n_s_routl, __pyx_k_routl, sizeof(__pyx_k_routl), 0, 0, 1, 1},
    {&__pyx_n_s_routp, __pyx_k_routp, sizeof(__pyx_k_routp), 0, 0, 1, 1},
    {&__pyx_n_s_routr, __pyx_k_routr, sizeof(__pyx_k_routr), 0, 0, 1, 1},
    {&__pyx_n_s_routs, __pyx_k_routs, sizeof(__pyx_k_routs), 0, 0, 1, 1},
    {&__pyx_n_s_rpp, __pyx_k_rpp, sizeof(__pyx_k_rpp), 0, 0, 1, 1},
    {&__pyx_n_s_rss, __pyx_k_rss, sizeof(__pyx_k_rss), 0, 0, 1, 1},
    {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
    {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
    {&__pyx_n_s_setd, __pyx_k_setd, sizeof(__pyx_k_setd), 0, 0, 1, 1},
    {&__pyx_n_s_seteps, __pyx_k_seteps, sizeof(__pyx_k_seteps), 0, 0, 1, 1},
    {&__pyx_n_s_setepsg, __pyx_k_setepsg, sizeof(__pyx_k_setepsg), 0, 0, 1, 1},
    {&__pyx_n_s_setepsxx, __pyx_k_setepsxx, sizeof(__pyx_k_setepsxx), 0, 0, 1, 1},
    {&__pyx_n_s_setepsyy, __pyx_k_setepsyy, sizeof(__pyx_k_setepsyy), 0, 0, 1, 1},
    {&__pyx_n_s_setepszz, __pyx_k_setepszz, sizeof(__pyx_k_setepszz), 0, 0, 1, 1},
    {&__pyx_n_s_setmag, __pyx_k_setmag, sizeof(__pyx_k_setmag), 0, 0, 1, 1},
    {&__pyx_n_s_setsigma, __pyx_k_setsigma, sizeof(__pyx_k_setsigma), 0, 0, 1, 1},
    {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
    {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_sigma, __pyx_k_sigma, sizeof(__pyx_k_sigma), 0, 0, 1, 1},
    {&__pyx_n_s_spec, __pyx_k_spec, sizeof(__pyx_k_spec), 0, 0, 1, 1},
    {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
    {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
    {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_th, __pyx_k_th, sizeof(__pyx_k_th), 0, 0, 1, 1},
    {&__pyx_n_s_wavelength, __pyx_k_wavelength, sizeof(__pyx_k_wavelength), 0, 0, 1, 1},
    {&__pyx_n_s_wl, __pyx_k_wl, sizeof(__pyx_k_wl), 0, 0, 1, 1},
    {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
    {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
    {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
    {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 64, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 984, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":984
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple_)) __PYX_ERR(2, 984, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "../../../../../tmp/pip-build-env-f60ik25e/overlay/lib/python3.12/site-packages/numpy/__init__.cython-30.pxd":990
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(2, 990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "Pythonreflectivity.pyx":168
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=epsilon[3]
 * 
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_Please_use_setmag_to_set_a_magne); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "Pythonreflectivity.pyx":174
 * 
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')             # <<<<<<<<<<<<<<
 *         else:
 *             self.Layercontent.type=1
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_Epsilon_must_be_a_number_or_an_a); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "Pythonreflectivity.pyx":209
 *             self.Layercontent.magdir=0
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")             # <<<<<<<<<<<<<<
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_Allowed_input_for_setmag_is_x_y); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "Pythonreflectivity.pyx":461
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "Pythonreflectivity.pyx":762
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")             # <<<<<<<<<<<<<<
 *     if(th==0):
 *         return 1.0
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_2); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "Pythonreflectivity.pyx":1327
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_3); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 1327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "Pythonreflectivity.pyx":4340
 *         if(IsInBracket):
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")             # <<<<<<<<<<<<<<
 *             if(string[i]==')'):
 *                 IsInBracket=False
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_Brackets_inside_Brackets_are_not); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 4340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "Pythonreflectivity.pyx":4345
 *         else:
 *             if(string[i]==')'):
 *                 raise Exception("Something is wrong with the Multilayer brackets")             # <<<<<<<<<<<<<<
 *             if(string[i]=='('):
 *                 IsInBracket=True
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_Something_is_wrong_with_the_Mult); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 4345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "Pythonreflectivity.pyx":4358
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):
 *         raise Exception("Substrate as Multilayer is ill-defined")             # <<<<<<<<<<<<<<
 * 
 *     return 0
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_Substrate_as_Multilayer_is_ill_d); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 4358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "Pythonreflectivity.pyx":4439
 * #    cdef Heterostructure STR
 *     if(NLayers_types<=0):
 *         raise Exception("Please generate at least one layer!")             # <<<<<<<<<<<<<<
 * 
 *     cdef int i
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_Please_generate_at_least_one_lay); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 4439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "Pythonreflectivity.pyx":4445
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):
 *         HS[i]=Layer(0,0)             # <<<<<<<<<<<<<<
 * 
 *   #  HS[0].initstructure(MLstructure, NLayers_types)
 */
  __pyx_tuple__17 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 4445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "Pythonreflectivity.pyx":4454
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")             # <<<<<<<<<<<<<<
 * 
 *     if(hasattr(th, "__len__")==False):
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_Underlying_structure_not_initial); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 4454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "Pythonreflectivity.pyx":4513
 *                 allz=1
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')             # <<<<<<<<<<<<<<
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff
 * 
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_Exception_Magnetic_heterostructu); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 4513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "Pythonreflectivity.pyx":4526
 * 
 *     if((ally&allz)|(ally&allx)|(allx&allz)):
 *         raise Exception('Exception! Multiple magnetization directions are so far not supported!')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_Exception_Multiple_magnetization); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 4526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "Pythonreflectivity.pyx":126
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);
  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_isthisthelowestlayer, 126, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) __PYX_ERR(0, 126, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":128
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 */
  __pyx_codeobj__24 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_layercontentpointer, 128, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__24)) __PYX_ERR(0, 128, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":130
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 */
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_motherpointer, 130, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(0, 130, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":132
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */
  __pyx_codeobj__26 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_d, 132, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__26)) __PYX_ERR(0, 132, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":134
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */
  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_d); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);
  __pyx_codeobj__28 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__27, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setd, 134, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__28)) __PYX_ERR(0, 134, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":136
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_sigma, 136, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(0, 136, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":138
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_sigma); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setsigma, 138, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(0, 138, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":140
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */
  __pyx_tuple__32 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_epsilon); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_seteps, 140, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(0, 140, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":180
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_wl); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_eps, 180, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(0, 180, __pyx_L1_error)
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_int_neg_1); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "Pythonreflectivity.pyx":187
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_epsxx, 187, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(0, 187, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":189
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_epsyy, 189, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(0, 189, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":191
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 */
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_epszz, 191, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(0, 191, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":193
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_eg, 193, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(0, 193, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":199
 * 
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */
  __pyx_tuple__41 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_dir); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setmag, 199, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(0, 199, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":210
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_mag, 210, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(0, 210, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":226
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */
  __pyx_tuple__44 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_x); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepsxx, 226, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(0, 226, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":228
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */
  __pyx_codeobj__46 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepsyy, 228, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__46)) __PYX_ERR(0, 228, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":230
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepszz, 230, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(0, 230, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":232
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */
  __pyx_codeobj__48 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepsg, 232, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__48)) __PYX_ERR(0, 232, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_tuple__50 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":273
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_isthisthelowestlayer, 273, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) __PYX_ERR(0, 273, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":275
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 */
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_layercontentpointer, 275, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 275, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":277
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_d, 277, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) __PYX_ERR(0, 277, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":279
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__27, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setd, 279, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(0, 279, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":281
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */
  __pyx_codeobj__56 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_sigma, 281, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__56)) __PYX_ERR(0, 281, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":283
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setsigma, 283, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(0, 283, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":285
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */
  __pyx_codeobj__58 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_seteps, 285, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__58)) __PYX_ERR(0, 285, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":321
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_eps, 321, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(0, 321, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":328
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */
  __pyx_codeobj__60 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_epsxx, 328, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__60)) __PYX_ERR(0, 328, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":330
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_epsyy, 330, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(0, 330, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":332
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 */
  __pyx_codeobj__62 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_epszz, 332, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__62)) __PYX_ERR(0, 332, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":334
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_epsg, 334, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(0, 334, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":337
 *         return self.Layercontent.eg
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setmag, 337, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 337, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":348
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_mag, 348, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(0, 348, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":364
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepsxx, 364, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(0, 364, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":366
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepsyy, 366, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 366, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":368
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */
  __pyx_codeobj__68 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepszz, 368, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__68)) __PYX_ERR(0, 368, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":370
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_setepsg, 370, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(0, 370, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__70 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__22, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__70)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__72 = PyTuple_Pack(5, __pyx_n_s_NLayers_types, __pyx_n_s_MLstructure, __pyx_n_s_i, __pyx_n_s_HS, __pyx_n_s_i); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(0, 4432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_Generate_structure, 4432, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(0, 4432, __pyx_L1_error)
  __pyx_tuple__74 = PyTuple_Pack(1, ((PyObject*)__pyx_n_s_default)); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(0, 4432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);

  /* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */
  __pyx_tuple__75 = PyTuple_Pack(28, __pyx_n_s_HS, __pyx_n_s_th, __pyx_n_s_wavelength, __pyx_n_s_MultipleScattering, __pyx_n_s_MagneticCutoff, __pyx_n_s_Output, __pyx_n_s_NAngles, __pyx_n_s_a, __pyx_n_s_A, __pyx_n_s_B, __pyx_n_s_NLayers, __pyx_n_s_NLayers_types, __pyx_n_s_i, __pyx_n_s_allx, __pyx_n_s_ally, __pyx_n_s_allz, __pyx_n_s_Cutoffquad, __pyx_n_s_Setting1, __pyx_n_s_Setting2, __pyx_n_s_Setting3, __pyx_n_s_rss, __pyx_n_s_rpp, __pyx_n_s_rmat, __pyx_n_s_routs, __pyx_n_s_routp, __pyx_n_s_rempty, __pyx_n_s_routl, __pyx_n_s_routr); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 4451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);
  __pyx_codeobj__76 = (PyObject*)__Pyx_PyCode_New(6, 0, 0, 28, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_UTILS_Pythonreflectivity_pyx, __pyx_n_s_Reflectivity, 4451, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__76)) __PYX_ERR(0, 4451, __pyx_L1_error)
  __pyx_tuple__77 = PyTuple_Pack(3, ((PyObject *)__pyx_int_1), ((PyObject*)__pyx_float_1_0Eneg_6), ((PyObject*)__pyx_n_s_T)); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(0, 4451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_0Eneg_6 = PyFloat_FromDouble(1.0E-6); if (unlikely(!__pyx_float_1_0Eneg_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  return 0;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_18Pythonreflectivity_Lowestlayer = &__pyx_vtable_18Pythonreflectivity_Lowestlayer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.isthisthelowestlayer = (int (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.layercontentpointer = (long (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.motherpointer = (long (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.d = (double (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_d;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.setd = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_setd;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.sigma = (double (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_sigma;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.setsigma = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.epsxx = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.epsyy = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.epszz = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_epszz;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.eg = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_eg;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.GetType = (int (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *))__pyx_f_18Pythonreflectivity_11Lowestlayer_GetType;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.dir = (int (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *))__pyx_f_18Pythonreflectivity_11Lowestlayer_dir;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_18Pythonreflectivity_Lowestlayer = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_18Pythonreflectivity_Lowestlayer_spec, NULL); if (unlikely(!__pyx_ptype_18Pythonreflectivity_Lowestlayer)) __PYX_ERR(0, 37, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_18Pythonreflectivity_Lowestlayer_spec, __pyx_ptype_18Pythonreflectivity_Lowestlayer) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  #else
  __pyx_ptype_18Pythonreflectivity_Lowestlayer = &__pyx_type_18Pythonreflectivity_Lowestlayer;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_18Pythonreflectivity_Lowestlayer) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_18Pythonreflectivity_Lowestlayer->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_18Pythonreflectivity_Lowestlayer->tp_dictoffset && __pyx_ptype_18Pythonreflectivity_Lowestlayer->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_18Pythonreflectivity_Lowestlayer->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_vtabptr_18Pythonreflectivity_Lowestlayer) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_18Pythonreflectivity_Lowestlayer) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Lowestlayer, (PyObject *) __pyx_ptype_18Pythonreflectivity_Lowestlayer) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_18Pythonreflectivity_Lowestlayer) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  #endif
  __pyx_vtabptr_18Pythonreflectivity_Layer = &__pyx_vtable_18Pythonreflectivity_Layer;
  __pyx_vtable_18Pythonreflectivity_Layer.isthisthelowestlayer = (int (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer;
  __pyx_vtable_18Pythonreflectivity_Layer.layercontentpointer = (long (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_layercontentpointer;
  __pyx_vtable_18Pythonreflectivity_Layer.d = (double (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_d;
  __pyx_vtable_18Pythonreflectivity_Layer.setd = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_setd;
  __pyx_vtable_18Pythonreflectivity_Layer.sigma = (double (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_sigma;
  __pyx_vtable_18Pythonreflectivity_Layer.setsigma = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_setsigma;
  __pyx_vtable_18Pythonreflectivity_Layer.epsxx = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epsxx;
  __pyx_vtable_18Pythonreflectivity_Layer.epsyy = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epsyy;
  __pyx_vtable_18Pythonreflectivity_Layer.epszz = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epszz;
  __pyx_vtable_18Pythonreflectivity_Layer.epsg = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epsg;
  __pyx_vtable_18Pythonreflectivity_Layer.GetType = (int (*)(struct __pyx_obj_18Pythonreflectivity_Layer *))__pyx_f_18Pythonreflectivity_5Layer_GetType;
  __pyx_vtable_18Pythonreflectivity_Layer.dir = (int (*)(struct __pyx_obj_18Pythonreflectivity_Layer *))__pyx_f_18Pythonreflectivity_5Layer_dir;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_18Pythonreflectivity_Layer = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_18Pythonreflectivity_Layer_spec, NULL); if (unlikely(!__pyx_ptype_18Pythonreflectivity_Layer)) __PYX_ERR(0, 260, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_18Pythonreflectivity_Layer_spec, __pyx_ptype_18Pythonreflectivity_Layer) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  #else
  __pyx_ptype_18Pythonreflectivity_Layer = &__pyx_type_18Pythonreflectivity_Layer;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_18Pythonreflectivity_Layer) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_18Pythonreflectivity_Layer->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_18Pythonreflectivity_Layer->tp_dictoffset && __pyx_ptype_18Pythonreflectivity_Layer->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_18Pythonreflectivity_Layer->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_18Pythonreflectivity_Layer, __pyx_vtabptr_18Pythonreflectivity_Layer) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_18Pythonreflectivity_Layer) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Layer_2, (PyObject *) __pyx_ptype_18Pythonreflectivity_Layer) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_18Pythonreflectivity_Layer) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  #endif
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType_3_0_11(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyTypeObject),
  #elif CYTHON_COMPILING_IN_LIMITED_API
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(3, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyArray_Descr),__Pyx_ImportType_CheckSize_Ignore_3_0_11); if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(2, 202, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyArrayIterObject),__Pyx_ImportType_CheckSize_Ignore_3_0_11); if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(2, 225, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyArrayMultiIterObject),__Pyx_ImportType_CheckSize_Ignore_3_0_11); if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(2, 229, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyArrayObject),__Pyx_ImportType_CheckSize_Ignore_3_0_11); if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(2, 238, __pyx_L1_error)
  __pyx_ptype_5numpy_generic = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_generic) __PYX_ERR(2, 809, __pyx_L1_error)
  __pyx_ptype_5numpy_number = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "number", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_number) __PYX_ERR(2, 811, __pyx_L1_error)
  __pyx_ptype_5numpy_integer = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_integer) __PYX_ERR(2, 813, __pyx_L1_error)
  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(2, 815, __pyx_L1_error)
  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(2, 817, __pyx_L1_error)
  __pyx_ptype_5numpy_inexact = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(2, 819, __pyx_L1_error)
  __pyx_ptype_5numpy_floating = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_floating) __PYX_ERR(2, 821, __pyx_L1_error)
  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(2, 823, __pyx_L1_error)
  __pyx_ptype_5numpy_flexible = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(2, 825, __pyx_L1_error)
  __pyx_ptype_5numpy_character = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "character", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_5numpy_character) __PYX_ERR(2, 827, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType_3_0_11(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyUFuncObject),__Pyx_ImportType_CheckSize_Ignore_3_0_11); if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(2, 866, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_Pythonreflectivity(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_Pythonreflectivity},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "Pythonreflectivity",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initPythonreflectivity(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initPythonreflectivity(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_Pythonreflectivity(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_Pythonreflectivity(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_Pythonreflectivity(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'Pythonreflectivity' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("Pythonreflectivity", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "Pythonreflectivity" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = __Pyx_PyImport_AddModuleRef((const char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_Pythonreflectivity(void)", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_Pythonreflectivity) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "Pythonreflectivity")) {
      if (unlikely((PyDict_SetItemString(modules, "Pythonreflectivity", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely((__Pyx_modinit_type_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "Pythonreflectivity.pyx":4
 * from libc.stdlib cimport malloc, free
 * cimport numpy as np
 * import numpy as np             # <<<<<<<<<<<<<<
 * np.import_array()
 * import ctypes
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_numpy, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":5
 * cimport numpy as np
 * import numpy as np
 * np.import_array()             # <<<<<<<<<<<<<<
 * import ctypes
 * from numpy cimport ndarray
 */
  __pyx_t_3 = __pyx_f_5numpy_import_array(); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 5, __pyx_L1_error)

  /* "Pythonreflectivity.pyx":6
 * import numpy as np
 * np.import_array()
 * import ctypes             # <<<<<<<<<<<<<<
 * from numpy cimport ndarray
 * 
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_ctypes, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ctypes, __pyx_t_2) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":24
 * 
 * 
 * cdef double two_times_pi=6.283185307179586             # <<<<<<<<<<<<<<
 * cdef double deg_to_rad=0.017453292522222223
 * 
 */
  __pyx_v_18Pythonreflectivity_two_times_pi = 6.283185307179586;

  /* "Pythonreflectivity.pyx":25
 * 
 * cdef double two_times_pi=6.283185307179586
 * cdef double deg_to_rad=0.017453292522222223             # <<<<<<<<<<<<<<
 * 
 * cdef struct Heterostructure:
 */
  __pyx_v_18Pythonreflectivity_deg_to_rad = 0.017453292522222223;

  /* "Pythonreflectivity.pyx":126
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_isthisthelowestlayer, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__23)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_isthisthelowestlayer, __pyx_t_2) < 0) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":128
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_7layercontentpointer, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_layercontentpointer, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__24)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_layercontentpointer, __pyx_t_2) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":130
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_9motherpointer, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_motherpointer, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__25)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_motherpointer, __pyx_t_2) < 0) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":132
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_11d, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_d, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__26)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_d, __pyx_t_2) < 0) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":134
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_13setd, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_setd, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__28)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_setd, __pyx_t_2) < 0) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":136
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_15sigma, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_sigma, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__29)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_sigma, __pyx_t_2) < 0) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":138
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_17setsigma, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_setsigma, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__31)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_setsigma, __pyx_t_2) < 0) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":140
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_19seteps, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_seteps, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__33)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_seteps, __pyx_t_2) < 0) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":180
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_21eps, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_eps, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__35)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__36);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_eps, __pyx_t_2) < 0) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":187
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_23epsxx, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_epsxx, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__37)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_epsxx, __pyx_t_2) < 0) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":189
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_25epsyy, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_epsyy, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__38)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_epsyy, __pyx_t_2) < 0) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":191
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_27epszz, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_epszz, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__39)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_epszz, __pyx_t_2) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":193
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_29eg, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_eg, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__40)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_eg, __pyx_t_2) < 0) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":199
 * 
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_31setmag, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_setmag, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__42)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_setmag, __pyx_t_2) < 0) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":210
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_33mag, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_mag, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__43)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_mag, __pyx_t_2) < 0) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":226
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_35setepsxx, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_setepsxx, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_setepsxx, __pyx_t_2) < 0) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":228
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_37setepsyy, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_setepsyy, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__46)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_setepsyy, __pyx_t_2) < 0) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":230
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_39setepszz, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_setepszz, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__47)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_setepszz, __pyx_t_2) < 0) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "Pythonreflectivity.pyx":232
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_41setepsg, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer_setepsg, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__48)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Lowestlayer, __pyx_n_s_setepsg, __pyx_t_2) < 0) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Lowestlayer);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_43__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer___reduce_cython, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__49)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_11Lowestlayer_45__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Lowestlayer___setstate_cython, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__51)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":273
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_3isthisthelowestlayer, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_isthisthelowestlayer, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__52)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_isthisthelowestlayer, __pyx_t_2) < 0) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":275
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_5layercontentpointer, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_layercontentpointer, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__53)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_layercontentpointer, __pyx_t_2) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":277
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_7d, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_d, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__54)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_d, __pyx_t_2) < 0) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":279
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_9setd, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_setd, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__55)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_setd, __pyx_t_2) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":281
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_11sigma, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_sigma, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__56)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_sigma, __pyx_t_2) < 0) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":283
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_13setsigma, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_setsigma, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__57)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_setsigma, __pyx_t_2) < 0) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":285
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_15seteps, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_seteps, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__58)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_seteps, __pyx_t_2) < 0) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":321
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_17eps, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_eps, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__59)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_eps, __pyx_t_2) < 0) __PYX_ERR(0, 321, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":328
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_19epsxx, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_epsxx, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__60)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_epsxx, __pyx_t_2) < 0) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":330
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_21epsyy, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_epsyy, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_epsyy, __pyx_t_2) < 0) __PYX_ERR(0, 330, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":332
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_23epszz, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_epszz, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__62)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_epszz, __pyx_t_2) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":334
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_25epsg, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_epsg, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__63)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_epsg, __pyx_t_2) < 0) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":337
 *         return self.Layercontent.eg
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_27setmag, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_setmag, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__64)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_setmag, __pyx_t_2) < 0) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":348
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_29mag, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_mag, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__65)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_mag, __pyx_t_2) < 0) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":364
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_31setepsxx, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_setepsxx, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__66)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_setepsxx, __pyx_t_2) < 0) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":366
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_33setepsyy, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_setepsyy, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_setepsyy, __pyx_t_2) < 0) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":368
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_35setepszz, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_setepszz, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__68)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_setepszz, __pyx_t_2) < 0) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "Pythonreflectivity.pyx":370
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_37setepsg, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer_setepsg, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__69)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_18Pythonreflectivity_Layer, __pyx_n_s_setepsg, __pyx_t_2) < 0) __PYX_ERR(0, 370, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_18Pythonreflectivity_Layer);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_39__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer___reduce_cython, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__70)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_5Layer_41__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Layer___setstate_cython, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__71)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_1Generate_structure, 0, __pyx_n_s_Generate_structure, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__73)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__74);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Generate_structure, __pyx_t_2) < 0) __PYX_ERR(0, 4432, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_18Pythonreflectivity_3Reflectivity, 0, __pyx_n_s_Reflectivity, NULL, __pyx_n_s_Pythonreflectivity, __pyx_d, ((PyObject *)__pyx_codeobj__76)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__77);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Reflectivity, __pyx_t_2) < 0) __PYX_ERR(0, 4451, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":1
 * import cython             # <<<<<<<<<<<<<<
 * from libc.stdlib cimport malloc, free
 * cimport numpy as np
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init Pythonreflectivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init Pythonreflectivity");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;
            return kwvalues[i];
        }
    }
    return NULL;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
    Py_ssize_t i, nkwargs = PyTuple_GET_SIZE(kwnames);
    PyObject *dict;
    dict = PyDict_New();
    if (unlikely(!dict))
        return NULL;
    for (i=0; i<nkwargs; i++) {
        PyObject *key = PyTuple_GET_ITEM(kwnames, i);
        if (unlikely(PyDict_SetItem(dict, key, kwvalues[i]) < 0))
            goto bad;
    }
    return dict;
bad:
    Py_DECREF(dict);
    return NULL;
}
#endif
#endif

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        Py_XDECREF(key); key = NULL;
        Py_XDECREF(value); value = NULL;
        if (kwds_is_tuple) {
            Py_ssize_t size;
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(kwds);
#else
            size = PyTuple_Size(kwds);
            if (size < 0) goto bad;
#endif
            if (pos >= size) break;
#if CYTHON_AVOID_BORROWED_REFS
            key = __Pyx_PySequence_ITEM(kwds, pos);
            if (!key) goto bad;
#elif CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kwds, pos);
#else
            key = PyTuple_GetItem(kwds, pos);
            if (!key) goto bad;
#endif
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(key);
#endif
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(value);
            Py_DECREF(key);
#endif
            key = NULL;
            value = NULL;
            continue;
        }
#if !CYTHON_AVOID_BORROWED_REFS
        Py_INCREF(key);
#endif
        Py_INCREF(value);
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    Py_XDECREF(key);
    Py_XDECREF(value);
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    Py_XDECREF(key);
    Py_XDECREF(value);
    return -1;
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    #endif
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) < 0) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL
        #if PY_VERSION_HEX < 0x03090000
        vectorcallfunc f = _PyVectorcall_Function(func);
        #else
        vectorcallfunc f = PyVectorcall_Function(func);
        #endif
        if (f) {
            return f(func, args, (size_t)nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, (size_t)nargs, NULL);
        }
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || !PyMapping_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyIntCompare */
static CYTHON_INLINE int __Pyx_PyInt_BoolNeObjC(PyObject *op1, PyObject *op2, long intval, long inplace) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_UNUSED_VAR(inplace);
    if (op1 == op2) {
        return 0;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        return (a != b);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = __Pyx_PyLong_DigitCount(op1);
        const digit* digits = __Pyx_PyLong_Digits(op1);
        if (intval == 0) {
            return (__Pyx_PyLong_IsZero(op1) != 1);
        } else if (intval < 0) {
            if (__Pyx_PyLong_IsNonNeg(op1))
                return 1;
            intval = -intval;
        } else {
            if (__Pyx_PyLong_IsNeg(op1))
                return 1;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        return (unequal != 0);
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
        return ((double)a != (double)b);
    }
    return __Pyx_PyObject_IsTrueAndDecref(
        PyObject_RichCompare(op1, op2, Py_NE));
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a + (unsigned long)b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {
    PyObject *runerr = NULL;
    Py_ssize_t key_value;
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError,
            "cannot fit '" __Pyx_FMT_TYPENAME "' into an index-sized integer", index_type_name);
        __Pyx_DECREF_TypeName(index_type_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem_Slow(PyObject *obj, PyObject *key) {
    __Pyx_TypeName obj_type_name;
    if (likely(PyType_Check(obj))) {
        PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(obj, __pyx_n_s_class_getitem);
        if (!meth) {
            PyErr_Clear();
        } else {
            PyObject *result = __Pyx_PyObject_CallOneArg(meth, key);
            Py_DECREF(meth);
            return result;
        }
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is not subscriptable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key) {
    PyTypeObject *tp = Py_TYPE(obj);
    PyMappingMethods *mm = tp->tp_as_mapping;
    PySequenceMethods *sm = tp->tp_as_sequence;
    if (likely(mm && mm->mp_subscript)) {
        return mm->mp_subscript(obj, key);
    }
    if (likely(sm && sm->sq_item)) {
        return __Pyx_PyObject_GetIndex(obj, key);
    }
    return __Pyx_PyObject_GetItem_Slow(obj, key);
}
#endif

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kw,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kw, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kw))) {
        Py_ssize_t kwsize;
#if CYTHON_ASSUME_SAFE_MACROS
        kwsize = PyTuple_GET_SIZE(kw);
#else
        kwsize = PyTuple_Size(kw);
        if (kwsize < 0) return 0;
#endif
        if (unlikely(kwsize == 0))
            return 1;
        if (!kw_allowed) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, 0);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            goto invalid_keyword;
        }
#if PY_VERSION_HEX < 0x03090000
        for (pos = 0; pos < kwsize; pos++) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, pos);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
        }
#endif
        return 1;
    }
    while (PyDict_Next(kw, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if (!kw_allowed && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (!r) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* PyIntCompare */
static CYTHON_INLINE int __Pyx_PyInt_BoolEqObjC(PyObject *op1, PyObject *op2, long intval, long inplace) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_UNUSED_VAR(inplace);
    if (op1 == op2) {
        return 1;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        return (a == b);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = __Pyx_PyLong_DigitCount(op1);
        const digit* digits = __Pyx_PyLong_Digits(op1);
        if (intval == 0) {
            return (__Pyx_PyLong_IsZero(op1) == 1);
        } else if (intval < 0) {
            if (__Pyx_PyLong_IsNonNeg(op1))
                return 0;
            intval = -intval;
        } else {
            if (__Pyx_PyLong_IsNeg(op1))
                return 0;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        return (unequal == 0);
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
        return ((double)a == (double)b);
    }
    return __Pyx_PyObject_IsTrueAndDecref(
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && PY_VERSION_HEX < 0x030d0000
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* ModFloat[double] */
static CYTHON_INLINE double __Pyx_mod_double(double a, double b) {
    double r = fmod(a, b);
    r += ((r != 0) & ((r < 0) ^ (b < 0))) * b;
    return r;
}

/* ModInt[long] */
static CYTHON_INLINE long __Pyx_mod_long(long a, long b) {
    long r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

/* SetItemInt */
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (unlikely(!j)) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,
                                               CYTHON_NCP_UNUSED int wraparound, CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_ass_subscript) {
            int r;
            PyObject *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return -1;
            r = mm->mp_ass_subscript(o, key, v);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return -1;
                    PyErr_Clear();
                }
            }
            return sm->sq_ass_item(o, i, v);
        }
    }
#else
    if (is_list || !PyMapping_Check(o))
    {
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

/* RaiseUnboundLocalError */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* FixUpExtensionType */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg[2] = {NULL, NULL};
    return __Pyx_PyObject_FastCall(func, arg + 1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n;
#if CYTHON_ASSUME_SAFE_MACROS
    n = PyTuple_GET_SIZE(bases);
#else
    n = PyTuple_Size(bases);
    if (n < 0) return -1;
#endif
    for (i = 1; i < n; i++)
    {
#if CYTHON_AVOID_BORROWED_REFS
        PyObject *b0 = PySequence_GetItem(bases, i);
        if (!b0) return -1;
#elif CYTHON_ASSUME_SAFE_MACROS
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *b0 = PyTuple_GetItem(bases, i);
        if (!b0) return -1;
#endif
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
        if (dictoffset == 0)
        {
            Py_ssize_t b_dictoffset = 0;
#if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
            b_dictoffset = b->tp_dictoffset;
#else
            PyObject *py_b_dictoffset = PyObject_GetAttrString((PyObject*)b, "__dictoffset__");
            if (!py_b_dictoffset) goto dictoffset_return;
            b_dictoffset = PyLong_AsSsize_t(py_b_dictoffset);
            Py_DECREF(py_b_dictoffset);
            if (b_dictoffset == -1 && PyErr_Occurred()) goto dictoffset_return;
#endif
            if (b_dictoffset) {
                {
                    __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
                    PyErr_Format(PyExc_TypeError,
                        "extension type '%.200s' has no __dict__ slot, "
                        "but base type '" __Pyx_FMT_TYPENAME "' has: "
                        "either add 'cdef dict __dict__' to the extension type "
                        "or add '__slots__ = [...]' to the base type",
                        type_name, b_name);
                    __Pyx_DECREF_TypeName(b_name);
                }
#if !(CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY)
              dictoffset_return:
#endif
#if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(b0);
#endif
                return -1;
            }
        }
#if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(b0);
#endif
    }
    return 0;
}
#endif

/* PyType_Ready */
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyTypeObject *type, void *vtable) {
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
    if (unlikely(!ob))
        goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(PyObject_SetAttr((PyObject *) type, __pyx_n_s_pyx_vtable, ob) < 0))
#else
    if (unlikely(PyDict_SetItem(type->tp_dict, __pyx_n_s_pyx_vtable, ob) < 0))
#endif
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* GetVTable */
static void* __Pyx_GetVtable(PyTypeObject *type) {
    void* ptr;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *ob = PyObject_GetAttr((PyObject *)type, __pyx_n_s_pyx_vtable);
#else
    PyObject *ob = PyObject_GetItem(type->tp_dict, __pyx_n_s_pyx_vtable);
#endif
    if (!ob)
        goto bad;
    ptr = PyCapsule_GetPointer(ob, 0);
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* MergeVTables */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type) {
    int i;
    void** base_vtables;
    __Pyx_TypeName tp_base_name;
    __Pyx_TypeName base_name;
    void* unknown = (void*)-1;
    PyObject* bases = type->tp_bases;
    int base_depth = 0;
    {
        PyTypeObject* base = type->tp_base;
        while (base) {
            base_depth += 1;
            base = base->tp_base;
        }
    }
    base_vtables = (void**) malloc(sizeof(void*) * (size_t)(base_depth + 1));
    base_vtables[0] = unknown;
    for (i = 1; i < PyTuple_GET_SIZE(bases); i++) {
        void* base_vtable = __Pyx_GetVtable(((PyTypeObject*)PyTuple_GET_ITEM(bases, i)));
        if (base_vtable != NULL) {
            int j;
            PyTypeObject* base = type->tp_base;
            for (j = 0; j < base_depth; j++) {
                if (base_vtables[j] == unknown) {
                    base_vtables[j] = __Pyx_GetVtable(base);
                    base_vtables[j + 1] = unknown;
                }
                if (base_vtables[j] == base_vtable) {
                    break;
                } else if (base_vtables[j] == NULL) {
                    goto bad;
                }
                base = base->tp_base;
            }
        }
    }
    PyErr_Clear();
    free(base_vtables);
    return 0;
bad:
    tp_base_name = __Pyx_PyType_GetName(type->tp_base);
    base_name = __Pyx_PyType_GetName((PyTypeObject*)PyTuple_GET_ITEM(bases, i));
    PyErr_Format(PyExc_TypeError,
        "multiple bases have vtable conflict: '" __Pyx_FMT_TYPENAME "' and '" __Pyx_FMT_TYPENAME "'", tp_base_name, base_name);
    __Pyx_DECREF_TypeName(tp_base_name);
    __Pyx_DECREF_TypeName(base_name);
    free(base_vtables);
    return -1;
}
#endif

/* SetupReduce */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStrNoError(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred()) {
        __Pyx_TypeName type_obj_name =
            __Pyx_PyType_GetName((PyTypeObject*)type_obj);
        PyErr_Format(PyExc_RuntimeError,
            "Unable to initialize pickling for " __Pyx_FMT_TYPENAME, type_obj_name);
        __Pyx_DECREF_TypeName(type_obj_name);
    }
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}
#endif

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType_3_0_11
#define __PYX_HAVE_RT_ImportType_3_0_11
static PyTypeObject *__Pyx_ImportType_3_0_11(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_11 check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize+itemsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_3_0_11 &&
            ((size_t)basicsize > size || (size_t)(basicsize + itemsize) < size)) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd-%zd from PyObject",
            module_name, class_name, size, basicsize, basicsize+itemsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_3_0_11 && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.') != NULL) {
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportDottedModule */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
    if (likely(PyTuple_GET_SIZE(parts_tuple) == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
#if PY_MAJOR_VERSION < 3
        PyExc_ImportError,
        "No module named '%s'", PyString_AS_STRING(partial_name));
#else
#if PY_VERSION_HEX >= 0x030600B1
        PyExc_ModuleNotFoundError,
#else
        PyExc_ImportError,
#endif
        "No module named '%U'", partial_name);
#endif
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
    nparts = PyTuple_GET_SIZE(parts_tuple);
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = PySequence_ITEM(parts_tuple, i);
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
#endif
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if PY_MAJOR_VERSION < 3
    PyObject *module, *from_list, *star = __pyx_n_s__21;
    CYTHON_UNUSED_VAR(parts_tuple);
    from_list = PyList_New(1);
    if (unlikely(!from_list))
        return NULL;
    Py_INCREF(star);
    PyList_SET_ITEM(from_list, 0, star);
    module = __Pyx_Import(name, from_list, 0);
    Py_DECREF(from_list);
    return module;
#else
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
#endif
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030400B1
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_n_s_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_n_s_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    return __Pyx_PyImport_AddModuleRef((char*) __PYX_ABI_MODULE_NAME);
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    if (__Pyx_CyFunction_Check(func)) {
        return PyCFunction_GetFunction(((__pyx_CyFunctionObject*)func)->func) == (PyCFunction) cfunc;
    } else if (PyCFunction_Check(func)) {
        return PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
    }
    return 0;
}
#else
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    return __Pyx_CyOrPyCFunction_Check(func) && __Pyx_CyOrPyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
}
#endif
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_doc = PyObject_GetAttrString(op->func, "__doc__");
        if (unlikely(!op->func_doc)) return NULL;
#else
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
#endif
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_name = PyObject_GetAttrString(op->func, "__name__");
#elif PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = __Pyx_PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = __Pyx_PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
#if CYTHON_ASSUME_SAFE_MACROS
        PyList_SET_ITEM(fromlist, 0, marker);
#else
        if (unlikely(PyList_SetItem(fromlist, 0, marker) < 0)) {
            Py_DECREF(marker);
            Py_DECREF(fromlist);
            return NULL;
        }
#endif
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *
__Pyx_CyFunction_get_module(__pyx_CyFunctionObject *op, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_GetAttrString(op->func, "__module__");
}
static int
__Pyx_CyFunction_set_module(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_SetAttrString(op->func, "__module__", value);
}
#endif
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", (getter)__Pyx_CyFunction_get_module, (setter)__Pyx_CyFunction_set_module, 0, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#endif
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
#endif
    if (unlikely(op == NULL))
        return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    op->func = PyCFunction_NewEx(ml, (PyObject*)op, module);
    if (unlikely(!op->func)) return NULL;
#endif
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
#if !CYTHON_COMPILING_IN_LIMITED_API
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
#endif
    Py_XINCREF(closure);
    op->func_closure = closure;
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_XINCREF(module);
    cf->m_module = module;
#endif
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_CLEAR(m->func);
#else
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
#endif
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(m->func);
#else
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
#endif
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
#endif
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *f = ((__pyx_CyFunctionObject*)func)->func;
    PyObject *py_name = NULL;
    PyCFunction meth;
    int flags;
    meth = PyCFunction_GetFunction(f);
    if (unlikely(!meth)) return NULL;
    flags = PyCFunction_GetFlags(f);
    if (unlikely(flags < 0)) return NULL;
#else
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    int flags = f->m_ml->ml_flags;
#endif
    Py_ssize_t size;
    switch (flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 0))
                return (*meth)(self, NULL);
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = __Pyx_PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
#if CYTHON_COMPILING_IN_LIMITED_API
    py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
    if (!py_name) return NULL;
    PyErr_Format(PyExc_TypeError, "%.200S() takes no keyword arguments",
                 py_name);
    Py_DECREF(py_name);
#else
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
#endif
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *self, *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)func)->func);
    if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
    self = ((PyCFunctionObject*)func)->m_self;
#endif
    result = __Pyx_CyFunction_CallMethod(func, self, arg, kw);
    return result;
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
#if CYTHON_ASSUME_SAFE_MACROS
        argc = PyTuple_GET_SIZE(args);
#else
        argc = PyTuple_Size(args);
        if (unlikely(!argc) < 0) return NULL;
#endif
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if PY_VERSION_HEX >= 0x030d00A4
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result;
        result = PyObject_Call(replace, __pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    #if __PYX_LIMITED_VERSION_HEX < 0x030780000
    {
        PyObject *compiled = NULL, *result = NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "code", code))) return NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "type", (PyObject*)(&PyType_Type)))) return NULL;
        compiled = Py_CompileString(
            "out = type(code)(\n"
            "  code.co_argcount, code.co_kwonlyargcount, code.co_nlocals, code.co_stacksize,\n"
            "  code.co_flags, code.co_code, code.co_consts, code.co_names,\n"
            "  code.co_varnames, code.co_filename, co_name, co_firstlineno,\n"
            "  code.co_lnotab)\n", "<dummy>", Py_file_input);
        if (!compiled) return NULL;
        result = PyEval_EvalCode(compiled, scratch_dict, scratch_dict);
        Py_DECREF(compiled);
        if (!result) PyErr_Print();
        Py_DECREF(result);
        result = PyDict_GetItemString(scratch_dict, "out");
        if (result) Py_INCREF(result);
        return result;
    }
    #else
    return NULL;
    #endif
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
    if (unlikely(!code_object)) goto bad;
    py_py_line = PyLong_FromLong(py_line);
    if (unlikely(!py_py_line)) goto bad;
    py_funcname = PyUnicode_FromString(funcname);
    if (unlikely(!py_funcname)) goto bad;
    dict = PyDict_New();
    if (unlikely(!dict)) goto bad;
    {
        PyObject *old_code_object = code_object;
        code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
        Py_DECREF(old_code_object);
    }
    if (unlikely(!code_object)) goto bad;
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* Declarations */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if ((b.imag == 0) && (a.real >= 0)) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* FromPy */
static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject* o) {
    Py_complex cval;
#if !CYTHON_COMPILING_IN_PYPY
    if (PyComplex_CheckExact(o))
        cval = ((PyComplexObject *)o)->cval;
    else
#endif
        cval = PyComplex_AsCComplex(o);
    return __pyx_t_double_complex_from_parts(
               (double)cval.real,
               (double)cval.imag);
}

/* Declarations */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if ((b.imag == 0) && (a.real >= 0)) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (int) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(int) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(int) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        int val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (int) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (int) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (int) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (int) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((int) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((int) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (int) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(int));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntFromPy */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(size_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(size_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(size_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) >= 2 * PyLong_SHIFT)) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(size_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) >= 3 * PyLong_SHIFT)) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(size_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) >= 4 * PyLong_SHIFT)) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (size_t) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(size_t) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(size_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(size_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(size_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(size_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(size_t) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(size_t) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        size_t val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (size_t) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (size_t) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (size_t) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (size_t) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(size_t) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((size_t) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(size_t) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((size_t) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((size_t) 1) << (sizeof(size_t) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (size_t) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (long) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(long) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(long) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        long val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (long) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (long) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (long) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (long) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((long) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((long) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (long) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XDECREF(name);
        name = __Pyx_NewRef(__pyx_n_s__78);
    }
    return name;
}
#endif

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030B00A4
    return Py_Version & ~0xFFUL;
#else
    const char* rt_version = Py_GetVersion();
    unsigned long version = 0;
    unsigned long factor = 0x01000000UL;
    unsigned int digit = 0;
    int i = 0;
    while (factor) {
        while ('0' <= rt_version[i] && rt_version[i] <= '9') {
            digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
            ++i;
        }
        version += factor * digit;
        if (rt_version[i] != '.')
            break;
        digit = 0;
        factor >>= 8;
        ++i;
    }
    return version;
#endif
}
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
